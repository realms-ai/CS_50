
;; Function main (main, funcdef_no=0, decl_uid=1786, cgraph_uid=0)

Creating trace 0 : start at note 1
Creating trace 1 : start at note 475
Creating trace 2 : start at code_label 19
Creating trace 3 : start at code_label 36
Creating trace 4 : start at code_label 39
Creating trace 5 : start at code_label 67
Creating trace 6 : start at code_label 83
Creating trace 7 : start at code_label 87
Creating trace 8 : start at code_label 107
Creating trace 9 : start at code_label 277
Creating trace 10 : start at code_label 139
Creating trace 11 : start at code_label 169
Creating trace 12 : start at code_label 172
Creating trace 13 : start at code_label 179
Creating trace 14 : start at code_label 211
Creating trace 15 : start at code_label 214
Creating trace 16 : start at code_label 219
Creating trace 17 : start at code_label 265
Creating trace 18 : start at code_label 268
Creating trace 19 : start at code_label 275
Creating trace 20 : start at code_label 299
Creating trace 21 : start at code_label 345
Creating trace 22 : start at code_label 396
Creating trace 23 : start at code_label 409
Creating trace 24 : start at note 476
Processing trace 0 : start at note 1
   saw edge from trace 0 to 1 (via fallthru 0)
	push trace 1 to worklist
Processing trace 1 : start at note 475
   saw edge from trace 1 to 2 (via jump_insn 9)
	push trace 2 to worklist
   saw edge from trace 1 to 2 (via jump_insn 12)
   saw edge from trace 1 to 22 (via jump_insn 415)
	push trace 22 to worklist
Processing trace 22 : start at code_label 396
   saw edge from trace 22 to 23 (via jump_insn 406)
	push trace 23 to worklist
Processing trace 23 : start at code_label 409
   saw edge from trace 23 to 24 (via fallthru 0)
	push trace 24 to worklist
Processing trace 24 : start at note 476
Processing trace 2 : start at code_label 19
   saw edge from trace 2 to 3 (via jump_insn 30)
	push trace 3 to worklist
   saw edge from trace 2 to 4 (via jump_insn 417)
	push trace 4 to worklist
Processing trace 4 : start at code_label 39
   saw edge from trace 4 to 5 (via jump_insn 58)
	push trace 5 to worklist
   saw edge from trace 4 to 22 (via jump_insn 419)
Processing trace 5 : start at code_label 67
   saw edge from trace 5 to 6 (via jump_insn 77)
	push trace 6 to worklist
   saw edge from trace 5 to 7 (via jump_insn 421)
	push trace 7 to worklist
Processing trace 7 : start at code_label 87
   saw edge from trace 7 to 8 (via jump_insn 97)
	push trace 8 to worklist
   saw edge from trace 7 to 22 (via jump_insn 423)
Processing trace 8 : start at code_label 107
   saw edge from trace 8 to 19 (via jump_insn 425)
	push trace 19 to worklist
Processing trace 19 : start at code_label 275
   saw edge from trace 19 to 9 (via jump_insn 279)
	push trace 9 to worklist
   saw edge from trace 19 to 20 (via jump_insn 286)
	push trace 20 to worklist
   saw edge from trace 19 to 22 (via jump_insn 431)
Processing trace 20 : start at code_label 299
   saw edge from trace 20 to 21 (via jump_insn 336)
	push trace 21 to worklist
   saw edge from trace 20 to 22 (via jump_insn 433)
Processing trace 21 : start at code_label 345
   saw edge from trace 21 to 22 (via fallthru 0)
Processing trace 9 : start at code_label 277
   saw edge from trace 9 to 10 (via jump_insn 132)
	push trace 10 to worklist
   saw edge from trace 9 to 13 (via jump_insn 135)
	push trace 13 to worklist
   saw edge from trace 9 to 13 (via jump_insn 138)
   saw edge from trace 9 to 10 (via fallthru 0)
Processing trace 13 : start at code_label 179
   saw edge from trace 13 to 16 (via jump_insn 191)
	push trace 16 to worklist
   saw edge from trace 13 to 14 (via fallthru 0)
	push trace 14 to worklist
Processing trace 14 : start at code_label 211
   saw edge from trace 14 to 15 (via jump_insn 200)
	push trace 15 to worklist
   saw edge from trace 14 to 14 (via jump_insn 213)
   saw edge from trace 14 to 15 (via fallthru 0)
Processing trace 15 : start at code_label 214
   saw edge from trace 15 to 18 (via jump_insn 429)
	push trace 18 to worklist
Processing trace 18 : start at code_label 268
   saw edge from trace 18 to 19 (via fallthru 0)
Processing trace 16 : start at code_label 219
   saw edge from trace 16 to 18 (via jump_insn 222)
   saw edge from trace 16 to 17 (via jump_insn 259)
	push trace 17 to worklist
   saw edge from trace 16 to 17 (via fallthru 0)
Processing trace 17 : start at code_label 265
   saw edge from trace 17 to 18 (via fallthru 0)
Processing trace 10 : start at code_label 139
   saw edge from trace 10 to 18 (via jump_insn 149)
   saw edge from trace 10 to 11 (via fallthru 0)
	push trace 11 to worklist
Processing trace 11 : start at code_label 169
   saw edge from trace 11 to 12 (via jump_insn 158)
	push trace 12 to worklist
   saw edge from trace 11 to 11 (via jump_insn 171)
   saw edge from trace 11 to 12 (via fallthru 0)
Processing trace 12 : start at code_label 172
   saw edge from trace 12 to 18 (via jump_insn 427)
Processing trace 6 : start at code_label 83
   saw edge from trace 6 to 7 (via fallthru 0)
Processing trace 3 : start at code_label 36
   saw edge from trace 3 to 4 (via fallthru 0)
(note 1 0 6 NOTE_INSN_DELETED)

(note 6 1 471 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 471 6 485 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0 S4 A8])
        (reg/f:SI 6 bp)) speller.c:27 43 {*pushsi2}
     (nil))

(note 485 471 480 2 NOTE_INSN_CFI_LABEL)

(note 480 485 481 2
	.cfi_def_cfa_offset 8
	 NOTE_INSN_CFI)

(note 481 480 472 2
	.cfi_offset 5, -8
	 NOTE_INSN_CFI)

(insn/f 472 481 486 2 (set (reg/f:SI 6 bp)
        (reg/f:SI 7 sp)) speller.c:27 64 {*movsi_internal}
     (nil))

(note 486 472 482 2 NOTE_INSN_CFI_LABEL)

(note 482 486 473 2
	.cfi_def_cfa_register 5
	 NOTE_INSN_CFI)

(insn 473 482 474 2 (parallel [
            (set (reg/f:SI 7 sp)
                (and:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:27 377 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn/f 474 473 475 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -320 [0xfffffffffffffec0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) speller.c:27 923 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 475 474 2 2 NOTE_INSN_PROLOGUE_END)

(insn 2 475 3 2 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 argv+0 S4 A32])) speller.c:27 64 {*movsi_internal}
     (nil))

(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])
        (reg/f:SI 0 ax [116])) speller.c:27 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [116])
        (nil)))

(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 316 [0x13c])) [0 D.1941+0 S4 A32])
                (unspec:SI [
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) speller.c:27 938 {stack_tls_protect_set_si}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil))))

(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) speller.c:29 6 {*cmpsi_1}
     (nil))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)

(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:29 6 {*cmpsi_1}
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0xb6a30180 *.LC0>)) speller.c:31 64 {*movsi_internal}
     (nil))

(call_insn 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:31 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 16 15 415 4 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 1 [0x1])) speller.c:32 64 {*movsi_internal}
     (nil))

(jump_insn 415 16 416 4 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

(barrier 416 415 19)

(code_label 19 416 20 5 2 "" [2 uses])

(note 20 19 467 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 467 20 22 5 (set (reg:DF 8 st)
        (const_double:DF 0.0 [0x0.0p+0])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 22 467 468 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])
        (reg:DF 8 st)) speller.c:39 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 468 22 24 5 (set (reg:DF 8 st)
        (const_double:DF 0.0 [0x0.0p+0])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 24 468 469 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])
        (reg:DF 8 st)) speller.c:39 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 469 24 26 5 (set (reg:DF 8 st)
        (const_double:DF 0.0 [0x0.0p+0])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 26 469 470 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])
        (reg:DF 8 st)) speller.c:39 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 470 26 28 5 (set (reg:DF 8 st)
        (const_double:DF 0.0 [0x0.0p+0])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 28 470 29 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])
        (reg:DF 8 st)) speller.c:39 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:42 6 {*cmpsi_1}
     (nil))

(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) speller.c:42 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:42 64 {*movsi_internal}
     (nil))

(insn 33 32 417 6 (set (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:42 64 {*movsi_internal}
     (nil))

(jump_insn 417 33 418 6 (set (pc)
        (label_ref 39)) 611 {jump}
     (nil)
 -> 39)

(barrier 418 417 36)

(code_label 36 418 37 7 4 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 (set (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0xb6a301e0 *.LC2>)) speller.c:42 64 {*movsi_internal}
     (nil))

(code_label 39 38 40 8 5 "" [1 uses])

(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 464 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])
        (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])) speller.c:42 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])
        (nil)))

(insn 464 41 43 8 (set (reg:SI 0 ax [122])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:45 243 {*leasi}
     (nil))

(insn 43 464 44 8 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [122])) speller.c:45 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [122])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(insn 44 43 45 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:45 64 {*movsi_internal}
     (nil))

(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:45 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 46 45 47 8 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:46 64 {*movsi_internal}
     (nil))

(insn 47 46 48 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [123])) speller.c:46 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [123])
        (nil)))

(call_insn 48 47 50 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("load") [flags 0x41]  <function_decl 0xb6a0e680 load>) [0 load S1 A8])
            (const_int 4 [0x4]))) speller.c:46 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 50 48 465 8 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 53 [0x35])) [0 loaded+0 S1 A8])
        (reg:QI 0 ax [124])) speller.c:46 66 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [124])
        (nil)))

(insn 465 50 52 8 (set (reg:SI 0 ax [125])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:47 243 {*leasi}
     (nil))

(insn 52 465 53 8 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [125])) speller.c:47 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [125])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 53 52 54 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:47 64 {*movsi_internal}
     (nil))

(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:47 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 55 54 466 8 (set (reg:QI 0 ax [126])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 53 [0x35])) [0 loaded+0 S1 A8])) speller.c:50 66 {*movqi_internal}
     (nil))

(insn 466 55 57 8 (parallel [
            (set (reg:SI 0 ax [orig:62 D.1856 ] [62])
                (xor:SI (reg:SI 0 ax [126])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:50 397 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 57 466 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.1856 ] [62])
            (const_int 0 [0]))) speller.c:50 0 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:62 D.1856 ] [62])
        (nil)))

(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) speller.c:50 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)

(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:52 64 {*movsi_internal}
     (nil))

(insn 61 60 62 9 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [127])) speller.c:52 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [127])
        (nil)))

(insn 62 61 63 9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0xb6a30240 *.LC3>)) speller.c:52 64 {*movsi_internal}
     (nil))

(call_insn 63 62 64 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:52 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 64 63 419 9 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 2 [0x2])) speller.c:53 64 {*movsi_internal}
     (nil))

(jump_insn 419 64 420 9 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

(barrier 420 419 67)

(code_label 67 420 68 10 6 "" [1 uses])

(note 68 67 462 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 462 68 70 10 (set (reg:SI 0 ax [128])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:57 243 {*leasi}
     (nil))

(insn 70 462 463 10 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [128])) speller.c:57 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [128])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 463 70 72 10 (set (reg:SI 0 ax [129])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:57 243 {*leasi}
     (nil))

(insn 72 463 73 10 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [129])) speller.c:57 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [129])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(call_insn 73 72 75 10 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:57 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 75 73 76 10 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])
        (reg:DF 8 st)) speller.c:57 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 76 75 77 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:60 6 {*cmpsi_1}
     (nil))

(jump_insn 77 76 78 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) speller.c:60 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)

(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 11 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(insn 80 79 421 11 (set (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_21(D) + 8B]+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(jump_insn 421 80 422 11 (set (pc)
        (label_ref 87)) 611 {jump}
     (nil)
 -> 87)

(barrier 422 421 83)

(code_label 83 422 84 12 7 "" [1 uses])

(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 12 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(insn 86 85 87 12 (set (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(code_label 87 86 88 13 8 "" [1 uses])

(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])
        (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])) speller.c:60 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])
        (nil)))

(insn 90 89 91 13 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0xb6a302a0 *.LC4>)) speller.c:61 64 {*movsi_internal}
     (nil))

(insn 91 90 92 13 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:61 64 {*movsi_internal}
     (nil))

(insn 92 91 93 13 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [133])) speller.c:61 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [133])
        (nil)))

(call_insn 93 92 95 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fopen") [flags 0x41]  <function_decl 0xb69f3880 fopen>) [0 fopen S1 A8])
            (const_int 8 [0x8]))) speller.c:61 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 95 93 96 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])
        (reg:SI 0 ax [134])) speller.c:61 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [134])
        (nil)))

(insn 96 95 97 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 80 [0x50])) [0 fp+0 S4 A32])
            (const_int 0 [0]))) speller.c:62 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 97 96 98 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) speller.c:62 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 107)

(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 14 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:64 64 {*movsi_internal}
     (nil))

(insn 100 99 101 14 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [135])) speller.c:64 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [135])
        (nil)))

(insn 101 100 102 14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0xb6a30300 *.LC5>)) speller.c:64 64 {*movsi_internal}
     (nil))

(call_insn 102 101 103 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:64 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 103 102 104 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:65 632 {*call_value}
     (expr_list:REG_UNUSED (reg:QI 0 ax)
        (nil))
    (nil))

(insn 104 103 423 14 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 3 [0x3])) speller.c:66 64 {*movsi_internal}
     (nil))

(jump_insn 423 104 424 14 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

(barrier 424 423 107)

(code_label 107 424 108 15 9 "" [1 uses])

(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0xb6a30360 *.LC6>)) speller.c:70 64 {*movsi_internal}
     (nil))

(call_insn 110 109 111 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:70 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 111 110 112 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 112 111 113 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 113 112 114 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 words+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 114 113 115 15 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:78 64 {*movsi_internal}
     (nil))

(insn 115 114 116 15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [136])) speller.c:78 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [136])
        (nil)))

(call_insn 116 115 118 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 118 116 425 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [137])) speller.c:78 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [137])
        (nil)))

(jump_insn 425 118 426 15 (set (pc)
        (label_ref 275)) speller.c:78 611 {jump}
     (nil)
 -> 275)

(barrier 426 425 277)

(code_label 277 426 121 16 21 "" [1 uses])

(note 121 277 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 122 121 124 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:81 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 124 122 125 16 (set (reg/f:SI 0 ax [orig:64 D.1869 ] [64])
        (mem/f:SI (reg/f:SI 0 ax [orig:63 D.1868 ] [63]) [0 *D.1868_38+0 S4 A32])) speller.c:81 64 {*movsi_internal}
     (nil))

(insn 125 124 126 16 (set (reg:SI 1 dx [orig:65 c.2 ] [65])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:81 64 {*movsi_internal}
     (nil))

(insn 126 125 127 16 (parallel [
            (set (reg:SI 1 dx [orig:66 D.1871 ] [66])
                (ashift:SI (reg:SI 1 dx [orig:65 c.2 ] [65])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 127 126 128 16 (parallel [
            (set (reg/f:SI 0 ax [orig:67 D.1872 ] [67])
                (plus:SI (reg/f:SI 0 ax [orig:64 D.1869 ] [64])
                    (reg:SI 1 dx [orig:66 D.1871 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:66 D.1871 ] [66])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 128 127 129 16 (set (reg:HI 0 ax [orig:68 D.1873 ] [68])
        (mem:HI (reg/f:SI 0 ax [orig:67 D.1872 ] [67]) [0 *D.1872_42+0 S2 A16])) speller.c:81 65 {*movhi_internal}
     (nil))

(insn 129 128 130 16 (set (reg:SI 0 ax [orig:69 D.1874 ] [69])
        (zero_extend:SI (reg:HI 0 ax [orig:68 D.1873 ] [68]))) speller.c:81 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 130 129 131 16 (parallel [
            (set (reg:SI 0 ax [orig:70 D.1875 ] [70])
                (and:SI (reg:SI 0 ax [orig:69 D.1874 ] [69])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 377 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 131 130 132 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:70 D.1875 ] [70])
            (const_int 0 [0]))) speller.c:81 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:70 D.1875 ] [70])
        (nil)))

(jump_insn 132 131 133 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) speller.c:81 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 139)

(note 133 132 134 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int 39 [0x27]))) speller.c:81 6 {*cmpsi_1}
     (nil))

(jump_insn 135 134 136 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 179)

(note 136 135 137 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:81 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 138 137 139 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 179)

(code_label 139 138 140 19 11 "" [1 uses])

(note 140 139 141 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 461 19 (set (reg:SI 0 ax [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:84 64 {*movsi_internal}
     (nil))

(insn 461 141 144 19 (set (reg:SI 2 cx [139])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 270 [0x10e]))) speller.c:84 243 {*leasi}
     (nil))

(insn 144 461 145 19 (set (reg:SI 1 dx [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])) speller.c:84 64 {*movsi_internal}
     (nil))

(insn 145 144 146 19 (parallel [
            (set (reg/f:SI 1 dx [140])
                (plus:SI (reg:SI 2 cx [139])
                    (reg:SI 1 dx [141])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [139])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 146 145 147 19 (set (mem/j:QI (reg/f:SI 1 dx [140]) [0 word S1 A8])
        (reg:QI 0 ax [orig:96 D.1878 ] [96])) speller.c:84 66 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [140])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:96 D.1878 ] [96])
            (nil))))

(insn 147 146 148 19 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [0 index+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [0 index+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:85 250 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 148 147 149 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 45 [0x2d]))) speller.c:88 6 {*cmpsi_1}
     (nil))

(jump_insn 149 148 169 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 268)
            (pc))) speller.c:88 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 268)

(code_label 169 149 151 20 15 "" [1 uses])

(note 151 169 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 20 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 153 152 154 20 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [142])) speller.c:91 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [142])
        (nil)))

(call_insn 154 153 156 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:91 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 156 154 157 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [143])) speller.c:91 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [143])
        (nil)))

(insn 157 156 158 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:91 6 {*cmpsi_1}
     (nil))

(jump_insn 158 157 159 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) speller.c:91 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 172)

(note 159 158 160 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 160 159 162 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:91 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 162 160 163 21 (set (reg/f:SI 0 ax [orig:98 D.1883 ] [98])
        (mem/f:SI (reg/f:SI 0 ax [orig:97 D.1882 ] [97]) [0 *D.1882_81+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 163 162 164 21 (set (reg:SI 1 dx [orig:99 c.3 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 164 163 165 21 (parallel [
            (set (reg:SI 1 dx [orig:100 D.1885 ] [100])
                (ashift:SI (reg:SI 1 dx [orig:99 c.3 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 165 164 166 21 (parallel [
            (set (reg/f:SI 0 ax [orig:101 D.1886 ] [101])
                (plus:SI (reg/f:SI 0 ax [orig:98 D.1883 ] [98])
                    (reg:SI 1 dx [orig:100 D.1885 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:100 D.1885 ] [100])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 166 165 167 21 (set (reg:HI 0 ax [orig:102 D.1887 ] [102])
        (mem:HI (reg/f:SI 0 ax [orig:101 D.1886 ] [101]) [0 *D.1886_85+0 S2 A16])) speller.c:91 65 {*movhi_internal}
     (nil))

(insn 167 166 168 21 (set (reg:SI 0 ax [orig:103 D.1888 ] [103])
        (zero_extend:SI (reg:HI 0 ax [orig:102 D.1887 ] [102]))) speller.c:91 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 168 167 170 21 (parallel [
            (set (reg:SI 0 ax [orig:104 D.1889 ] [104])
                (and:SI (reg:SI 0 ax [orig:103 D.1888 ] [103])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 377 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 170 168 171 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 D.1889 ] [104])
            (const_int 0 [0]))) speller.c:91 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:104 D.1889 ] [104])
        (nil)))

(jump_insn 171 170 172 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) speller.c:91 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 169)

(code_label 172 171 173 22 14 "" [1 uses])

(note 173 172 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 427 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:94 64 {*movsi_internal}
     (nil))

(jump_insn 427 174 428 22 (set (pc)
        (label_ref 268)) speller.c:88 611 {jump}
     (nil)
 -> 268)

(barrier 428 427 179)

(code_label 179 428 180 23 12 "" [2 uses])

(note 180 179 181 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 181 180 183 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:99 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 183 181 184 23 (set (reg/f:SI 0 ax [orig:72 D.1891 ] [72])
        (mem/f:SI (reg/f:SI 0 ax [orig:71 D.1890 ] [71]) [0 *D.1890_46+0 S4 A32])) speller.c:99 64 {*movsi_internal}
     (nil))

(insn 184 183 185 23 (set (reg:SI 1 dx [orig:73 c.4 ] [73])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:99 64 {*movsi_internal}
     (nil))

(insn 185 184 186 23 (parallel [
            (set (reg:SI 1 dx [orig:74 D.1893 ] [74])
                (ashift:SI (reg:SI 1 dx [orig:73 c.4 ] [73])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 186 185 187 23 (parallel [
            (set (reg/f:SI 0 ax [orig:75 D.1894 ] [75])
                (plus:SI (reg/f:SI 0 ax [orig:72 D.1891 ] [72])
                    (reg:SI 1 dx [orig:74 D.1893 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:74 D.1893 ] [74])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 187 186 188 23 (set (reg:HI 0 ax [orig:76 D.1895 ] [76])
        (mem:HI (reg/f:SI 0 ax [orig:75 D.1894 ] [75]) [0 *D.1894_50+0 S2 A16])) speller.c:99 65 {*movhi_internal}
     (nil))

(insn 188 187 189 23 (set (reg:SI 0 ax [orig:77 D.1896 ] [77])
        (zero_extend:SI (reg:HI 0 ax [orig:76 D.1895 ] [76]))) speller.c:99 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 189 188 190 23 (parallel [
            (set (reg:SI 0 ax [orig:78 D.1897 ] [78])
                (and:SI (reg:SI 0 ax [orig:77 D.1896 ] [77])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 377 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 190 189 191 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:78 D.1897 ] [78])
            (const_int 0 [0]))) speller.c:99 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 D.1897 ] [78])
        (nil)))

(jump_insn 191 190 211 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) speller.c:99 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 219)

(code_label 211 191 193 24 19 "" [1 uses])

(note 193 211 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 24 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 195 194 196 24 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [144])) speller.c:102 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [144])
        (nil)))

(call_insn 196 195 198 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:102 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 198 196 199 24 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [145])) speller.c:102 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [145])
        (nil)))

(insn 199 198 200 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:102 6 {*cmpsi_1}
     (nil))

(jump_insn 200 199 201 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) speller.c:102 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 214)

(note 201 200 202 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 202 201 204 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:102 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 204 202 205 25 (set (reg/f:SI 0 ax [orig:80 D.1902 ] [80])
        (mem/f:SI (reg/f:SI 0 ax [orig:79 D.1901 ] [79]) [0 *D.1901_55+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 205 204 206 25 (set (reg:SI 1 dx [orig:81 c.5 ] [81])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 206 205 207 25 (parallel [
            (set (reg:SI 1 dx [orig:82 D.1904 ] [82])
                (ashift:SI (reg:SI 1 dx [orig:81 c.5 ] [81])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 207 206 208 25 (parallel [
            (set (reg/f:SI 0 ax [orig:83 D.1905 ] [83])
                (plus:SI (reg/f:SI 0 ax [orig:80 D.1902 ] [80])
                    (reg:SI 1 dx [orig:82 D.1904 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:82 D.1904 ] [82])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 208 207 209 25 (set (reg:HI 0 ax [orig:84 D.1906 ] [84])
        (mem:HI (reg/f:SI 0 ax [orig:83 D.1905 ] [83]) [0 *D.1905_59+0 S2 A16])) speller.c:102 65 {*movhi_internal}
     (nil))

(insn 209 208 210 25 (set (reg:SI 0 ax [orig:85 D.1907 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 D.1906 ] [84]))) speller.c:102 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 210 209 212 25 (parallel [
            (set (reg:SI 0 ax [orig:86 D.1908 ] [86])
                (and:SI (reg:SI 0 ax [orig:85 D.1907 ] [85])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 377 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 212 210 213 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 D.1908 ] [86])
            (const_int 0 [0]))) speller.c:102 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 D.1908 ] [86])
        (nil)))

(jump_insn 213 212 214 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) speller.c:102 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 211)

(code_label 214 213 215 26 18 "" [1 uses])

(note 215 214 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 429 26 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:105 64 {*movsi_internal}
     (nil))

(jump_insn 429 216 430 26 (set (pc)
        (label_ref 268)) 611 {jump}
     (nil)
 -> 268)

(barrier 430 429 219)

(code_label 219 430 220 27 17 "" [1 uses])

(note 220 219 221 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 27 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:109 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 222 221 223 27 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) speller.c:109 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 268)

(note 223 222 452 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 452 223 225 28 (set (reg:SI 1 dx [146])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 270 [0x10e]))) speller.c:112 243 {*leasi}
     (nil))

(insn 225 452 226 28 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])) speller.c:112 64 {*movsi_internal}
     (nil))

(insn 226 225 227 28 (parallel [
            (set (reg/f:SI 0 ax [147])
                (plus:SI (reg:SI 1 dx [146])
                    (reg:SI 0 ax [148])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [146])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 227 226 228 28 (set (mem/j:QI (reg/f:SI 0 ax [147]) [0 word S1 A8])
        (const_int 0 [0])) speller.c:112 66 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [147])
        (nil)))

(insn 228 227 453 28 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 64 [0x40])) [0 words+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 64 [0x40])) [0 words+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:115 250 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 453 228 230 28 (set (reg:SI 0 ax [149])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:118 243 {*leasi}
     (nil))

(insn 230 453 231 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [149])) speller.c:118 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [149])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(insn 231 230 232 28 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:118 64 {*movsi_internal}
     (nil))

(call_insn 232 231 454 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:118 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 454 232 234 28 (set (reg:SI 0 ax [150])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 270 [0x10e]))) speller.c:119 243 {*leasi}
     (nil))

(insn 234 454 235 28 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [150])) speller.c:119 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [150])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -50 [0xffffffffffffffce]))
            (nil))))

(call_insn 235 234 455 28 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("check") [flags 0x41]  <function_decl 0xb6a0e600 check>) [0 check S1 A8])
            (const_int 4 [0x4]))) speller.c:119 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 455 235 238 28 (set (reg:SI 0 ax [orig:88 D.1913 ] [88])
        (zero_extend:SI (reg:QI 0 ax [orig:87 D.1912 ] [87]))) speller.c:119 125 {*zero_extendqisi2_movzbl}
     (nil))

(insn 238 455 239 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 D.1913 ] [88])
            (const_int 0 [0]))) speller.c:119 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:88 D.1913 ] [88])
        (nil)))

(insn 239 238 456 28 (set (reg:QI 0 ax [orig:89 D.1914 ] [89])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) speller.c:119 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))

(insn 456 239 457 28 (parallel [
            (set (reg:SI 0 ax [orig:90 D.1915 ] [90])
                (xor:SI (reg:SI 0 ax [orig:89 D.1914 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 397 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 457 456 242 28 (set (reg:SI 0 ax [orig:91 D.1916 ] [91])
        (zero_extend:SI (reg:QI 0 ax [orig:90 D.1915 ] [90]))) speller.c:119 125 {*zero_extendqisi2_movzbl}
     (nil))

(insn 242 457 243 28 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
        (reg:QI 0 ax [orig:91 D.1916 ] [91])) speller.c:119 66 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:91 D.1916 ] [91])
        (nil)))

(insn 243 242 458 28 (parallel [
            (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                        (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
                (and:QI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                            (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 380 {*andqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 458 243 245 28 (set (reg:SI 0 ax [151])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:120 243 {*leasi}
     (nil))

(insn 245 458 246 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [151])) speller.c:120 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [151])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 246 245 247 28 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:120 64 {*movsi_internal}
     (nil))

(call_insn 247 246 248 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:120 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 248 247 438 28 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 88 [0x58])) [0 ti_check+0 S8 A64]))) speller.c:123 139 {*extenddfxf2_i387}
     (nil))

(insn 438 248 459 28 (set (mem/c:XF (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-304 S12 A128])
        (reg:XF 8 st)) speller.c:123 107 {*movxf_internal}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 459 438 250 28 (set (reg:SI 0 ax [152])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:123 243 {*leasi}
     (nil))

(insn 250 459 460 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [152])) speller.c:123 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [152])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 460 250 252 28 (set (reg:SI 0 ax [153])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:123 243 {*leasi}
     (nil))

(insn 252 460 253 28 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [153])) speller.c:123 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [153])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(call_insn 253 252 439 28 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:123 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 439 253 256 28 (set (reg:XF 8 st)
        (mem/c:XF (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-304 S12 A128])) speller.c:123 107 {*movxf_internal}
     (nil))

(insn 256 439 435 28 (set (reg:XF 9 st(1))
        (plus:XF (reg:XF 9 st(1))
            (reg:XF 8 st))) speller.c:123 772 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 435 256 258 28 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])
        (float_truncate:DF (reg:XF 8 st))) speller.c:123 151 {*truncxfdf2_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 258 435 259 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
            (const_int 0 [0]))) speller.c:126 0 {*cmpqi_ccno_1}
     (nil))

(jump_insn 259 258 260 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) speller.c:126 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 265)

(note 260 259 451 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 451 260 262 29 (set (reg:SI 0 ax [154])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 270 [0x10e]))) speller.c:128 243 {*leasi}
     (nil))

(insn 262 451 263 29 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [154])) speller.c:128 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [154])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -50 [0xffffffffffffffce]))
            (nil))))

(call_insn 263 262 264 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:128 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 264 263 265 29 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:129 250 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(code_label 265 264 266 30 20 "" [1 uses])

(note 266 265 267 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 30 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:133 64 {*movsi_internal}
     (nil))

(code_label 268 267 269 31 16 "" [4 uses])

(note 269 268 270 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 31 (set (reg/f:SI 0 ax [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:78 64 {*movsi_internal}
     (nil))

(insn 271 270 272 31 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [155])) speller.c:78 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [155])
        (nil)))

(call_insn 272 271 274 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 274 272 275 31 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [156])) speller.c:78 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [156])
        (nil)))

(code_label 275 274 276 32 10 "" [1 uses])

(note 276 275 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 278 276 279 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:78 6 {*cmpsi_1}
     (nil))

(jump_insn 279 278 280 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) speller.c:78 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 277)

(note 280 279 281 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 281 280 282 33 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:138 64 {*movsi_internal}
     (nil))

(insn 282 281 283 33 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [157])) speller.c:138 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [157])
        (nil)))

(call_insn 283 282 285 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("ferror") [flags 0x41]  <function_decl 0xb69f9e80 ferror>) [0 ferror S1 A8])
            (const_int 4 [0x4]))) speller.c:138 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 285 283 286 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:105 D.1923 ] [105])
            (const_int 0 [0]))) speller.c:138 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:105 D.1923 ] [105])
        (nil)))

(jump_insn 286 285 287 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) speller.c:138 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 299)

(note 287 286 288 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 289 34 (set (reg/f:SI 0 ax [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:140 64 {*movsi_internal}
     (nil))

(insn 289 288 290 34 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [158])) speller.c:140 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [158])
        (nil)))

(call_insn 290 289 291 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:140 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 291 290 292 34 (set (reg/f:SI 0 ax [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:141 64 {*movsi_internal}
     (nil))

(insn 292 291 293 34 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [159])) speller.c:141 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [159])
        (nil)))

(insn 293 292 294 34 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0xb6a303c0 *.LC7>)) speller.c:141 64 {*movsi_internal}
     (nil))

(call_insn 294 293 295 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:141 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 295 294 296 34 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:142 632 {*call_value}
     (expr_list:REG_UNUSED (reg:QI 0 ax)
        (nil))
    (nil))

(insn 296 295 431 34 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 4 [0x4])) speller.c:143 64 {*movsi_internal}
     (nil))

(jump_insn 431 296 432 34 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

(barrier 432 431 299)

(code_label 299 432 300 35 22 "" [1 uses])

(note 300 299 301 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 35 (set (reg/f:SI 0 ax [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:147 64 {*movsi_internal}
     (nil))

(insn 302 301 303 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [160])) speller.c:147 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [160])
        (nil)))

(call_insn 303 302 444 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:147 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 444 303 305 35 (set (reg:SI 0 ax [161])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:150 243 {*leasi}
     (nil))

(insn 305 444 306 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [161])) speller.c:150 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [161])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(insn 306 305 307 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:150 64 {*movsi_internal}
     (nil))

(call_insn 307 306 308 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:150 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 308 307 310 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("size") [flags 0x41]  <function_decl 0xb6a0e700 size>) [0 size S1 A8])
            (const_int 0 [0]))) speller.c:151 632 {*call_value}
     (nil)
    (nil))

(insn 310 308 445 35 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [0 n+0 S4 A32])
        (reg:SI 0 ax [162])) speller.c:151 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [162])
        (nil)))

(insn 445 310 312 35 (set (reg:SI 0 ax [163])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:152 243 {*leasi}
     (nil))

(insn 312 445 313 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [163])) speller.c:152 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [163])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 313 312 314 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:152 64 {*movsi_internal}
     (nil))

(call_insn 314 313 446 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:152 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 446 314 316 35 (set (reg:SI 0 ax [164])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:155 243 {*leasi}
     (nil))

(insn 316 446 447 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [164])) speller.c:155 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [164])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 447 316 318 35 (set (reg:SI 0 ax [165])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:155 243 {*leasi}
     (nil))

(insn 318 447 319 35 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [165])) speller.c:155 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [165])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(call_insn 319 318 321 35 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:155 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 321 319 448 35 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])
        (reg:DF 8 st)) speller.c:155 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 448 321 323 35 (set (reg:SI 0 ax [167])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:158 243 {*leasi}
     (nil))

(insn 323 448 324 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [167])) speller.c:158 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [167])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(insn 324 323 325 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:158 64 {*movsi_internal}
     (nil))

(call_insn 325 324 326 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:158 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 326 325 328 35 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:159 632 {*call_value}
     (nil)
    (nil))

(insn 328 326 449 35 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 55 [0x37])) [0 unloaded+0 S1 A8])
        (reg:QI 0 ax [168])) speller.c:159 66 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [168])
        (nil)))

(insn 449 328 330 35 (set (reg:SI 0 ax [169])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:160 243 {*leasi}
     (nil))

(insn 330 449 331 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [169])) speller.c:160 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [169])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 331 330 332 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:160 64 {*movsi_internal}
     (nil))

(call_insn 332 331 333 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:160 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 333 332 450 35 (set (reg:QI 0 ax [170])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 55 [0x37])) [0 unloaded+0 S1 A8])) speller.c:163 66 {*movqi_internal}
     (nil))

(insn 450 333 335 35 (parallel [
            (set (reg:SI 0 ax [orig:106 D.1926 ] [106])
                (xor:SI (reg:SI 0 ax [170])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:163 397 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 335 450 336 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:106 D.1926 ] [106])
            (const_int 0 [0]))) speller.c:163 0 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:106 D.1926 ] [106])
        (nil)))

(jump_insn 336 335 337 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) speller.c:163 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 345)

(note 337 336 338 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 338 337 339 36 (set (reg/f:SI 0 ax [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:165 64 {*movsi_internal}
     (nil))

(insn 339 338 340 36 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [171])) speller.c:165 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [171])
        (nil)))

(insn 340 339 341 36 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0xb6a30420 *.LC8>)) speller.c:165 64 {*movsi_internal}
     (nil))

(call_insn 341 340 342 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:165 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 342 341 433 36 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 5 [0x5])) speller.c:166 64 {*movsi_internal}
     (nil))

(jump_insn 433 342 434 36 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

(barrier 434 433 345)

(code_label 345 434 346 37 23 "" [1 uses])

(note 346 345 440 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 440 346 348 37 (set (reg:SI 0 ax [172])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 196 [0xc4]))) speller.c:170 243 {*leasi}
     (nil))

(insn 348 440 441 37 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [172])) speller.c:170 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [172])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -124 [0xffffffffffffff84]))
            (nil))))

(insn 441 348 350 37 (set (reg:SI 0 ax [173])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 124 [0x7c]))) speller.c:170 243 {*leasi}
     (nil))

(insn 350 441 351 37 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [173])) speller.c:170 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [173])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -196 [0xffffffffffffff3c]))
            (nil))))

(call_insn 351 350 353 37 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:170 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 353 351 354 37 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])
        (reg:DF 8 st)) speller.c:170 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 354 353 355 37 (set (reg:SI 0 ax [175])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])) speller.c:173 64 {*movsi_internal}
     (nil))

(insn 355 354 356 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [175])) speller.c:173 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [175])
        (nil)))

(insn 356 355 357 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0xb6a30480 *.LC9>)) speller.c:173 64 {*movsi_internal}
     (nil))

(call_insn 357 356 358 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:173 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 358 357 359 37 (set (reg:SI 0 ax [176])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [0 n+0 S4 A32])) speller.c:174 64 {*movsi_internal}
     (nil))

(insn 359 358 360 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [176])) speller.c:174 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [176])
        (nil)))

(insn 360 359 361 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0xb6a304e0 *.LC10>)) speller.c:174 64 {*movsi_internal}
     (nil))

(call_insn 361 360 362 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:174 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 362 361 363 37 (set (reg:SI 0 ax [177])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 words+0 S4 A32])) speller.c:175 64 {*movsi_internal}
     (nil))

(insn 363 362 364 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [177])) speller.c:175 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [177])
        (nil)))

(insn 364 363 365 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0xb6a30540 *.LC11>)) speller.c:175 64 {*movsi_internal}
     (nil))

(call_insn 365 364 366 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:175 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 366 365 367 37 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])) speller.c:176 109 {*movdf_internal}
     (nil))

(insn 367 366 368 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st)) speller.c:176 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 368 367 369 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0xb6a305a0 *.LC12>)) speller.c:176 64 {*movsi_internal}
     (nil))

(call_insn 369 368 370 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:176 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 370 369 371 37 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])) speller.c:177 109 {*movdf_internal}
     (nil))

(insn 371 370 372 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st)) speller.c:177 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 372 371 373 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0xb6a30600 *.LC13>)) speller.c:177 64 {*movsi_internal}
     (nil))

(call_insn 373 372 374 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:177 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 374 373 375 37 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])) speller.c:178 109 {*movdf_internal}
     (nil))

(insn 375 374 376 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st)) speller.c:178 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 376 375 377 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0xb6a30660 *.LC14>)) speller.c:178 64 {*movsi_internal}
     (nil))

(call_insn 377 376 378 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:178 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 378 377 379 37 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])) speller.c:179 109 {*movdf_internal}
     (nil))

(insn 379 378 380 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st)) speller.c:179 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 380 379 381 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0xb6a306c0 *.LC15>)) speller.c:179 64 {*movsi_internal}
     (nil))

(call_insn 381 380 382 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:179 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 382 381 383 37 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 96 [0x60])) [0 ti_load+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 383 382 384 37 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 88 [0x58])) [0 ti_check+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 384 383 385 37 (set (reg:XF 9 st(1))
        (plus:XF (reg:XF 9 st(1))
            (reg:XF 8 st))) speller.c:180 772 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 385 384 386 37 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 104 [0x68])) [0 ti_size+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 386 385 387 37 (set (reg:XF 9 st(1))
        (plus:XF (reg:XF 9 st(1))
            (reg:XF 8 st))) speller.c:180 772 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 387 386 388 37 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 112 [0x70])) [0 ti_unload+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 388 387 442 37 (set (reg:XF 9 st(1))
        (plus:XF (reg:XF 9 st(1))
            (reg:XF 8 st))) speller.c:180 772 {*fop_xf_comm_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 442 388 443 37 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 S8 A64])
        (float_truncate:DF (reg:XF 8 st))) speller.c:180 151 {*truncxfdf2_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 443 442 390 37 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 S8 A64])) speller.c:180 109 {*movdf_internal}
     (nil))

(insn 390 443 391 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st)) speller.c:180 109 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 8 st)
        (nil)))

(insn 391 390 392 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0xb6a30720 *.LC16>)) speller.c:180 64 {*movsi_internal}
     (nil))

(call_insn 392 391 393 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:180 632 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 393 392 396 37 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 0 [0])) speller.c:184 64 {*movsi_internal}
     (nil))

(code_label 396 393 397 38 24 "" [5 uses])

(note 397 396 405 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 405 397 406 38 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 316 [0x13c])) [0 D.1941+0 S4 A32])
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:SI 1 dx))
        ]) speller.c:185 942 {stack_tls_protect_test_si}
     (expr_list:REG_UNUSED (reg:SI 1 dx)
        (nil)))

(jump_insn 406 405 413 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) speller.c:185 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 409)

(note 413 406 407 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(call_insn 407 413 408 39 (call (mem:QI (symbol_ref:SI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xb6a0ed80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) speller.c:185 618 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(barrier 408 407 409)

(code_label 409 408 414 40 25 "" [1 uses])

(note 414 409 410 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 410 414 476 40 (use (reg/i:SI 0 ax)) speller.c:185 -1
     (nil))

(note 476 410 477 40 NOTE_INSN_EPILOGUE_BEG)

(insn/f 477 476 487 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int 4 [0x4])))
            (set (reg/f:SI 6 bp)
                (mem:SI (reg/f:SI 6 bp) [0 S4 A8]))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) speller.c:185 660 {leave}
     (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
        (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4]))
            (nil))))

(note 487 477 483 40 NOTE_INSN_CFI_LABEL)

(note 483 487 484 40
	.cfi_restore 5
	 NOTE_INSN_CFI)

(note 484 483 478 40
	.cfi_def_cfa 4, 4
	 NOTE_INSN_CFI)

(jump_insn 478 484 479 40 (simple_return) speller.c:185 647 {simple_return_internal}
     (nil)
 -> simple_return)

(barrier 479 478 436)

(note 436 479 0 NOTE_INSN_DELETED)

;; Function calculate (calculate, funcdef_no=1, decl_uid=1783, cgraph_uid=1)

Creating trace 0 : start at note 1
Creating trace 1 : start at note 82
Creating trace 2 : start at code_label 10
Creating trace 3 : start at code_label 15
Creating trace 4 : start at code_label 49
Creating trace 5 : start at note 83
Processing trace 0 : start at note 1
   saw edge from trace 0 to 1 (via fallthru 0)
	push trace 1 to worklist
Processing trace 1 : start at note 82
   saw edge from trace 1 to 2 (via jump_insn 6)
	push trace 2 to worklist
   saw edge from trace 1 to 3 (via jump_insn 9)
	push trace 3 to worklist
   saw edge from trace 1 to 2 (via fallthru 0)
Processing trace 3 : start at code_label 15
   saw edge from trace 3 to 4 (via fallthru 0)
	push trace 4 to worklist
Processing trace 4 : start at code_label 49
   saw edge from trace 4 to 5 (via fallthru 0)
	push trace 5 to worklist
Processing trace 5 : start at note 83
Processing trace 2 : start at code_label 10
   saw edge from trace 2 to 4 (via jump_insn 61)
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 77 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 77 3 99 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0 S4 A8])
        (reg/f:SI 6 bp)) speller.c:194 43 {*pushsi2}
     (nil))

(note 99 77 90 2 NOTE_INSN_CFI_LABEL)

(note 90 99 91 2
	.cfi_def_cfa_offset 8
	 NOTE_INSN_CFI)

(note 91 90 78 2
	.cfi_offset 5, -8
	 NOTE_INSN_CFI)

(insn/f 78 91 100 2 (set (reg/f:SI 6 bp)
        (reg/f:SI 7 sp)) speller.c:194 64 {*movsi_internal}
     (nil))

(note 100 78 92 2 NOTE_INSN_CFI_LABEL)

(note 92 100 79 2
	.cfi_def_cfa_register 5
	 NOTE_INSN_CFI)

(insn/f 79 92 80 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0 S4 A8])
        (reg:SI 4 si)) speller.c:194 43 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))

(insn/f 80 79 81 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0 S4 A8])
        (reg:SI 3 bx)) speller.c:194 43 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))

(insn/f 81 80 93 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) speller.c:194 923 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 93 81 94 2
	.cfi_offset 6, -12
	 NOTE_INSN_CFI)

(note 94 93 82 2
	.cfi_offset 3, -16
	 NOTE_INSN_CFI)

(note 82 94 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 82 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 b+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) speller.c:195 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 10)

(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 12 [0xc])) [0 a+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) speller.c:195 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)

(code_label 10 9 11 4 27 "" [1 uses])

(note 11 10 76 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 76 11 61 4 (set (reg:DF 8 st)
        (const_double:DF 0.0 [0x0.0p+0])) speller.c:196 109 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(jump_insn 61 76 62 4 (set (pc)
        (label_ref 49)) speller.c:196 611 {jump}
     (nil)
 -> 49)

(barrier 62 61 15)

(code_label 15 62 16 5 28 "" [1 uses])

(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 (set (reg/f:SI 0 ax [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 18 17 19 5 (set (reg:SI 0 ax [orig:60 D.1824 ] [60])
        (mem/j:SI (reg/f:SI 0 ax [83]) [0 a_3(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 19 18 20 5 (parallel [
            (set (reg:SI 1 dx [orig:61 D.1825 ] [61])
                (mult:SI (reg:SI 0 ax [orig:60 D.1824 ] [60])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 328 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.1824 ] [60])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 20 19 21 5 (set (reg/f:SI 0 ax [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 21 20 70 5 (set (reg:SI 0 ax [orig:62 D.1826 ] [62])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [84])
                (const_int 4 [0x4])) [0 a_3(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 70 21 23 5 (set (reg:SI 2 cx [orig:63 D.1827 ] [63])
        (plus:SI (reg:SI 1 dx [orig:61 D.1825 ] [61])
            (reg:SI 0 ax [orig:62 D.1826 ] [62]))) speller.c:198 243 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:61 D.1825 ] [61])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.1826 ] [62])
            (nil))))

(insn 23 70 24 5 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 24 23 25 5 (set (reg:SI 0 ax [orig:64 D.1828 ] [64])
        (mem/j:SI (reg/f:SI 0 ax [85]) [0 b_2(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 25 24 26 5 (parallel [
            (set (reg:SI 1 dx [orig:65 D.1829 ] [65])
                (mult:SI (reg:SI 0 ax [orig:64 D.1828 ] [64])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 328 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.1828 ] [64])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 26 25 27 5 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 27 26 66 5 (set (reg:SI 0 ax [orig:66 D.1830 ] [66])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 4 [0x4])) [0 b_2(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 66 27 28 5 (set (reg:SI 3 bx)
        (reg:SI 1 dx [orig:65 D.1829 ] [65])) speller.c:199 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:65 D.1829 ] [65])
        (nil)))

(insn 28 66 67 5 (parallel [
            (set (reg:SI 3 bx)
                (minus:SI (reg:SI 3 bx)
                    (reg:SI 0 ax [orig:66 D.1830 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 286 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.1830 ] [66])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 67 28 29 5 (set (reg:SI 0 ax [orig:67 D.1831 ] [67])
        (reg:SI 3 bx)) speller.c:199 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))

(insn 29 67 30 5 (parallel [
            (set (reg:SI 2 cx [orig:68 D.1832 ] [68])
                (plus:SI (reg:SI 2 cx [orig:63 D.1827 ] [63])
                    (reg:SI 0 ax [orig:67 D.1831 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.1831 ] [67])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 30 29 31 5 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 31 30 32 5 (set (reg:SI 0 ax [orig:69 D.1833 ] [69])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 8 [0x8])) [0 a_3(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 32 31 33 5 (parallel [
            (set (reg:SI 1 dx [orig:70 D.1834 ] [70])
                (mult:SI (reg:SI 0 ax [orig:69 D.1833 ] [69])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 328 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 D.1833 ] [69])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 33 32 34 5 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 34 33 71 5 (set (reg:SI 0 ax [orig:71 D.1835 ] [71])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [88])
                (const_int 12 [0xc])) [0 a_3(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 71 34 36 5 (set (reg:SI 3 bx [orig:72 D.1836 ] [72])
        (plus:SI (reg:SI 1 dx [orig:70 D.1834 ] [70])
            (reg:SI 0 ax [orig:71 D.1835 ] [71]))) speller.c:200 243 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:70 D.1834 ] [70])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 D.1835 ] [71])
            (nil))))

(insn 36 71 37 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 37 36 38 5 (set (reg:SI 0 ax [orig:73 D.1837 ] [73])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [89])
                (const_int 8 [0x8])) [0 b_2(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 38 37 39 5 (parallel [
            (set (reg:SI 1 dx [orig:74 D.1838 ] [74])
                (mult:SI (reg:SI 0 ax [orig:73 D.1837 ] [73])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 328 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 D.1837 ] [73])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 39 38 40 5 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 40 39 68 5 (set (reg:SI 0 ax [orig:75 D.1839 ] [75])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 12 [0xc])) [0 b_2(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 68 40 41 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:74 D.1838 ] [74])) speller.c:201 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:74 D.1838 ] [74])
        (nil)))

(insn 41 68 69 5 (parallel [
            (set (reg:SI 4 si)
                (minus:SI (reg:SI 4 si)
                    (reg:SI 0 ax [orig:75 D.1839 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 286 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:75 D.1839 ] [75])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 69 41 42 5 (set (reg:SI 0 ax [orig:76 D.1840 ] [76])
        (reg:SI 4 si)) speller.c:201 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))

(insn 42 69 43 5 (parallel [
            (set (reg:SI 0 ax [orig:77 D.1841 ] [77])
                (plus:SI (reg:SI 3 bx [orig:72 D.1836 ] [72])
                    (reg:SI 0 ax [orig:76 D.1840 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:72 D.1836 ] [72])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 43 42 72 5 (parallel [
            (set (reg:SI 0 ax [orig:78 D.1842 ] [78])
                (plus:SI (reg:SI 2 cx [orig:68 D.1832 ] [68])
                    (reg:SI 0 ax [orig:77 D.1841 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 250 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:68 D.1832 ] [68])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 72 43 73 5 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 S4 A32])
        (reg:SI 0 ax [orig:78 D.1842 ] [78])) speller.c:198 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 D.1842 ] [78])
        (nil)))

(insn 73 72 46 5 (set (reg:DF 8 st)
        (float:DF (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [0 S4 A32]))) speller.c:198 232 {*floatsidf2_i387}
     (nil))

(insn 46 73 47 5 (set (reg:XF 8 st)
        (mem/u/c:XF (symbol_ref/u:SI ("*.LC18") [flags 0x2]) [0 S12 A128])) speller.c:198 107 {*movxf_internal}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))

(insn 47 46 74 5 (set (reg:XF 9 st(1))
        (div:XF (reg:XF 9 st(1))
            (reg:XF 8 st))) speller.c:198 773 {*fop_xf_1_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 74 47 75 5 (set (mem/c:DF (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A64])
        (float_truncate:DF (reg:XF 8 st))) speller.c:198 151 {*truncxfdf2_i387}
     (expr_list:REG_DEAD (reg:XF 8 st)
        (nil)))

(insn 75 74 49 5 (set (reg:DF 8 st)
        (mem/c:DF (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A64])) speller.c:198 109 {*movdf_internal}
     (nil))

(code_label 49 75 50 6 29 "" [1 uses])

(note 50 49 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 50 83 6 (use (reg/i:DF 8 st)) speller.c:203 -1
     (nil))

(note 83 58 84 6 NOTE_INSN_EPILOGUE_BEG)

(insn 84 83 85 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) speller.c:203 923 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn/f 85 84 95 6 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0 S4 A8])) speller.c:203 51 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (nil)))

(note 95 85 86 6
	.cfi_restore 3
	 NOTE_INSN_CFI)

(insn/f 86 95 96 6 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0 S4 A8])) speller.c:203 51 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (nil)))

(note 96 86 87 6
	.cfi_restore 6
	 NOTE_INSN_CFI)

(insn/f 87 96 101 6 (set (reg/f:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0 S4 A8])) speller.c:203 51 {*popsi1}
     (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 7 sp)
            (const_int 4 [0x4]))
        (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
            (nil))))

(note 101 87 97 6 NOTE_INSN_CFI_LABEL)

(note 97 101 98 6
	.cfi_restore 5
	 NOTE_INSN_CFI)

(note 98 97 88 6
	.cfi_def_cfa 4, 4
	 NOTE_INSN_CFI)

(jump_insn 88 98 89 6 (simple_return) speller.c:203 647 {simple_return_internal}
     (nil)
 -> simple_return)

(barrier 89 88 64)

(note 64 89 0 NOTE_INSN_DELETED)
