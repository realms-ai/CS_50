
;; Function main (main, funcdef_no=0, decl_uid=1786, cgraph_uid=0)

insn=2, live_throughout: 7, dead_or_set: 116
insn=3, live_throughout: 7, dead_or_set: 116
insn=5, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 
insn=11, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 
insn=14, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 0
insn=16, live_throughout: 7, dead_or_set: 59
insn=415, live_throughout: 7, 59, dead_or_set: 
insn=19, live_throughout: 7, dead_or_set: 
insn=21, live_throughout: 7, dead_or_set: 117
insn=22, live_throughout: 7, dead_or_set: 117
insn=23, live_throughout: 7, dead_or_set: 118
insn=24, live_throughout: 7, dead_or_set: 118
insn=25, live_throughout: 7, dead_or_set: 119
insn=26, live_throughout: 7, dead_or_set: 119
insn=27, live_throughout: 7, dead_or_set: 120
insn=28, live_throughout: 7, dead_or_set: 120
insn=29, live_throughout: 7, dead_or_set: 
insn=30, live_throughout: 7, dead_or_set: 
insn=32, live_throughout: 7, dead_or_set: 121
insn=33, live_throughout: 7, dead_or_set: 60, 121
insn=417, live_throughout: 7, 60, dead_or_set: 
insn=36, live_throughout: 7, dead_or_set: 
insn=38, live_throughout: 7, dead_or_set: 60
insn=39, live_throughout: 7, 60, dead_or_set: 
insn=41, live_throughout: 7, dead_or_set: 60
insn=42, live_throughout: 7, dead_or_set: 122
insn=43, live_throughout: 7, dead_or_set: 122
insn=44, live_throughout: 7, dead_or_set: 
insn=45, live_throughout: 7, dead_or_set: 0
insn=46, live_throughout: 7, dead_or_set: 123
insn=47, live_throughout: 7, dead_or_set: 123
insn=48, live_throughout: 7, dead_or_set: 0
insn=49, live_throughout: 7, dead_or_set: 0, 124
insn=50, live_throughout: 7, dead_or_set: 124
insn=51, live_throughout: 7, dead_or_set: 125
insn=52, live_throughout: 7, dead_or_set: 125
insn=53, live_throughout: 7, dead_or_set: 
insn=54, live_throughout: 7, dead_or_set: 0
insn=55, live_throughout: 7, dead_or_set: 126
insn=56, live_throughout: 7, dead_or_set: 62, 126
insn=57, live_throughout: 7, dead_or_set: 62
insn=58, live_throughout: 7, dead_or_set: 
insn=60, live_throughout: 7, dead_or_set: 127
insn=61, live_throughout: 7, dead_or_set: 127
insn=62, live_throughout: 7, dead_or_set: 
insn=63, live_throughout: 7, dead_or_set: 0
insn=64, live_throughout: 7, dead_or_set: 59
insn=419, live_throughout: 7, 59, dead_or_set: 
insn=67, live_throughout: 7, dead_or_set: 
insn=69, live_throughout: 7, dead_or_set: 128
insn=70, live_throughout: 7, dead_or_set: 128
insn=71, live_throughout: 7, dead_or_set: 129
insn=72, live_throughout: 7, dead_or_set: 129
insn=73, live_throughout: 7, dead_or_set: 8
insn=74, live_throughout: 7, dead_or_set: 8, 130
insn=75, live_throughout: 7, dead_or_set: 130
insn=76, live_throughout: 7, dead_or_set: 
insn=77, live_throughout: 7, dead_or_set: 
insn=79, live_throughout: 7, dead_or_set: 131
insn=80, live_throughout: 7, dead_or_set: 61, 131
insn=421, live_throughout: 7, 61, dead_or_set: 
insn=83, live_throughout: 7, dead_or_set: 
insn=85, live_throughout: 7, dead_or_set: 132
insn=86, live_throughout: 7, dead_or_set: 61, 132
insn=87, live_throughout: 7, 61, dead_or_set: 
insn=89, live_throughout: 7, dead_or_set: 61
insn=90, live_throughout: 7, dead_or_set: 
insn=91, live_throughout: 7, dead_or_set: 133
insn=92, live_throughout: 7, dead_or_set: 133
insn=93, live_throughout: 7, dead_or_set: 0
insn=94, live_throughout: 7, dead_or_set: 0, 134
insn=95, live_throughout: 7, dead_or_set: 134
insn=96, live_throughout: 7, dead_or_set: 
insn=97, live_throughout: 7, dead_or_set: 
insn=99, live_throughout: 7, dead_or_set: 135
insn=100, live_throughout: 7, dead_or_set: 135
insn=101, live_throughout: 7, dead_or_set: 
insn=102, live_throughout: 7, dead_or_set: 0
insn=103, live_throughout: 7, dead_or_set: 0
insn=104, live_throughout: 7, dead_or_set: 59
insn=423, live_throughout: 7, 59, dead_or_set: 
insn=107, live_throughout: 7, dead_or_set: 
insn=109, live_throughout: 7, dead_or_set: 
insn=110, live_throughout: 7, dead_or_set: 0
insn=111, live_throughout: 7, dead_or_set: 
insn=112, live_throughout: 7, dead_or_set: 
insn=113, live_throughout: 7, dead_or_set: 
insn=114, live_throughout: 7, dead_or_set: 136
insn=115, live_throughout: 7, dead_or_set: 136
insn=116, live_throughout: 7, dead_or_set: 0
insn=117, live_throughout: 7, dead_or_set: 0, 137
insn=118, live_throughout: 7, dead_or_set: 137
insn=425, live_throughout: 7, dead_or_set: 
insn=277, live_throughout: 7, dead_or_set: 
insn=122, live_throughout: 7, dead_or_set: 0
insn=123, live_throughout: 7, dead_or_set: 0, 63
insn=124, live_throughout: 7, dead_or_set: 63, 64
insn=125, live_throughout: 7, 64, dead_or_set: 65
insn=126, live_throughout: 7, 64, dead_or_set: 65, 66
insn=127, live_throughout: 7, dead_or_set: 64, 66, 67
insn=128, live_throughout: 7, dead_or_set: 67, 68
insn=129, live_throughout: 7, dead_or_set: 68, 69
insn=130, live_throughout: 7, dead_or_set: 69, 70
insn=131, live_throughout: 7, dead_or_set: 70
insn=132, live_throughout: 7, dead_or_set: 
insn=134, live_throughout: 7, dead_or_set: 
insn=135, live_throughout: 7, dead_or_set: 
insn=137, live_throughout: 7, dead_or_set: 
insn=138, live_throughout: 7, dead_or_set: 
insn=139, live_throughout: 7, dead_or_set: 
insn=141, live_throughout: 7, dead_or_set: 138
insn=142, live_throughout: 7, dead_or_set: 96, 138
insn=143, live_throughout: 7, 96, dead_or_set: 139
insn=144, live_throughout: 7, 96, 139, dead_or_set: 141
insn=145, live_throughout: 7, 96, dead_or_set: 139, 140, 141
insn=146, live_throughout: 7, dead_or_set: 96, 140
insn=147, live_throughout: 7, dead_or_set: 
insn=148, live_throughout: 7, dead_or_set: 
insn=149, live_throughout: 7, dead_or_set: 
insn=169, live_throughout: 7, dead_or_set: 
insn=152, live_throughout: 7, dead_or_set: 142
insn=153, live_throughout: 7, dead_or_set: 142
insn=154, live_throughout: 7, dead_or_set: 0
insn=155, live_throughout: 7, dead_or_set: 0, 143
insn=156, live_throughout: 7, dead_or_set: 143
insn=157, live_throughout: 7, dead_or_set: 
insn=158, live_throughout: 7, dead_or_set: 
insn=160, live_throughout: 7, dead_or_set: 0
insn=161, live_throughout: 7, dead_or_set: 0, 97
insn=162, live_throughout: 7, dead_or_set: 97, 98
insn=163, live_throughout: 7, 98, dead_or_set: 99
insn=164, live_throughout: 7, 98, dead_or_set: 99, 100
insn=165, live_throughout: 7, dead_or_set: 98, 100, 101
insn=166, live_throughout: 7, dead_or_set: 101, 102
insn=167, live_throughout: 7, dead_or_set: 102, 103
insn=168, live_throughout: 7, dead_or_set: 103, 104
insn=170, live_throughout: 7, dead_or_set: 104
insn=171, live_throughout: 7, dead_or_set: 
insn=172, live_throughout: 7, dead_or_set: 
insn=174, live_throughout: 7, dead_or_set: 
insn=427, live_throughout: 7, dead_or_set: 
insn=179, live_throughout: 7, dead_or_set: 
insn=181, live_throughout: 7, dead_or_set: 0
insn=182, live_throughout: 7, dead_or_set: 0, 71
insn=183, live_throughout: 7, dead_or_set: 71, 72
insn=184, live_throughout: 7, 72, dead_or_set: 73
insn=185, live_throughout: 7, 72, dead_or_set: 73, 74
insn=186, live_throughout: 7, dead_or_set: 72, 74, 75
insn=187, live_throughout: 7, dead_or_set: 75, 76
insn=188, live_throughout: 7, dead_or_set: 76, 77
insn=189, live_throughout: 7, dead_or_set: 77, 78
insn=190, live_throughout: 7, dead_or_set: 78
insn=191, live_throughout: 7, dead_or_set: 
insn=211, live_throughout: 7, dead_or_set: 
insn=194, live_throughout: 7, dead_or_set: 144
insn=195, live_throughout: 7, dead_or_set: 144
insn=196, live_throughout: 7, dead_or_set: 0
insn=197, live_throughout: 7, dead_or_set: 0, 145
insn=198, live_throughout: 7, dead_or_set: 145
insn=199, live_throughout: 7, dead_or_set: 
insn=200, live_throughout: 7, dead_or_set: 
insn=202, live_throughout: 7, dead_or_set: 0
insn=203, live_throughout: 7, dead_or_set: 0, 79
insn=204, live_throughout: 7, dead_or_set: 79, 80
insn=205, live_throughout: 7, 80, dead_or_set: 81
insn=206, live_throughout: 7, 80, dead_or_set: 81, 82
insn=207, live_throughout: 7, dead_or_set: 80, 82, 83
insn=208, live_throughout: 7, dead_or_set: 83, 84
insn=209, live_throughout: 7, dead_or_set: 84, 85
insn=210, live_throughout: 7, dead_or_set: 85, 86
insn=212, live_throughout: 7, dead_or_set: 86
insn=213, live_throughout: 7, dead_or_set: 
insn=214, live_throughout: 7, dead_or_set: 
insn=216, live_throughout: 7, dead_or_set: 
insn=429, live_throughout: 7, dead_or_set: 
insn=219, live_throughout: 7, dead_or_set: 
insn=221, live_throughout: 7, dead_or_set: 
insn=222, live_throughout: 7, dead_or_set: 
insn=224, live_throughout: 7, dead_or_set: 146
insn=225, live_throughout: 7, 146, dead_or_set: 148
insn=226, live_throughout: 7, dead_or_set: 146, 147, 148
insn=227, live_throughout: 7, dead_or_set: 147
insn=228, live_throughout: 7, dead_or_set: 
insn=229, live_throughout: 7, dead_or_set: 149
insn=230, live_throughout: 7, dead_or_set: 149
insn=231, live_throughout: 7, dead_or_set: 
insn=232, live_throughout: 7, dead_or_set: 0
insn=233, live_throughout: 7, dead_or_set: 150
insn=234, live_throughout: 7, dead_or_set: 150
insn=235, live_throughout: 7, dead_or_set: 0
insn=236, live_throughout: 7, dead_or_set: 0, 87
insn=237, live_throughout: 7, dead_or_set: 87, 88
insn=238, live_throughout: 7, dead_or_set: 88
insn=239, live_throughout: 7, dead_or_set: 89
insn=240, live_throughout: 7, dead_or_set: 89, 90
insn=241, live_throughout: 7, dead_or_set: 90, 91
insn=242, live_throughout: 7, dead_or_set: 91
insn=243, live_throughout: 7, dead_or_set: 
insn=244, live_throughout: 7, dead_or_set: 151
insn=245, live_throughout: 7, dead_or_set: 151
insn=246, live_throughout: 7, dead_or_set: 
insn=247, live_throughout: 7, dead_or_set: 0
insn=248, live_throughout: 7, dead_or_set: 
insn=249, live_throughout: 7, dead_or_set: 152
insn=250, live_throughout: 7, dead_or_set: 152
insn=251, live_throughout: 7, dead_or_set: 153
insn=252, live_throughout: 7, dead_or_set: 153
insn=253, live_throughout: 7, dead_or_set: 8
insn=254, live_throughout: 7, dead_or_set: 8, 93
insn=255, live_throughout: 7, dead_or_set: 93, 94
insn=256, live_throughout: 7, dead_or_set: 94, 95
insn=435, live_throughout: 7, dead_or_set: 95
insn=258, live_throughout: 7, dead_or_set: 
insn=259, live_throughout: 7, dead_or_set: 
insn=261, live_throughout: 7, dead_or_set: 154
insn=262, live_throughout: 7, dead_or_set: 154
insn=263, live_throughout: 7, dead_or_set: 0
insn=264, live_throughout: 7, dead_or_set: 
insn=265, live_throughout: 7, dead_or_set: 
insn=267, live_throughout: 7, dead_or_set: 
insn=268, live_throughout: 7, dead_or_set: 
insn=270, live_throughout: 7, dead_or_set: 155
insn=271, live_throughout: 7, dead_or_set: 155
insn=272, live_throughout: 7, dead_or_set: 0
insn=273, live_throughout: 7, dead_or_set: 0, 156
insn=274, live_throughout: 7, dead_or_set: 156
insn=275, live_throughout: 7, dead_or_set: 
insn=278, live_throughout: 7, dead_or_set: 
insn=279, live_throughout: 7, dead_or_set: 
insn=281, live_throughout: 7, dead_or_set: 157
insn=282, live_throughout: 7, dead_or_set: 157
insn=283, live_throughout: 7, dead_or_set: 0
insn=284, live_throughout: 7, dead_or_set: 0, 105
insn=285, live_throughout: 7, dead_or_set: 105
insn=286, live_throughout: 7, dead_or_set: 
insn=288, live_throughout: 7, dead_or_set: 158
insn=289, live_throughout: 7, dead_or_set: 158
insn=290, live_throughout: 7, dead_or_set: 0
insn=291, live_throughout: 7, dead_or_set: 159
insn=292, live_throughout: 7, dead_or_set: 159
insn=293, live_throughout: 7, dead_or_set: 
insn=294, live_throughout: 7, dead_or_set: 0
insn=295, live_throughout: 7, dead_or_set: 0
insn=296, live_throughout: 7, dead_or_set: 59
insn=431, live_throughout: 7, 59, dead_or_set: 
insn=299, live_throughout: 7, dead_or_set: 
insn=301, live_throughout: 7, dead_or_set: 160
insn=302, live_throughout: 7, dead_or_set: 160
insn=303, live_throughout: 7, dead_or_set: 0
insn=304, live_throughout: 7, dead_or_set: 161
insn=305, live_throughout: 7, dead_or_set: 161
insn=306, live_throughout: 7, dead_or_set: 
insn=307, live_throughout: 7, dead_or_set: 0
insn=308, live_throughout: 7, dead_or_set: 0
insn=309, live_throughout: 7, dead_or_set: 0, 162
insn=310, live_throughout: 7, dead_or_set: 162
insn=311, live_throughout: 7, dead_or_set: 163
insn=312, live_throughout: 7, dead_or_set: 163
insn=313, live_throughout: 7, dead_or_set: 
insn=314, live_throughout: 7, dead_or_set: 0
insn=315, live_throughout: 7, dead_or_set: 164
insn=316, live_throughout: 7, dead_or_set: 164
insn=317, live_throughout: 7, dead_or_set: 165
insn=318, live_throughout: 7, dead_or_set: 165
insn=319, live_throughout: 7, dead_or_set: 8
insn=320, live_throughout: 7, dead_or_set: 8, 166
insn=321, live_throughout: 7, dead_or_set: 166
insn=322, live_throughout: 7, dead_or_set: 167
insn=323, live_throughout: 7, dead_or_set: 167
insn=324, live_throughout: 7, dead_or_set: 
insn=325, live_throughout: 7, dead_or_set: 0
insn=326, live_throughout: 7, dead_or_set: 0
insn=327, live_throughout: 7, dead_or_set: 0, 168
insn=328, live_throughout: 7, dead_or_set: 168
insn=329, live_throughout: 7, dead_or_set: 169
insn=330, live_throughout: 7, dead_or_set: 169
insn=331, live_throughout: 7, dead_or_set: 
insn=332, live_throughout: 7, dead_or_set: 0
insn=333, live_throughout: 7, dead_or_set: 170
insn=334, live_throughout: 7, dead_or_set: 106, 170
insn=335, live_throughout: 7, dead_or_set: 106
insn=336, live_throughout: 7, dead_or_set: 
insn=338, live_throughout: 7, dead_or_set: 171
insn=339, live_throughout: 7, dead_or_set: 171
insn=340, live_throughout: 7, dead_or_set: 
insn=341, live_throughout: 7, dead_or_set: 0
insn=342, live_throughout: 7, dead_or_set: 59
insn=433, live_throughout: 7, 59, dead_or_set: 
insn=345, live_throughout: 7, dead_or_set: 
insn=347, live_throughout: 7, dead_or_set: 172
insn=348, live_throughout: 7, dead_or_set: 172
insn=349, live_throughout: 7, dead_or_set: 173
insn=350, live_throughout: 7, dead_or_set: 173
insn=351, live_throughout: 7, dead_or_set: 8
insn=352, live_throughout: 7, dead_or_set: 8, 174
insn=353, live_throughout: 7, dead_or_set: 174
insn=354, live_throughout: 7, dead_or_set: 175
insn=355, live_throughout: 7, dead_or_set: 175
insn=356, live_throughout: 7, dead_or_set: 
insn=357, live_throughout: 7, dead_or_set: 0
insn=358, live_throughout: 7, dead_or_set: 176
insn=359, live_throughout: 7, dead_or_set: 176
insn=360, live_throughout: 7, dead_or_set: 
insn=361, live_throughout: 7, dead_or_set: 0
insn=362, live_throughout: 7, dead_or_set: 177
insn=363, live_throughout: 7, dead_or_set: 177
insn=364, live_throughout: 7, dead_or_set: 
insn=365, live_throughout: 7, dead_or_set: 0
insn=366, live_throughout: 7, dead_or_set: 178
insn=367, live_throughout: 7, dead_or_set: 178
insn=368, live_throughout: 7, dead_or_set: 
insn=369, live_throughout: 7, dead_or_set: 0
insn=370, live_throughout: 7, dead_or_set: 179
insn=371, live_throughout: 7, dead_or_set: 179
insn=372, live_throughout: 7, dead_or_set: 
insn=373, live_throughout: 7, dead_or_set: 0
insn=374, live_throughout: 7, dead_or_set: 180
insn=375, live_throughout: 7, dead_or_set: 180
insn=376, live_throughout: 7, dead_or_set: 
insn=377, live_throughout: 7, dead_or_set: 0
insn=378, live_throughout: 7, dead_or_set: 181
insn=379, live_throughout: 7, dead_or_set: 181
insn=380, live_throughout: 7, dead_or_set: 
insn=381, live_throughout: 7, dead_or_set: 0
insn=382, live_throughout: 7, dead_or_set: 107
insn=383, live_throughout: 7, 107, dead_or_set: 108
insn=384, live_throughout: 7, dead_or_set: 107, 108, 109
insn=385, live_throughout: 7, 109, dead_or_set: 110
insn=386, live_throughout: 7, dead_or_set: 109, 110, 111
insn=387, live_throughout: 7, 111, dead_or_set: 112
insn=388, live_throughout: 7, dead_or_set: 111, 112, 113
insn=389, live_throughout: 7, dead_or_set: 113, 114
insn=390, live_throughout: 7, dead_or_set: 114
insn=391, live_throughout: 7, dead_or_set: 
insn=392, live_throughout: 7, dead_or_set: 0
insn=393, live_throughout: 7, dead_or_set: 59
insn=396, live_throughout: 7, 59, dead_or_set: 
insn=398, live_throughout: 7, dead_or_set: 59, 115
insn=402, live_throughout: 7, dead_or_set: 0, 115
insn=405, live_throughout: 0, 7, dead_or_set: 
insn=406, live_throughout: 0, 7, dead_or_set: 
insn=407, live_throughout: 7, dead_or_set: 
insn=409, live_throughout: 0, 7, dead_or_set: 
insn=410, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 393
changing reg in insn 342
changing reg in insn 296
changing reg in insn 104
changing reg in insn 64
changing reg in insn 16
changing reg in insn 398
changing reg in insn 38
changing reg in insn 33
changing reg in insn 41
changing reg in insn 86
changing reg in insn 80
changing reg in insn 89
changing reg in insn 56
changing reg in insn 57
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 127
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 186
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 207
changing reg in insn 205
changing reg in insn 206
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 209
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 212
changing reg in insn 236
changing reg in insn 237
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 241
changing reg in insn 254
changing reg in insn 255
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 435
changing reg in insn 142
changing reg in insn 146
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 165
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 170
changing reg in insn 284
changing reg in insn 285
changing reg in insn 334
changing reg in insn 335
changing reg in insn 382
changing reg in insn 384
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 386
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 388
changing reg in insn 387
changing reg in insn 388
changing reg in insn 388
changing reg in insn 389
changing reg in insn 389
changing reg in insn 390
changing reg in insn 398
changing reg in insn 402
changing reg in insn 2
changing reg in insn 3
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 42
changing reg in insn 43
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 61
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 79
changing reg in insn 80
changing reg in insn 85
changing reg in insn 86
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 99
changing reg in insn 100
changing reg in insn 114
changing reg in insn 115
changing reg in insn 117
changing reg in insn 118
changing reg in insn 141
changing reg in insn 143
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 144
changing reg in insn 145
changing reg in insn 152
changing reg in insn 153
changing reg in insn 155
changing reg in insn 156
changing reg in insn 194
changing reg in insn 195
changing reg in insn 197
changing reg in insn 198
changing reg in insn 224
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 225
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 233
changing reg in insn 234
changing reg in insn 244
changing reg in insn 245
changing reg in insn 249
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 261
changing reg in insn 262
changing reg in insn 270
changing reg in insn 271
changing reg in insn 273
changing reg in insn 274
changing reg in insn 281
changing reg in insn 282
changing reg in insn 288
changing reg in insn 289
changing reg in insn 291
changing reg in insn 292
changing reg in insn 301
changing reg in insn 302
changing reg in insn 304
changing reg in insn 305
changing reg in insn 309
changing reg in insn 310
changing reg in insn 311
changing reg in insn 312
changing reg in insn 315
changing reg in insn 316
changing reg in insn 317
changing reg in insn 318
changing reg in insn 320
changing reg in insn 321
changing reg in insn 322
changing reg in insn 323
changing reg in insn 327
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 333
changing reg in insn 334
changing reg in insn 338
changing reg in insn 339
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 352
changing reg in insn 353
changing reg in insn 354
changing reg in insn 355
changing reg in insn 358
changing reg in insn 359
changing reg in insn 362
changing reg in insn 363
changing reg in insn 366
changing reg in insn 367
changing reg in insn 370
changing reg in insn 371
changing reg in insn 374
changing reg in insn 375
changing reg in insn 378
changing reg in insn 379
Spilling for insn 5.
Using reg 0 for reload 0
Spilling for insn 248.
Using reg 8 for reload 0
Spilling for insn 256.
Using reg 9 for reload 0
Spilling for insn 405.
Using reg 1 for reload 0

Reloads for insn # 5
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_OTHER (opnum = 2)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 248
Reload 0: reload_out (XF) = (reg:XF 92 [ D.1917 ])
	FLOAT_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:XF 92 [ D.1917 ])
	reload_reg_rtx: (reg:XF 8 st)

Reloads for insn # 256
Reload 0: reload_in (XF) = (reg:XF 92 [ D.1917 ])
	FLOAT_REGS, RELOAD_FOR_INPUT (opnum = 2)
	reload_in_reg: (reg:XF 92 [ D.1917 ])
	reload_reg_rtx: (reg:XF 9 st(1))

Reloads for insn # 405
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 3)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 1 dx)
deleting insn with uid = 49.
deleting insn with uid = 74.
deleting insn with uid = 94.
deleting insn with uid = 117.
deleting insn with uid = 123.
deleting insn with uid = 155.
deleting insn with uid = 161.
deleting insn with uid = 182.
deleting insn with uid = 197.
deleting insn with uid = 203.
deleting insn with uid = 236.
deleting insn with uid = 254.
deleting insn with uid = 273.
deleting insn with uid = 284.
deleting insn with uid = 309.
deleting insn with uid = 320.
deleting insn with uid = 327.
deleting insn with uid = 352.
deleting insn with uid = 398.
deleting insn with uid = 402.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 283.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 295.
verify found no changes in insn with uid = 303.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 308.
verify found no changes in insn with uid = 314.
verify found no changes in insn with uid = 319.
verify found no changes in insn with uid = 325.
verify found no changes in insn with uid = 326.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 341.
verify found no changes in insn with uid = 351.
verify found no changes in insn with uid = 357.
verify found no changes in insn with uid = 361.
verify found no changes in insn with uid = 365.
verify found no changes in insn with uid = 369.
verify found no changes in insn with uid = 373.
verify found no changes in insn with uid = 377.
verify found no changes in insn with uid = 381.
verify found no changes in insn with uid = 392.
verify found no changes in insn with uid = 407.


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 6[bp] 7[sp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={128d,88u} r1={59d,11u} r2={48d,1u} r6={1d,45u} r7={1d,315u} r8={62d,20u} r9={50d,4u} r10={46d} r11={46d} r12={46d} r13={46d} r14={46d} r15={46d} r17={112d,22u} r18={46d} r19={46d} r20={1d,1u,20e} r21={46d} r22={46d} r23={46d} r24={46d} r25={46d} r26={46d} r27={46d} r28={46d} r29={46d} r30={46d} r31={46d} r32={46d} r33={46d} r34={46d} r35={46d} r36={46d} r37={46d} r38={46d} r39={46d} r40={46d} r41={46d} r42={46d} r43={46d} r44={46d} r45={46d} r46={46d} r47={46d} r48={46d} r49={46d} r50={46d} r51={46d} r52={46d} 
;;    total ref usage 2829{2302d,507u,20e} in 308{262 regular + 46 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)


;; Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  ENTRY (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116

(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 argv+0 S4 A32])) speller.c:27 64 {*movsi_internal}
     (nil))

(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])
        (reg/f:SI 0 ax [116])) speller.c:27 64 {*movsi_internal}
     (nil))

(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 316 [0x13c])) [0 D.1941+0 S4 A32])
                (unspec:SI [
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) speller.c:27 938 {stack_tls_protect_set_si}
     (nil))

(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) speller.c:29 6 {*cmpsi_1}
     (nil))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 596 {*jcc_1}
     (nil)
 -> 19)

;; Successors:  3 (fallthru) 5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  2 (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:29 6 {*cmpsi_1}
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 596 {*jcc_1}
     (nil)
 -> 19)

;; Successors:  4 (fallthru) 5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  3 (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0xb6a30180 *.LC0>)) speller.c:31 64 {*movsi_internal}
     (nil))

(call_insn 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:31 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 16 15 415 4 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 1 [0x1])) speller.c:32 64 {*movsi_internal}
     (nil))

(jump_insn 415 16 416 4 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

;; Successors:  38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 416 415 19)


;; Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  2 3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 117 118 119 120

(code_label 19 416 20 5 2 "" [2 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 (set (reg:DF 8 st [117])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 22 21 23 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])
        (reg:DF 8 st [117])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 23 22 24 5 (set (reg:DF 8 st [118])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 24 23 25 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])
        (reg:DF 8 st [118])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 25 24 26 5 (set (reg:DF 8 st [119])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 26 25 27 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])
        (reg:DF 8 st [119])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 27 26 28 5 (set (reg:DF 8 st [120])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 28 27 29 5 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])
        (reg:DF 8 st [120])) speller.c:39 109 {*movdf_internal}
     (nil))

(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:42 6 {*cmpsi_1}
     (nil))

(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) speller.c:42 596 {*jcc_1}
     (nil)
 -> 36)

;; Successors:  6 (fallthru) 7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  5 (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 121

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:42 64 {*movsi_internal}
     (nil))

(insn 33 32 417 6 (set (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:42 64 {*movsi_internal}
     (nil))

(jump_insn 417 33 418 6 (set (pc)
        (label_ref 39)) 611 {jump}
     (nil)
 -> 39)

;; Successors:  8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


(barrier 418 417 36)


;; Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60

(code_label 36 418 37 7 4 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 (set (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0xb6a301e0 *.LC2>)) speller.c:42 64 {*movsi_internal}
     (nil))

;; Successors:  8 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60



;; Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  7 (fallthru) 6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 62 122 123 124 125 126

(code_label 39 38 40 8 5 "" [1 uses])

(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])
        (reg/f:SI 0 ax [orig:60 iftmp.0 ] [60])) speller.c:42 64 {*movsi_internal}
     (nil))

(insn 42 41 43 8 (parallel [
            (set (reg:SI 0 ax [122])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:45 250 {*addsi_1}
     (nil))

(insn 43 42 44 8 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [122])) speller.c:45 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 44 43 45 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:45 64 {*movsi_internal}
     (nil))

(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:45 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 46 45 47 8 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:46 64 {*movsi_internal}
     (nil))

(insn 47 46 48 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [123])) speller.c:46 64 {*movsi_internal}
     (nil))

(call_insn 48 47 50 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("load") [flags 0x41]  <function_decl 0xb6a0e680 load>) [0 load S1 A8])
            (const_int 4 [0x4]))) speller.c:46 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 50 48 51 8 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 53 [0x35])) [0 loaded+0 S1 A8])
        (reg:QI 0 ax [124])) speller.c:46 66 {*movqi_internal}
     (nil))

(insn 51 50 52 8 (parallel [
            (set (reg:SI 0 ax [125])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:47 250 {*addsi_1}
     (nil))

(insn 52 51 53 8 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [125])) speller.c:47 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 53 52 54 8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:47 64 {*movsi_internal}
     (nil))

(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:47 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 55 54 56 8 (set (reg:QI 0 ax [126])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 53 [0x35])) [0 loaded+0 S1 A8])) speller.c:50 66 {*movqi_internal}
     (nil))

(insn 56 55 57 8 (parallel [
            (set (reg:QI 0 ax [orig:62 D.1856 ] [62])
                (xor:QI (reg:QI 0 ax [126])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:50 401 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

(insn 57 56 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.1856 ] [62])
            (const_int 0 [0]))) speller.c:50 0 {*cmpqi_ccno_1}
     (nil))

(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) speller.c:50 596 {*jcc_1}
     (nil)
 -> 67)

;; Successors:  9 (fallthru) 10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  8 (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 127

(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:52 64 {*movsi_internal}
     (nil))

(insn 61 60 62 9 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [127])) speller.c:52 64 {*movsi_internal}
     (nil))

(insn 62 61 63 9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0xb6a30240 *.LC3>)) speller.c:52 64 {*movsi_internal}
     (nil))

(call_insn 63 62 64 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:52 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 64 63 419 9 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 2 [0x2])) speller.c:53 64 {*movsi_internal}
     (nil))

(jump_insn 419 64 420 9 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

;; Successors:  38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 420 419 67)


;; Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 128 129 130

(code_label 67 420 68 10 6 "" [1 uses])

(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 10 (parallel [
            (set (reg:SI 0 ax [128])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 250 {*addsi_1}
     (nil))

(insn 70 69 71 10 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [128])) speller.c:57 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 71 70 72 10 (parallel [
            (set (reg:SI 0 ax [129])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 250 {*addsi_1}
     (nil))

(insn 72 71 73 10 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [129])) speller.c:57 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 73 72 75 10 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:57 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 75 73 76 10 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])
        (reg:DF 8 st [130])) speller.c:57 109 {*movdf_internal}
     (nil))

(insn 76 75 77 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:60 6 {*cmpsi_1}
     (nil))

(jump_insn 77 76 78 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) speller.c:60 596 {*jcc_1}
     (nil)
 -> 83)

;; Successors:  11 (fallthru) 12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  10 (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 131

(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 11 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(insn 80 79 421 11 (set (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_21(D) + 8B]+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(jump_insn 421 80 422 11 (set (pc)
        (label_ref 87)) 611 {jump}
     (nil)
 -> 87)

;; Successors:  13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


(barrier 422 421 83)


;; Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 132

(code_label 83 422 84 12 7 "" [1 uses])

(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 12 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 argv+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

(insn 86 85 87 12 (set (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:60 64 {*movsi_internal}
     (nil))

;; Successors:  13 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61



;; Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  12 (fallthru) 11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 133 134

(code_label 87 86 88 13 8 "" [1 uses])

(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])
        (reg/f:SI 0 ax [orig:61 iftmp.1 ] [61])) speller.c:60 64 {*movsi_internal}
     (nil))

(insn 90 89 91 13 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0xb6a302a0 *.LC4>)) speller.c:61 64 {*movsi_internal}
     (nil))

(insn 91 90 92 13 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:61 64 {*movsi_internal}
     (nil))

(insn 92 91 93 13 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [133])) speller.c:61 64 {*movsi_internal}
     (nil))

(call_insn 93 92 95 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fopen") [flags 0x41]  <function_decl 0xb69f3880 fopen>) [0 fopen S1 A8])
            (const_int 8 [0x8]))) speller.c:61 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 95 93 96 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])
        (reg:SI 0 ax [134])) speller.c:61 64 {*movsi_internal}
     (nil))

(insn 96 95 97 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 80 [0x50])) [0 fp+0 S4 A32])
            (const_int 0 [0]))) speller.c:62 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 97 96 98 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) speller.c:62 596 {*jcc_1}
     (nil)
 -> 107)

;; Successors:  14 (fallthru) 15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  13 (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 135

(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 14 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:64 64 {*movsi_internal}
     (nil))

(insn 100 99 101 14 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [135])) speller.c:64 64 {*movsi_internal}
     (nil))

(insn 101 100 102 14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0xb6a30300 *.LC5>)) speller.c:64 64 {*movsi_internal}
     (nil))

(call_insn 102 101 103 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:64 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 103 102 104 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:65 632 {*call_value}
     (nil)
    (nil))

(insn 104 103 423 14 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 3 [0x3])) speller.c:66 64 {*movsi_internal}
     (nil))

(jump_insn 423 104 424 14 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

;; Successors:  38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 424 423 107)


;; Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 136 137

(code_label 107 424 108 15 9 "" [1 uses])

(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0xb6a30360 *.LC6>)) speller.c:70 64 {*movsi_internal}
     (nil))

(call_insn 110 109 111 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:70 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 111 110 112 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 112 111 113 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 113 112 114 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 words+0 S4 A32])
        (const_int 0 [0])) speller.c:73 64 {*movsi_internal}
     (nil))

(insn 114 113 115 15 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:78 64 {*movsi_internal}
     (nil))

(insn 115 114 116 15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [136])) speller.c:78 64 {*movsi_internal}
     (nil))

(call_insn 116 115 118 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 118 116 425 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [137])) speller.c:78 64 {*movsi_internal}
     (nil))

(jump_insn 425 118 426 15 (set (pc)
        (label_ref 275)) speller.c:78 611 {jump}
     (nil)
 -> 275)

;; Successors:  32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


(barrier 426 425 277)


;; Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  32
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 63 64 65 66 67 68 69 70

(code_label 277 426 121 16 21 "" [1 uses])

(note 121 277 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 122 121 124 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:81 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 124 122 125 16 (set (reg/f:SI 0 ax [orig:64 D.1869 ] [64])
        (mem/f:SI (reg/f:SI 0 ax [orig:63 D.1868 ] [63]) [0 *D.1868_38+0 S4 A32])) speller.c:81 64 {*movsi_internal}
     (nil))

(insn 125 124 126 16 (set (reg:SI 1 dx [orig:65 c.2 ] [65])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:81 64 {*movsi_internal}
     (nil))

(insn 126 125 127 16 (parallel [
            (set (reg:SI 1 dx [orig:66 D.1871 ] [66])
                (ashift:SI (reg:SI 1 dx [orig:65 c.2 ] [65])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 496 {*ashlsi3_1}
     (nil))

(insn 127 126 128 16 (parallel [
            (set (reg/f:SI 0 ax [orig:67 D.1872 ] [67])
                (plus:SI (reg/f:SI 0 ax [orig:64 D.1869 ] [64])
                    (reg:SI 1 dx [orig:66 D.1871 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 250 {*addsi_1}
     (nil))

(insn 128 127 129 16 (set (reg:HI 0 ax [orig:68 D.1873 ] [68])
        (mem:HI (reg/f:SI 0 ax [orig:67 D.1872 ] [67]) [0 *D.1872_42+0 S2 A16])) speller.c:81 65 {*movhi_internal}
     (nil))

(insn 129 128 130 16 (set (reg:SI 0 ax [orig:69 D.1874 ] [69])
        (zero_extend:SI (reg:HI 0 ax [orig:68 D.1873 ] [68]))) speller.c:81 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 130 129 131 16 (parallel [
            (set (reg:SI 0 ax [orig:70 D.1875 ] [70])
                (and:SI (reg:SI 0 ax [orig:69 D.1874 ] [69])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 377 {*andsi_1}
     (nil))

(insn 131 130 132 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:70 D.1875 ] [70])
            (const_int 0 [0]))) speller.c:81 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 132 131 133 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) speller.c:81 596 {*jcc_1}
     (nil)
 -> 139)

;; Successors:  19 17 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  16 (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(note 133 132 134 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int 39 [0x27]))) speller.c:81 6 {*cmpsi_1}
     (nil))

(jump_insn 135 134 136 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 596 {*jcc_1}
     (nil)
 -> 179)

;; Successors:  18 (fallthru) 23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  17 (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(note 136 135 137 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:81 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 138 137 139 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 596 {*jcc_1}
     (nil)
 -> 179)

;; Successors:  19 (fallthru) 23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  16 18 (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 138 139 140 141

(code_label 139 138 140 19 11 "" [1 uses])

(note 140 139 141 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 19 (set (reg:SI 0 ax [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:84 64 {*movsi_internal}
     (nil))

(insn 142 141 143 19 (set (reg:QI 0 ax [orig:96 D.1878 ] [96])
        (reg:QI 0 ax [138])) speller.c:84 66 {*movqi_internal}
     (nil))

(insn 143 142 144 19 (parallel [
            (set (reg:SI 2 cx [139])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 250 {*addsi_1}
     (nil))

(insn 144 143 145 19 (set (reg:SI 1 dx [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])) speller.c:84 64 {*movsi_internal}
     (nil))

(insn 145 144 146 19 (parallel [
            (set (reg/f:SI 1 dx [140])
                (plus:SI (reg:SI 2 cx [139])
                    (reg:SI 1 dx [141])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 250 {*addsi_1}
     (nil))

(insn 146 145 147 19 (set (mem/j:QI (reg/f:SI 1 dx [140]) [0 word S1 A8])
        (reg:QI 0 ax [orig:96 D.1878 ] [96])) speller.c:84 66 {*movqi_internal}
     (nil))

(insn 147 146 148 19 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [0 index+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [0 index+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:85 250 {*addsi_1}
     (nil))

(insn 148 147 149 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 45 [0x2d]))) speller.c:88 6 {*cmpsi_1}
     (nil))

(jump_insn 149 148 169 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 268)
            (pc))) speller.c:88 596 {*jcc_1}
     (nil)
 -> 268)

;; Successors:  20 (fallthru) 31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  19 (fallthru) 21 (dfs_back)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 142 143

(code_label 169 149 151 20 15 "" [1 uses])

(note 151 169 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 20 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 153 152 154 20 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [142])) speller.c:91 64 {*movsi_internal}
     (nil))

(call_insn 154 153 156 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:91 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 156 154 157 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [143])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 157 156 158 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:91 6 {*cmpsi_1}
     (nil))

(jump_insn 158 157 159 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) speller.c:91 596 {*jcc_1}
     (nil)
 -> 172)

;; Successors:  21 (fallthru) 22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  20 (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 97 98 99 100 101 102 103 104

(note 159 158 160 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 160 159 162 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:91 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 162 160 163 21 (set (reg/f:SI 0 ax [orig:98 D.1883 ] [98])
        (mem/f:SI (reg/f:SI 0 ax [orig:97 D.1882 ] [97]) [0 *D.1882_81+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 163 162 164 21 (set (reg:SI 1 dx [orig:99 c.3 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:91 64 {*movsi_internal}
     (nil))

(insn 164 163 165 21 (parallel [
            (set (reg:SI 1 dx [orig:100 D.1885 ] [100])
                (ashift:SI (reg:SI 1 dx [orig:99 c.3 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 496 {*ashlsi3_1}
     (nil))

(insn 165 164 166 21 (parallel [
            (set (reg/f:SI 0 ax [orig:101 D.1886 ] [101])
                (plus:SI (reg/f:SI 0 ax [orig:98 D.1883 ] [98])
                    (reg:SI 1 dx [orig:100 D.1885 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 250 {*addsi_1}
     (nil))

(insn 166 165 167 21 (set (reg:HI 0 ax [orig:102 D.1887 ] [102])
        (mem:HI (reg/f:SI 0 ax [orig:101 D.1886 ] [101]) [0 *D.1886_85+0 S2 A16])) speller.c:91 65 {*movhi_internal}
     (nil))

(insn 167 166 168 21 (set (reg:SI 0 ax [orig:103 D.1888 ] [103])
        (zero_extend:SI (reg:HI 0 ax [orig:102 D.1887 ] [102]))) speller.c:91 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 168 167 170 21 (parallel [
            (set (reg:SI 0 ax [orig:104 D.1889 ] [104])
                (and:SI (reg:SI 0 ax [orig:103 D.1888 ] [103])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 377 {*andsi_1}
     (nil))

(insn 170 168 171 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 D.1889 ] [104])
            (const_int 0 [0]))) speller.c:91 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 171 170 172 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) speller.c:91 596 {*jcc_1}
     (nil)
 -> 169)

;; Successors:  20 (dfs_back) 22 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  20 21 (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

(code_label 172 171 173 22 14 "" [1 uses])

(note 173 172 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 427 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:94 64 {*movsi_internal}
     (nil))

(jump_insn 427 174 428 22 (set (pc)
        (label_ref 268)) speller.c:88 611 {jump}
     (nil)
 -> 268)

;; Successors:  31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


(barrier 428 427 179)


;; Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  17 18
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 71 72 73 74 75 76 77 78

(code_label 179 428 180 23 12 "" [2 uses])

(note 180 179 181 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 181 180 183 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:99 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 183 181 184 23 (set (reg/f:SI 0 ax [orig:72 D.1891 ] [72])
        (mem/f:SI (reg/f:SI 0 ax [orig:71 D.1890 ] [71]) [0 *D.1890_46+0 S4 A32])) speller.c:99 64 {*movsi_internal}
     (nil))

(insn 184 183 185 23 (set (reg:SI 1 dx [orig:73 c.4 ] [73])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:99 64 {*movsi_internal}
     (nil))

(insn 185 184 186 23 (parallel [
            (set (reg:SI 1 dx [orig:74 D.1893 ] [74])
                (ashift:SI (reg:SI 1 dx [orig:73 c.4 ] [73])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 496 {*ashlsi3_1}
     (nil))

(insn 186 185 187 23 (parallel [
            (set (reg/f:SI 0 ax [orig:75 D.1894 ] [75])
                (plus:SI (reg/f:SI 0 ax [orig:72 D.1891 ] [72])
                    (reg:SI 1 dx [orig:74 D.1893 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 250 {*addsi_1}
     (nil))

(insn 187 186 188 23 (set (reg:HI 0 ax [orig:76 D.1895 ] [76])
        (mem:HI (reg/f:SI 0 ax [orig:75 D.1894 ] [75]) [0 *D.1894_50+0 S2 A16])) speller.c:99 65 {*movhi_internal}
     (nil))

(insn 188 187 189 23 (set (reg:SI 0 ax [orig:77 D.1896 ] [77])
        (zero_extend:SI (reg:HI 0 ax [orig:76 D.1895 ] [76]))) speller.c:99 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 189 188 190 23 (parallel [
            (set (reg:SI 0 ax [orig:78 D.1897 ] [78])
                (and:SI (reg:SI 0 ax [orig:77 D.1896 ] [77])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 377 {*andsi_1}
     (nil))

(insn 190 189 191 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:78 D.1897 ] [78])
            (const_int 0 [0]))) speller.c:99 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 191 190 211 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) speller.c:99 596 {*jcc_1}
     (nil)
 -> 219)

;; Successors:  24 (fallthru) 27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  23 (fallthru) 25 (dfs_back)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 144 145

(code_label 211 191 193 24 19 "" [1 uses])

(note 193 211 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 24 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 195 194 196 24 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [144])) speller.c:102 64 {*movsi_internal}
     (nil))

(call_insn 196 195 198 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:102 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 198 196 199 24 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [145])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 199 198 200 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:102 6 {*cmpsi_1}
     (nil))

(jump_insn 200 199 201 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) speller.c:102 596 {*jcc_1}
     (nil)
 -> 214)

;; Successors:  25 (fallthru) 26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  24 (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 79 80 81 82 83 84 85 86

(note 201 200 202 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 202 201 204 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:102 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 204 202 205 25 (set (reg/f:SI 0 ax [orig:80 D.1902 ] [80])
        (mem/f:SI (reg/f:SI 0 ax [orig:79 D.1901 ] [79]) [0 *D.1901_55+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 205 204 206 25 (set (reg:SI 1 dx [orig:81 c.5 ] [81])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])) speller.c:102 64 {*movsi_internal}
     (nil))

(insn 206 205 207 25 (parallel [
            (set (reg:SI 1 dx [orig:82 D.1904 ] [82])
                (ashift:SI (reg:SI 1 dx [orig:81 c.5 ] [81])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 496 {*ashlsi3_1}
     (nil))

(insn 207 206 208 25 (parallel [
            (set (reg/f:SI 0 ax [orig:83 D.1905 ] [83])
                (plus:SI (reg/f:SI 0 ax [orig:80 D.1902 ] [80])
                    (reg:SI 1 dx [orig:82 D.1904 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 250 {*addsi_1}
     (nil))

(insn 208 207 209 25 (set (reg:HI 0 ax [orig:84 D.1906 ] [84])
        (mem:HI (reg/f:SI 0 ax [orig:83 D.1905 ] [83]) [0 *D.1905_59+0 S2 A16])) speller.c:102 65 {*movhi_internal}
     (nil))

(insn 209 208 210 25 (set (reg:SI 0 ax [orig:85 D.1907 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 D.1906 ] [84]))) speller.c:102 119 {*zero_extendhisi2_movzwl}
     (nil))

(insn 210 209 212 25 (parallel [
            (set (reg:SI 0 ax [orig:86 D.1908 ] [86])
                (and:SI (reg:SI 0 ax [orig:85 D.1907 ] [85])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 377 {*andsi_1}
     (nil))

(insn 212 210 213 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 D.1908 ] [86])
            (const_int 0 [0]))) speller.c:102 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 213 212 214 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) speller.c:102 596 {*jcc_1}
     (nil)
 -> 211)

;; Successors:  24 (dfs_back) 26 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  24 25 (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

(code_label 214 213 215 26 18 "" [1 uses])

(note 215 214 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 429 26 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:105 64 {*movsi_internal}
     (nil))

(jump_insn 429 216 430 26 (set (pc)
        (label_ref 268)) 611 {jump}
     (nil)
 -> 268)

;; Successors:  31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


(barrier 430 429 219)


;; Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  23
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(code_label 219 430 220 27 17 "" [1 uses])

(note 220 219 221 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 27 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:109 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 222 221 223 27 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) speller.c:109 596 {*jcc_1}
     (nil)
 -> 268)

;; Successors:  28 (fallthru) 31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  27 (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 87 88 89 90 91 92 93 94 95 146 147 148 149 150 151 152 153

(note 223 222 224 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 28 (parallel [
            (set (reg:SI 1 dx [146])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 250 {*addsi_1}
     (nil))

(insn 225 224 226 28 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])) speller.c:112 64 {*movsi_internal}
     (nil))

(insn 226 225 227 28 (parallel [
            (set (reg/f:SI 0 ax [147])
                (plus:SI (reg:SI 1 dx [146])
                    (reg:SI 0 ax [148])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 250 {*addsi_1}
     (nil))

(insn 227 226 228 28 (set (mem/j:QI (reg/f:SI 0 ax [147]) [0 word S1 A8])
        (const_int 0 [0])) speller.c:112 66 {*movqi_internal}
     (nil))

(insn 228 227 229 28 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 64 [0x40])) [0 words+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 64 [0x40])) [0 words+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:115 250 {*addsi_1}
     (nil))

(insn 229 228 230 28 (parallel [
            (set (reg:SI 0 ax [149])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:118 250 {*addsi_1}
     (nil))

(insn 230 229 231 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [149])) speller.c:118 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 231 230 232 28 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:118 64 {*movsi_internal}
     (nil))

(call_insn 232 231 233 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:118 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 233 232 234 28 (parallel [
            (set (reg:SI 0 ax [150])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 250 {*addsi_1}
     (nil))

(insn 234 233 235 28 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [150])) speller.c:119 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 235 234 237 28 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("check") [flags 0x41]  <function_decl 0xb6a0e600 check>) [0 check S1 A8])
            (const_int 4 [0x4]))) speller.c:119 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 237 235 238 28 (parallel [
            (set (reg:SI 0 ax [orig:88 D.1913 ] [88])
                (zero_extend:SI (reg:QI 0 ax [orig:87 D.1912 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 123 {*zero_extendqisi2_movzbl_and}
     (nil))

(insn 238 237 239 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 D.1913 ] [88])
            (const_int 0 [0]))) speller.c:119 2 {*cmpsi_ccno_1}
     (nil))

(insn 239 238 240 28 (set (reg:QI 0 ax [orig:89 D.1914 ] [89])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) speller.c:119 592 {*setcc_qi}
     (nil))

(insn 240 239 241 28 (parallel [
            (set (reg:QI 0 ax [orig:90 D.1915 ] [90])
                (xor:QI (reg:QI 0 ax [orig:89 D.1914 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 401 {*xorqi_1}
     (nil))

(insn 241 240 242 28 (parallel [
            (set (reg:SI 0 ax [orig:91 D.1916 ] [91])
                (zero_extend:SI (reg:QI 0 ax [orig:90 D.1915 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 123 {*zero_extendqisi2_movzbl_and}
     (nil))

(insn 242 241 243 28 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
        (reg:QI 0 ax [orig:91 D.1916 ] [91])) speller.c:119 66 {*movqi_internal}
     (nil))

(insn 243 242 244 28 (parallel [
            (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                        (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
                (and:QI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                            (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 380 {*andqi_1}
     (nil))

(insn 244 243 245 28 (parallel [
            (set (reg:SI 0 ax [151])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:120 250 {*addsi_1}
     (nil))

(insn 245 244 246 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [151])) speller.c:120 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 246 245 247 28 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:120 64 {*movsi_internal}
     (nil))

(call_insn 247 246 248 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:120 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 248 247 438 28 (set (reg:XF 8 st)
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 88 [0x58])) [0 ti_check+0 S8 A64]))) speller.c:123 139 {*extenddfxf2_i387}
     (nil))

(insn 438 248 249 28 (set (mem/c:XF (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-304 S12 A128])
        (reg:XF 8 st)) speller.c:123 107 {*movxf_internal}
     (nil))

(insn 249 438 250 28 (parallel [
            (set (reg:SI 0 ax [152])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 250 {*addsi_1}
     (nil))

(insn 250 249 251 28 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [152])) speller.c:123 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 251 250 252 28 (parallel [
            (set (reg:SI 0 ax [153])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 250 {*addsi_1}
     (nil))

(insn 252 251 253 28 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [153])) speller.c:123 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 253 252 255 28 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:123 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 255 253 439 28 (set (reg:XF 8 st [orig:94 D.1919 ] [94])
        (float_extend:XF (reg:DF 8 st [orig:93 D.1918 ] [93]))) speller.c:123 139 {*extenddfxf2_i387}
     (nil))

(insn 439 255 256 28 (set (reg:XF 9 st(1))
        (mem/c:XF (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-304 S12 A128])) speller.c:123 107 {*movxf_internal}
     (nil))

(insn 256 439 435 28 (set (reg:XF 8 st [orig:95 D.1920 ] [95])
        (plus:XF (reg:XF 8 st [orig:94 D.1919 ] [94])
            (reg:XF 9 st(1)))) speller.c:123 772 {*fop_xf_comm_i387}
     (nil))

(insn 435 256 258 28 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])
        (float_truncate:DF (reg:XF 8 st [orig:95 D.1920 ] [95]))) speller.c:123 151 {*truncxfdf2_i387}
     (nil))

(insn 258 435 259 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 54 [0x36])) [0 misspelled+0 S1 A8])
            (const_int 0 [0]))) speller.c:126 0 {*cmpqi_ccno_1}
     (nil))

(jump_insn 259 258 260 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) speller.c:126 596 {*jcc_1}
     (nil)
 -> 265)

;; Successors:  29 (fallthru) 30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  28 (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 154

(note 260 259 261 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 261 260 262 29 (parallel [
            (set (reg:SI 0 ax [154])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:128 250 {*addsi_1}
     (nil))

(insn 262 261 263 29 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [154])) speller.c:128 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 263 262 264 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:128 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 264 263 265 29 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:129 250 {*addsi_1}
     (nil))

;; Successors:  30 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  28 29 (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

(code_label 265 264 266 30 20 "" [1 uses])

(note 266 265 267 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 30 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:133 64 {*movsi_internal}
     (nil))

;; Successors:  31 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  19 22 [100.0%]  27 30 (fallthru) 26 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 155 156

(code_label 268 267 269 31 16 "" [4 uses])

(note 269 268 270 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 31 (set (reg/f:SI 0 ax [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:78 64 {*movsi_internal}
     (nil))

(insn 271 270 272 31 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [155])) speller.c:78 64 {*movsi_internal}
     (nil))

(call_insn 272 271 274 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 274 272 275 31 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 c+0 S4 A32])
        (reg:SI 0 ax [156])) speller.c:78 64 {*movsi_internal}
     (nil))

;; Successors:  32 (fallthru,dfs_back)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  31 (fallthru,dfs_back) 15 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(code_label 275 274 276 32 10 "" [1 uses])

(note 276 275 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 278 276 279 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:78 6 {*cmpsi_1}
     (nil))

(jump_insn 279 278 280 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) speller.c:78 596 {*jcc_1}
     (nil)
 -> 277)

;; Successors:  16 33 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  32 (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 105 157

(note 280 279 281 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 281 280 282 33 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:138 64 {*movsi_internal}
     (nil))

(insn 282 281 283 33 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [157])) speller.c:138 64 {*movsi_internal}
     (nil))

(call_insn 283 282 285 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("ferror") [flags 0x41]  <function_decl 0xb69f9e80 ferror>) [0 ferror S1 A8])
            (const_int 4 [0x4]))) speller.c:138 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 285 283 286 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:105 D.1923 ] [105])
            (const_int 0 [0]))) speller.c:138 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 286 285 287 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) speller.c:138 596 {*jcc_1}
     (nil)
 -> 299)

;; Successors:  34 (fallthru) 35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  33 (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 158 159

(note 287 286 288 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 289 34 (set (reg/f:SI 0 ax [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:140 64 {*movsi_internal}
     (nil))

(insn 289 288 290 34 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [158])) speller.c:140 64 {*movsi_internal}
     (nil))

(call_insn 290 289 291 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:140 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 291 290 292 34 (set (reg/f:SI 0 ax [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 text+0 S4 A32])) speller.c:141 64 {*movsi_internal}
     (nil))

(insn 292 291 293 34 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [159])) speller.c:141 64 {*movsi_internal}
     (nil))

(insn 293 292 294 34 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0xb6a303c0 *.LC7>)) speller.c:141 64 {*movsi_internal}
     (nil))

(call_insn 294 293 295 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:141 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 295 294 296 34 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:142 632 {*call_value}
     (nil)
    (nil))

(insn 296 295 431 34 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 4 [0x4])) speller.c:143 64 {*movsi_internal}
     (nil))

(jump_insn 431 296 432 34 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

;; Successors:  38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 432 431 299)


;; Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  33
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 106 160 161 162 163 164 165 166 167 168 169 170

(code_label 299 432 300 35 22 "" [1 uses])

(note 300 299 301 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 35 (set (reg/f:SI 0 ax [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [0 fp+0 S4 A32])) speller.c:147 64 {*movsi_internal}
     (nil))

(insn 302 301 303 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [160])) speller.c:147 64 {*movsi_internal}
     (nil))

(call_insn 303 302 304 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:147 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 304 303 305 35 (parallel [
            (set (reg:SI 0 ax [161])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:150 250 {*addsi_1}
     (nil))

(insn 305 304 306 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [161])) speller.c:150 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 306 305 307 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:150 64 {*movsi_internal}
     (nil))

(call_insn 307 306 308 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:150 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 308 307 310 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("size") [flags 0x41]  <function_decl 0xb6a0e700 size>) [0 size S1 A8])
            (const_int 0 [0]))) speller.c:151 632 {*call_value}
     (nil)
    (nil))

(insn 310 308 311 35 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [0 n+0 S4 A32])
        (reg:SI 0 ax [162])) speller.c:151 64 {*movsi_internal}
     (nil))

(insn 311 310 312 35 (parallel [
            (set (reg:SI 0 ax [163])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:152 250 {*addsi_1}
     (nil))

(insn 312 311 313 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [163])) speller.c:152 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 313 312 314 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:152 64 {*movsi_internal}
     (nil))

(call_insn 314 313 315 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:152 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 315 314 316 35 (parallel [
            (set (reg:SI 0 ax [164])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 250 {*addsi_1}
     (nil))

(insn 316 315 317 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [164])) speller.c:155 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 317 316 318 35 (parallel [
            (set (reg:SI 0 ax [165])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 250 {*addsi_1}
     (nil))

(insn 318 317 319 35 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [165])) speller.c:155 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 319 318 321 35 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:155 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 321 319 322 35 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])
        (reg:DF 8 st [166])) speller.c:155 109 {*movdf_internal}
     (nil))

(insn 322 321 323 35 (parallel [
            (set (reg:SI 0 ax [167])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:158 250 {*addsi_1}
     (nil))

(insn 323 322 324 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [167])) speller.c:158 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 324 323 325 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:158 64 {*movsi_internal}
     (nil))

(call_insn 325 324 326 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:158 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 326 325 328 35 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:159 632 {*call_value}
     (nil)
    (nil))

(insn 328 326 329 35 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 55 [0x37])) [0 unloaded+0 S1 A8])
        (reg:QI 0 ax [168])) speller.c:159 66 {*movqi_internal}
     (nil))

(insn 329 328 330 35 (parallel [
            (set (reg:SI 0 ax [169])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:160 250 {*addsi_1}
     (nil))

(insn 330 329 331 35 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [169])) speller.c:160 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 331 330 332 35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0])) speller.c:160 64 {*movsi_internal}
     (nil))

(call_insn 332 331 333 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:160 632 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 333 332 334 35 (set (reg:QI 0 ax [170])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 55 [0x37])) [0 unloaded+0 S1 A8])) speller.c:163 66 {*movqi_internal}
     (nil))

(insn 334 333 335 35 (parallel [
            (set (reg:QI 0 ax [orig:106 D.1926 ] [106])
                (xor:QI (reg:QI 0 ax [170])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:163 401 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

(insn 335 334 336 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:106 D.1926 ] [106])
            (const_int 0 [0]))) speller.c:163 0 {*cmpqi_ccno_1}
     (nil))

(jump_insn 336 335 337 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) speller.c:163 596 {*jcc_1}
     (nil)
 -> 345)

;; Successors:  36 (fallthru) 37
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  35 (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 171

(note 337 336 338 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 338 337 339 36 (set (reg/f:SI 0 ax [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 dictionary+0 S4 A32])) speller.c:165 64 {*movsi_internal}
     (nil))

(insn 339 338 340 36 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [171])) speller.c:165 64 {*movsi_internal}
     (nil))

(insn 340 339 341 36 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0xb6a30420 *.LC8>)) speller.c:165 64 {*movsi_internal}
     (nil))

(call_insn 341 340 342 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:165 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 342 341 433 36 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 5 [0x5])) speller.c:166 64 {*movsi_internal}
     (nil))

(jump_insn 433 342 434 36 (set (pc)
        (label_ref 396)) 611 {jump}
     (nil)
 -> 396)

;; Successors:  38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 434 433 345)


;; Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  35
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 107 108 109 110 111 112 113 114 172 173 174 175 176 177 178 179 180 181

(code_label 345 434 346 37 23 "" [1 uses])

(note 346 345 347 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 347 346 348 37 (parallel [
            (set (reg:SI 0 ax [172])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 250 {*addsi_1}
     (nil))

(insn 348 347 349 37 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [172])) speller.c:170 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 349 348 350 37 (parallel [
            (set (reg:SI 0 ax [173])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 124 [0x7c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 250 {*addsi_1}
     (nil))

(insn 350 349 351 37 (set (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [173])) speller.c:170 64 {*movsi_internal}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 351 350 353 37 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:170 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 353 351 354 37 (set (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])
        (reg:DF 8 st [174])) speller.c:170 109 {*movdf_internal}
     (nil))

(insn 354 353 355 37 (set (reg:SI 0 ax [175])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 misspellings+0 S4 A32])) speller.c:173 64 {*movsi_internal}
     (nil))

(insn 355 354 356 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [175])) speller.c:173 64 {*movsi_internal}
     (nil))

(insn 356 355 357 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0xb6a30480 *.LC9>)) speller.c:173 64 {*movsi_internal}
     (nil))

(call_insn 357 356 358 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:173 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 358 357 359 37 (set (reg:SI 0 ax [176])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [0 n+0 S4 A32])) speller.c:174 64 {*movsi_internal}
     (nil))

(insn 359 358 360 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [176])) speller.c:174 64 {*movsi_internal}
     (nil))

(insn 360 359 361 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0xb6a304e0 *.LC10>)) speller.c:174 64 {*movsi_internal}
     (nil))

(call_insn 361 360 362 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:174 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 362 361 363 37 (set (reg:SI 0 ax [177])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 words+0 S4 A32])) speller.c:175 64 {*movsi_internal}
     (nil))

(insn 363 362 364 37 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [177])) speller.c:175 64 {*movsi_internal}
     (nil))

(insn 364 363 365 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0xb6a30540 *.LC11>)) speller.c:175 64 {*movsi_internal}
     (nil))

(call_insn 365 364 366 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:175 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 366 365 367 37 (set (reg:DF 8 st [178])
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [0 ti_load+0 S8 A64])) speller.c:176 109 {*movdf_internal}
     (nil))

(insn 367 366 368 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st [178])) speller.c:176 109 {*movdf_internal}
     (nil))

(insn 368 367 369 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0xb6a305a0 *.LC12>)) speller.c:176 64 {*movsi_internal}
     (nil))

(call_insn 369 368 370 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:176 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 370 369 371 37 (set (reg:DF 8 st [179])
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [0 ti_check+0 S8 A64])) speller.c:177 109 {*movdf_internal}
     (nil))

(insn 371 370 372 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st [179])) speller.c:177 109 {*movdf_internal}
     (nil))

(insn 372 371 373 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0xb6a30600 *.LC13>)) speller.c:177 64 {*movsi_internal}
     (nil))

(call_insn 373 372 374 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:177 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 374 373 375 37 (set (reg:DF 8 st [180])
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [0 ti_size+0 S8 A64])) speller.c:178 109 {*movdf_internal}
     (nil))

(insn 375 374 376 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st [180])) speller.c:178 109 {*movdf_internal}
     (nil))

(insn 376 375 377 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0xb6a30660 *.LC14>)) speller.c:178 64 {*movsi_internal}
     (nil))

(call_insn 377 376 378 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:178 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 378 377 379 37 (set (reg:DF 8 st [181])
        (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [0 ti_unload+0 S8 A64])) speller.c:179 109 {*movdf_internal}
     (nil))

(insn 379 378 380 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st [181])) speller.c:179 109 {*movdf_internal}
     (nil))

(insn 380 379 381 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0xb6a306c0 *.LC15>)) speller.c:179 64 {*movsi_internal}
     (nil))

(call_insn 381 380 382 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:179 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 382 381 383 37 (set (reg:XF 9 st(1) [orig:107 D.1929 ] [107])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 96 [0x60])) [0 ti_load+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 383 382 384 37 (set (reg:XF 8 st [orig:108 D.1930 ] [108])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 88 [0x58])) [0 ti_check+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 384 383 385 37 (set (reg:XF 9 st(1) [orig:109 D.1931 ] [109])
        (plus:XF (reg:XF 9 st(1) [orig:107 D.1929 ] [107])
            (reg:XF 8 st [orig:108 D.1930 ] [108]))) speller.c:180 772 {*fop_xf_comm_i387}
     (nil))

(insn 385 384 386 37 (set (reg:XF 8 st [orig:110 D.1932 ] [110])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 104 [0x68])) [0 ti_size+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 386 385 387 37 (set (reg:XF 9 st(1) [orig:111 D.1933 ] [111])
        (plus:XF (reg:XF 9 st(1) [orig:109 D.1931 ] [109])
            (reg:XF 8 st [orig:110 D.1932 ] [110]))) speller.c:180 772 {*fop_xf_comm_i387}
     (nil))

(insn 387 386 388 37 (set (reg:XF 8 st [orig:112 D.1934 ] [112])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                    (const_int 112 [0x70])) [0 ti_unload+0 S8 A64]))) speller.c:180 139 {*extenddfxf2_i387}
     (nil))

(insn 388 387 389 37 (set (reg:XF 8 st [orig:113 D.1935 ] [113])
        (plus:XF (reg:XF 8 st [orig:112 D.1934 ] [112])
            (reg:XF 9 st(1) [orig:111 D.1933 ] [111]))) speller.c:180 772 {*fop_xf_comm_i387}
     (nil))

(insn 389 388 390 37 (parallel [
            (set (reg:DF 8 st [orig:114 D.1936 ] [114])
                (float_truncate:DF (reg:XF 8 st [orig:113 D.1935 ] [113])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 32 [0x20])) [0 S8 A64]))
        ]) speller.c:180 147 {*truncxfdf2_mixed}
     (nil))

(insn 390 389 391 37 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 8 st [orig:114 D.1936 ] [114])) speller.c:180 109 {*movdf_internal}
     (nil))

(insn 391 390 392 37 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0xb6a30720 *.LC16>)) speller.c:180 64 {*movsi_internal}
     (nil))

(call_insn 392 391 393 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:180 632 {*call_value}
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 393 392 396 37 (set (reg:SI 0 ax [orig:59 D.1851 ] [59])
        (const_int 0 [0])) speller.c:184 64 {*movsi_internal}
     (nil))

;; Successors:  38 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59



;; Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  37 (fallthru) 34 [100.0%]  4 [100.0%]  9 [100.0%]  14 [100.0%]  36 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 17 [flags] 115

(code_label 396 393 397 38 24 "" [5 uses])

(note 397 396 405 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 405 397 406 38 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 316 [0x13c])) [0 D.1941+0 S4 A32])
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:SI 1 dx))
        ]) speller.c:185 942 {stack_tls_protect_test_si}
     (nil))

(jump_insn 406 405 413 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) speller.c:185 596 {*jcc_1}
     (nil)
 -> 409)

;; Successors:  40 39 (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  38 (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []

(note 413 406 407 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(call_insn 407 413 408 39 (call (mem:QI (symbol_ref:SI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xb6a0ed80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) speller.c:185 618 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

;; Successors: 
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]


(barrier 408 407 409)


;; Basic block 40 , prev 39, next 1, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

(code_label 409 408 414 40 25 "" [1 uses])

(note 414 409 410 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 410 414 436 40 (use (reg/i:SI 0 ax)) speller.c:185 -1
     (nil))

;; Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


(note 436 410 0 NOTE_INSN_DELETED)


;; Function calculate (calculate, funcdef_no=1, decl_uid=1783, cgraph_uid=1)

insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 
insn=10, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 59
insn=61, live_throughout: 7, 59, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 
insn=17, live_throughout: 7, dead_or_set: 83
insn=18, live_throughout: 7, dead_or_set: 60, 83
insn=19, live_throughout: 7, dead_or_set: 60, 61
insn=20, live_throughout: 7, 61, dead_or_set: 84
insn=21, live_throughout: 7, 61, dead_or_set: 62, 84
insn=22, live_throughout: 7, dead_or_set: 61, 62, 63
insn=23, live_throughout: 7, 63, dead_or_set: 85
insn=24, live_throughout: 7, 63, dead_or_set: 64, 85
insn=25, live_throughout: 7, 63, dead_or_set: 64, 65
insn=26, live_throughout: 7, 63, 65, dead_or_set: 86
insn=27, live_throughout: 7, 63, 65, dead_or_set: 66, 86
insn=28, live_throughout: 7, 63, dead_or_set: 65, 66, 67
insn=29, live_throughout: 7, dead_or_set: 63, 67, 68
insn=30, live_throughout: 7, 68, dead_or_set: 87
insn=31, live_throughout: 7, 68, dead_or_set: 69, 87
insn=32, live_throughout: 7, 68, dead_or_set: 69, 70
insn=33, live_throughout: 7, 68, 70, dead_or_set: 88
insn=34, live_throughout: 7, 68, 70, dead_or_set: 71, 88
insn=35, live_throughout: 7, 68, dead_or_set: 70, 71, 72
insn=36, live_throughout: 7, 68, 72, dead_or_set: 89
insn=37, live_throughout: 7, 68, 72, dead_or_set: 73, 89
insn=38, live_throughout: 7, 68, 72, dead_or_set: 73, 74
insn=39, live_throughout: 7, 68, 72, 74, dead_or_set: 90
insn=40, live_throughout: 7, 68, 72, 74, dead_or_set: 75, 90
insn=41, live_throughout: 7, 68, 72, dead_or_set: 74, 75, 76
insn=42, live_throughout: 7, 68, dead_or_set: 72, 76, 77
insn=43, live_throughout: 7, dead_or_set: 68, 77, 78
insn=63, live_throughout: 7, dead_or_set: 78, 79
insn=45, live_throughout: 7, dead_or_set: 79, 80
insn=46, live_throughout: 7, 80, dead_or_set: 91
insn=47, live_throughout: 7, dead_or_set: 80, 81, 91
insn=48, live_throughout: 7, dead_or_set: 59, 81
insn=49, live_throughout: 7, 59, dead_or_set: 
insn=51, live_throughout: 7, dead_or_set: 59, 82
insn=55, live_throughout: 7, dead_or_set: 8, 82
insn=58, live_throughout: 7, 8, dead_or_set: 
changing reg in insn 48
changing reg in insn 12
changing reg in insn 51
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 22
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 29
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 43
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 42
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 63
changing reg in insn 63
changing reg in insn 45
changing reg in insn 45
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 55
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 46
changing reg in insn 47
Spilling for insn 28.
Using reg 3 for reload 0
Spilling for insn 41.
Using reg 4 for reload 0
Spilling for insn 28.
Using reg 3 for reload 0
Spilling for insn 41.
Using reg 4 for reload 0

Reloads for insn # 28
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:65 D.1829 ] [65])
	reload_out (SI) = (reg:SI 0 ax [orig:67 D.1831 ] [67])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:65 D.1829 ] [65])
	reload_out_reg: (reg:SI 0 ax [orig:67 D.1831 ] [67])
	reload_reg_rtx: (reg:SI 3 bx)

Reloads for insn # 41
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:74 D.1838 ] [74])
	reload_out (SI) = (reg:SI 0 ax [orig:76 D.1840 ] [76])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:74 D.1838 ] [74])
	reload_out_reg: (reg:SI 0 ax [orig:76 D.1840 ] [76])
	reload_reg_rtx: (reg:SI 4 si)
deleting insn with uid = 51.
deleting insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns


calculate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 8 [st] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 6[bp] 8[st] 9[st(1)] 17[flags]
;;  ref usage 	r0={21d,20u} r1={5d,4u} r2={3d,2u} r3={3d,3u} r4={2d,2u} r6={1d,18u} r7={1d,6u} r8={5d,5u} r9={1d,1u} r17={13d,2u} r20={1d,1u} 
;;    total ref usage 120{56d,64u,0e} in 43{43 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)


;; Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  ENTRY (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 b+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) speller.c:195 596 {*jcc_1}
     (nil)
 -> 10)

;; Successors:  4 3 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  2 (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 12 [0xc])) [0 a+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) speller.c:195 596 {*jcc_1}
     (nil)
 -> 15)

;; Successors:  4 (fallthru) 5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]



;; Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  2 3 (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59

(code_label 10 9 11 4 27 "" [1 uses])

(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 61 4 (set (reg:DF 8 st [orig:59 D.1823 ] [59])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:196 109 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(jump_insn 61 12 62 4 (set (pc)
        (label_ref 49)) speller.c:196 611 {jump}
     (nil)
 -> 49)

;; Successors:  6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


(barrier 62 61 15)


;; Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 83 84 85 86 87 88 89 90 91

(code_label 15 62 16 5 28 "" [1 uses])

(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 (set (reg/f:SI 0 ax [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 18 17 19 5 (set (reg:SI 0 ax [orig:60 D.1824 ] [60])
        (mem/j:SI (reg/f:SI 0 ax [83]) [0 a_3(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 19 18 20 5 (parallel [
            (set (reg:SI 1 dx [orig:61 D.1825 ] [61])
                (mult:SI (reg:SI 0 ax [orig:60 D.1824 ] [60])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 328 {*mulsi3_1}
     (nil))

(insn 20 19 21 5 (set (reg/f:SI 0 ax [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 21 20 22 5 (set (reg:SI 0 ax [orig:62 D.1826 ] [62])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [84])
                (const_int 4 [0x4])) [0 a_3(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:198 64 {*movsi_internal}
     (nil))

(insn 22 21 23 5 (parallel [
            (set (reg:SI 2 cx [orig:63 D.1827 ] [63])
                (plus:SI (reg:SI 1 dx [orig:61 D.1825 ] [61])
                    (reg:SI 0 ax [orig:62 D.1826 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 250 {*addsi_1}
     (nil))

(insn 23 22 24 5 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 24 23 25 5 (set (reg:SI 0 ax [orig:64 D.1828 ] [64])
        (mem/j:SI (reg/f:SI 0 ax [85]) [0 b_2(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 25 24 26 5 (parallel [
            (set (reg:SI 1 dx [orig:65 D.1829 ] [65])
                (mult:SI (reg:SI 0 ax [orig:64 D.1828 ] [64])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 328 {*mulsi3_1}
     (nil))

(insn 26 25 27 5 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 27 26 66 5 (set (reg:SI 0 ax [orig:66 D.1830 ] [66])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 4 [0x4])) [0 b_2(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 66 27 28 5 (set (reg:SI 3 bx)
        (reg:SI 1 dx [orig:65 D.1829 ] [65])) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 28 66 67 5 (parallel [
            (set (reg:SI 3 bx)
                (minus:SI (reg:SI 3 bx)
                    (reg:SI 0 ax [orig:66 D.1830 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 286 {*subsi_1}
     (nil))

(insn 67 28 29 5 (set (reg:SI 0 ax [orig:67 D.1831 ] [67])
        (reg:SI 3 bx)) speller.c:199 64 {*movsi_internal}
     (nil))

(insn 29 67 30 5 (parallel [
            (set (reg:SI 2 cx [orig:68 D.1832 ] [68])
                (plus:SI (reg:SI 2 cx [orig:63 D.1827 ] [63])
                    (reg:SI 0 ax [orig:67 D.1831 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 250 {*addsi_1}
     (nil))

(insn 30 29 31 5 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 31 30 32 5 (set (reg:SI 0 ax [orig:69 D.1833 ] [69])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 8 [0x8])) [0 a_3(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 32 31 33 5 (parallel [
            (set (reg:SI 1 dx [orig:70 D.1834 ] [70])
                (mult:SI (reg:SI 0 ax [orig:69 D.1833 ] [69])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 328 {*mulsi3_1}
     (nil))

(insn 33 32 34 5 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 a+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 34 33 35 5 (set (reg:SI 0 ax [orig:71 D.1835 ] [71])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [88])
                (const_int 12 [0xc])) [0 a_3(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:200 64 {*movsi_internal}
     (nil))

(insn 35 34 36 5 (parallel [
            (set (reg:SI 3 bx [orig:72 D.1836 ] [72])
                (plus:SI (reg:SI 1 dx [orig:70 D.1834 ] [70])
                    (reg:SI 0 ax [orig:71 D.1835 ] [71])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 250 {*addsi_1}
     (nil))

(insn 36 35 37 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 37 36 38 5 (set (reg:SI 0 ax [orig:73 D.1837 ] [73])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [89])
                (const_int 8 [0x8])) [0 b_2(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 38 37 39 5 (parallel [
            (set (reg:SI 1 dx [orig:74 D.1838 ] [74])
                (mult:SI (reg:SI 0 ax [orig:73 D.1837 ] [73])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 328 {*mulsi3_1}
     (nil))

(insn 39 38 40 5 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 b+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 40 39 68 5 (set (reg:SI 0 ax [orig:75 D.1839 ] [75])
        (mem/j:SI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 12 [0xc])) [0 b_2(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 68 40 41 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:74 D.1838 ] [74])) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 41 68 69 5 (parallel [
            (set (reg:SI 4 si)
                (minus:SI (reg:SI 4 si)
                    (reg:SI 0 ax [orig:75 D.1839 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 286 {*subsi_1}
     (nil))

(insn 69 41 42 5 (set (reg:SI 0 ax [orig:76 D.1840 ] [76])
        (reg:SI 4 si)) speller.c:201 64 {*movsi_internal}
     (nil))

(insn 42 69 43 5 (parallel [
            (set (reg:SI 0 ax [orig:77 D.1841 ] [77])
                (plus:SI (reg:SI 3 bx [orig:72 D.1836 ] [72])
                    (reg:SI 0 ax [orig:76 D.1840 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 250 {*addsi_1}
     (nil))

(insn 43 42 63 5 (parallel [
            (set (reg:SI 0 ax [orig:78 D.1842 ] [78])
                (plus:SI (reg:SI 2 cx [orig:68 D.1832 ] [68])
                    (reg:SI 0 ax [orig:77 D.1841 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 250 {*addsi_1}
     (nil))

(insn 63 43 45 5 (parallel [
            (set (reg:DF 8 st [orig:79 D.1843 ] [79])
                (float:DF (reg:SI 0 ax [orig:78 D.1842 ] [78])))
            (clobber (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [0 S4 A32]))
        ]) speller.c:198 226 {*floatsidf2_i387_with_temp}
     (nil))

(insn 45 63 46 5 (set (reg:XF 9 st(1) [orig:80 D.1844 ] [80])
        (float_extend:XF (reg:DF 8 st [orig:79 D.1843 ] [79]))) speller.c:198 139 {*extenddfxf2_i387}
     (nil))

(insn 46 45 47 5 (set (reg:XF 8 st [91])
        (mem/u/c:XF (symbol_ref/u:SI ("*.LC18") [flags 0x2]) [0 S12 A128])) speller.c:198 107 {*movxf_internal}
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))

(insn 47 46 48 5 (set (reg:XF 8 st [orig:81 D.1845 ] [81])
        (div:XF (reg:XF 9 st(1) [orig:80 D.1844 ] [80])
            (reg:XF 8 st [91]))) speller.c:198 773 {*fop_xf_1_i387}
     (nil))

(insn 48 47 49 5 (parallel [
            (set (reg:DF 8 st [orig:59 D.1823 ] [59])
                (float_truncate:DF (reg:XF 8 st [orig:81 D.1845 ] [81])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 S8 A64]))
        ]) speller.c:198 147 {*truncxfdf2_mixed}
     (nil))

;; Successors:  6 (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59



;; Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  5 (fallthru) 4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 8 [st] 82

(code_label 49 48 50 6 29 "" [1 uses])

(note 50 49 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 50 64 6 (use (reg/i:DF 8 st)) speller.c:203 -1
     (nil))

;; Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 8 [st] 16 [argp] 20 [frame]


(note 64 58 0 NOTE_INSN_DELETED)

