
;; Function main (main, funcdef_no=0, decl_uid=1786, cgraph_uid=0)

main (int argc, char * * argv)
{
  _Bool misspelled;
  _Bool unloaded;
  unsigned int n;
  int c;
  char word[46];
  int words;
  int misspellings;
  int index;
  struct FILE * fp;
  char * text;
  _Bool loaded;
  char * dictionary;
  double ti_unload;
  double ti_size;
  double ti_check;
  double ti_load;
  struct rusage after;
  struct rusage before;
  double D.1936;
  long double D.1935;
  long double D.1934;
  long double D.1933;
  long double D.1932;
  long double D.1931;
  long double D.1930;
  long double D.1929;
  _Bool D.1926;
  int D.1923;
  long double D.1920;
  long double D.1919;
  double D.1918;
  long double D.1917;
  int D.1916;
  _Bool D.1915;
  _Bool D.1914;
  int D.1913;
  _Bool D.1912;
  int D.1908;
  int D.1907;
  short unsigned int D.1906;
  const short unsigned int * D.1905;
  unsigned int D.1904;
  unsigned int c.5;
  const short unsigned int * D.1902;
  const short unsigned int * * D.1901;
  int D.1897;
  int D.1896;
  short unsigned int D.1895;
  const short unsigned int * D.1894;
  unsigned int D.1893;
  unsigned int c.4;
  const short unsigned int * D.1891;
  const short unsigned int * * D.1890;
  int D.1889;
  int D.1888;
  short unsigned int D.1887;
  const short unsigned int * D.1886;
  unsigned int D.1885;
  unsigned int c.3;
  const short unsigned int * D.1883;
  const short unsigned int * * D.1882;
  char D.1878;
  int D.1875;
  int D.1874;
  short unsigned int D.1873;
  const short unsigned int * D.1872;
  unsigned int D.1871;
  unsigned int c.2;
  const short unsigned int * D.1869;
  const short unsigned int * * D.1868;
  char * iftmp.1;
  _Bool D.1856;
  char * iftmp.0;
  int D.1851;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (argc_15(D) != 2)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (argc_15(D) != 3)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  __builtin_puts (&"Usage: speller [dictionary] text"[0]);
  D.1851_16 = 1;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 5
  # PRED: 2 (false) 3 (false)
  ti_load_17 = 0.0;
  ti_check_18 = 0.0;
  ti_size_19 = 0.0;
  ti_unload_20 = 0.0;
  if (argc_15(D) == 3)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  iftmp.0_22 = MEM[(char * *)argv_21(D) + 4B];
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 5 (false)
  iftmp.0_23 = "./large";
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # iftmp.0_13 = PHI <iftmp.0_22(6), iftmp.0_23(7)>
  dictionary_24 = iftmp.0_13;
  getrusage (0, &before);
  loaded_25 = load (dictionary_24);
  getrusage (0, &after);
  D.1856_26 = ~loaded_25;
  if (D.1856_26 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  printf ("Could not load %s.\n", dictionary_24);
  D.1851_27 = 2;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  ti_load_28 = calculate (&before, &after);
  if (argc_15(D) == 3)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  iftmp.1_29 = MEM[(char * *)argv_21(D) + 8B];
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  iftmp.1_30 = MEM[(char * *)argv_21(D) + 4B];
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 11 (fallthru) 12 (fallthru)
  # iftmp.1_14 = PHI <iftmp.1_29(11), iftmp.1_30(12)>
  text_31 = iftmp.1_14;
  fp_32 = fopen (text_31, "r");
  if (fp_32 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 13 (true)
  printf ("Could not open %s.\n", text_31);
  unload ();
  D.1851_33 = 3;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 15
  # PRED: 13 (false)
  __builtin_puts (&"\nMISSPELLED WORDS\n"[0]);
  index_34 = 0;
  misspellings_35 = 0;
  words_36 = 0;
  c_37 = fgetc (fp_32);
  goto <bb 35>;
  # SUCC: 35 (fallthru)

  # BLOCK 16
  # PRED: 35 (true)
  D.1868_38 = __ctype_b_loc ();
  D.1869_39 = *D.1868_38;
  c.2_40 = (unsigned int) c_11;
  D.1871_41 = c.2_40 * 2;
  D.1872_42 = D.1869_39 + D.1871_41;
  D.1873_43 = *D.1872_42;
  D.1874_44 = (int) D.1873_43;
  D.1875_45 = D.1874_44 & 1024;
  if (D.1875_45 != 0)
    goto <bb 19>;
  else
    goto <bb 17>;
  # SUCC: 19 (true) 17 (false)

  # BLOCK 17
  # PRED: 16 (false)
  if (c_11 == 39)
    goto <bb 18>;
  else
    goto <bb 25>;
  # SUCC: 18 (true) 25 (false)

  # BLOCK 18
  # PRED: 17 (true)
  if (index_5 > 0)
    goto <bb 19>;
  else
    goto <bb 25>;
  # SUCC: 19 (true) 25 (false)

  # BLOCK 19
  # PRED: 16 (true) 18 (true)
  D.1878_78 = (char) c_11;
  word[index_5] = D.1878_78;
  index_79 = index_5 + 1;
  if (index_79 > 45)
    goto <bb 20>;
  else
    goto <bb 24>;
  # SUCC: 20 (true) 24 (false)

  # BLOCK 20
  # PRED: 19 (true)
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 20 (fallthru) 22 (dfs_back,true)
  c_80 = fgetc (fp_32);
  if (c_80 != -1)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 (true) 23 (false)

  # BLOCK 22
  # PRED: 21 (true)
  D.1882_81 = __ctype_b_loc ();
  D.1883_82 = *D.1882_81;
  c.3_83 = (unsigned int) c_80;
  D.1885_84 = c.3_83 * 2;
  D.1886_85 = D.1883_82 + D.1885_84;
  D.1887_86 = *D.1886_85;
  D.1888_87 = (int) D.1887_86;
  D.1889_88 = D.1888_87 & 1024;
  if (D.1889_88 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;
  # SUCC: 21 (dfs_back,true) 23 (false)

  # BLOCK 23
  # PRED: 21 (false) 22 (false)
  index_89 = 0;
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 19 (false) 23 (fallthru)
  # index_3 = PHI <index_79(19), index_89(23)>
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 25
  # PRED: 17 (false) 18 (false)
  D.1890_46 = __ctype_b_loc ();
  D.1891_47 = *D.1890_46;
  c.4_48 = (unsigned int) c_11;
  D.1893_49 = c.4_48 * 2;
  D.1894_50 = D.1891_47 + D.1893_49;
  D.1895_51 = *D.1894_50;
  D.1896_52 = (int) D.1895_51;
  D.1897_53 = D.1896_52 & 2048;
  if (D.1897_53 != 0)
    goto <bb 26>;
  else
    goto <bb 30>;
  # SUCC: 26 (true) 30 (false)

  # BLOCK 26
  # PRED: 25 (true)
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 26 (fallthru) 28 (dfs_back,true)
  c_54 = fgetc (fp_32);
  if (c_54 != -1)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 (true) 29 (false)

  # BLOCK 28
  # PRED: 27 (true)
  D.1901_55 = __ctype_b_loc ();
  D.1902_56 = *D.1901_55;
  c.5_57 = (unsigned int) c_54;
  D.1904_58 = c.5_57 * 2;
  D.1905_59 = D.1902_56 + D.1904_58;
  D.1906_60 = *D.1905_59;
  D.1907_61 = (int) D.1906_60;
  D.1908_62 = D.1907_61 & 8;
  if (D.1908_62 != 0)
    goto <bb 27>;
  else
    goto <bb 29>;
  # SUCC: 27 (dfs_back,true) 29 (false)

  # BLOCK 29
  # PRED: 27 (false) 28 (false)
  index_63 = 0;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 30
  # PRED: 25 (false)
  if (index_5 > 0)
    goto <bb 31>;
  else
    goto <bb 34>;
  # SUCC: 31 (true) 34 (false)

  # BLOCK 31
  # PRED: 30 (true)
  word[index_5] = 0;
  words_64 = words_10 + 1;
  getrusage (0, &before);
  D.1912_65 = check (&word);
  D.1913_66 = (int) D.1912_65;
  D.1914_67 = D.1913_66 != 0;
  D.1915_68 = ~D.1914_67;
  D.1916_69 = (int) D.1915_68;
  misspelled_70 = (_Bool) D.1916_69;
  getrusage (0, &after);
  D.1917_71 = (long double) ti_check_2;
  D.1918_72 = calculate (&before, &after);
  D.1919_73 = (long double) D.1918_72;
  D.1920_74 = D.1917_71 + D.1919_73;
  ti_check_75 = (double) D.1920_74;
  if (misspelled_70 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 (true) 33 (false)

  # BLOCK 32
  # PRED: 31 (true)
  __builtin_puts (&word);
  misspellings_76 = misspellings_8 + 1;
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 31 (false) 32 (fallthru)
  # misspellings_6 = PHI <misspellings_8(31), misspellings_76(32)>
  index_77 = 0;
  # SUCC: 34 (fallthru)

  # BLOCK 34
  # PRED: 24 (fallthru) 29 (fallthru) 30 (false) 33 (fallthru)
  # ti_check_1 = PHI <ti_check_2(24), ti_check_2(29), ti_check_2(30), ti_check_75(33)>
  # index_4 = PHI <index_3(24), index_63(29), index_5(30), index_77(33)>
  # misspellings_7 = PHI <misspellings_8(24), misspellings_8(29), misspellings_8(30), misspellings_6(33)>
  # words_9 = PHI <words_10(24), words_10(29), words_10(30), words_64(33)>
  c_90 = fgetc (fp_32);
  # SUCC: 35 (fallthru,dfs_back)

  # BLOCK 35
  # PRED: 15 (fallthru) 34 (fallthru,dfs_back)
  # ti_check_2 = PHI <ti_check_18(15), ti_check_1(34)>
  # index_5 = PHI <index_34(15), index_4(34)>
  # misspellings_8 = PHI <misspellings_35(15), misspellings_7(34)>
  # words_10 = PHI <words_36(15), words_9(34)>
  # c_11 = PHI <c_37(15), c_90(34)>
  if (c_11 != -1)
    goto <bb 16>;
  else
    goto <bb 36>;
  # SUCC: 16 (true) 36 (false)

  # BLOCK 36
  # PRED: 35 (false)
  D.1923_91 = ferror (fp_32);
  if (D.1923_91 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 (true) 38 (false)

  # BLOCK 37
  # PRED: 36 (true)
  fclose (fp_32);
  printf ("Error reading %s.\n", text_31);
  unload ();
  D.1851_92 = 4;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 38
  # PRED: 36 (false)
  fclose (fp_32);
  getrusage (0, &before);
  n_93 = size ();
  getrusage (0, &after);
  ti_size_94 = calculate (&before, &after);
  getrusage (0, &before);
  unloaded_95 = unload ();
  getrusage (0, &after);
  D.1926_96 = ~unloaded_95;
  if (D.1926_96 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  printf ("Could not unload %s.\n", dictionary_24);
  D.1851_97 = 5;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 40
  # PRED: 38 (false)
  ti_unload_98 = calculate (&before, &after);
  printf ("\nWORDS MISSPELLED:     %d\n", misspellings_8);
  printf ("WORDS IN DICTIONARY:  %d\n", n_93);
  printf ("WORDS IN TEXT:        %d\n", words_10);
  printf ("TIME IN load:         %.2f\n", ti_load_28);
  printf ("TIME IN check:        %.2f\n", ti_check_2);
  printf ("TIME IN size:         %.2f\n", ti_size_94);
  printf ("TIME IN unload:       %.2f\n", ti_unload_98);
  D.1929_99 = (long double) ti_load_28;
  D.1930_100 = (long double) ti_check_2;
  D.1931_101 = D.1929_99 + D.1930_100;
  D.1932_102 = (long double) ti_size_94;
  D.1933_103 = D.1931_101 + D.1932_102;
  D.1934_104 = (long double) ti_unload_98;
  D.1935_105 = D.1933_103 + D.1934_104;
  D.1936_106 = (double) D.1935_105;
  printf ("TIME IN TOTAL:        %.2f\n\n", D.1936_106);
  D.1851_107 = 0;
  # SUCC: 41 (fallthru)

  # BLOCK 41
  # PRED: 4 (fallthru) 9 (fallthru) 14 (fallthru) 37 (fallthru) 39 (fallthru) 40 (fallthru)
  # D.1851_12 = PHI <D.1851_16(4), D.1851_27(9), D.1851_33(14), D.1851_92(37), D.1851_97(39), D.1851_107(40)>
  before ={v} {CLOBBER};
  after ={v} {CLOBBER};
  word ={v} {CLOBBER};
  # SUCC: 42 (fallthru)

  # BLOCK 42
  # PRED: 41 (fallthru)
<L44>:
  return D.1851_12;
  # SUCC: EXIT

}



Partition map 

Partition 1 (ti_check_1 - 1 )
Partition 2 (ti_check_2 - 2 )
Partition 3 (index_3 - 3 )
Partition 4 (index_4 - 4 )
Partition 5 (index_5 - 5 )
Partition 6 (misspellings_6 - 6 )
Partition 7 (misspellings_7 - 7 )
Partition 8 (misspellings_8 - 8 )
Partition 9 (words_9 - 9 )
Partition 10 (words_10 - 10 )
Partition 11 (c_11 - 11 )
Partition 12 (D.1851_12 - 12 )
Partition 13 (iftmp.0_13 - 13 )
Partition 14 (iftmp.1_14 - 14 )
Partition 15 (argc_15(D) - 15 )
Partition 16 (D.1851_16 - 16 )
Partition 17 (ti_load_17 - 17 )
Partition 18 (ti_check_18 - 18 )
Partition 19 (ti_size_19 - 19 )
Partition 20 (ti_unload_20 - 20 )
Partition 21 (argv_21(D) - 21 )
Partition 22 (iftmp.0_22 - 22 )
Partition 23 (iftmp.0_23 - 23 )
Partition 24 (dictionary_24 - 24 )
Partition 25 (loaded_25 - 25 )
Partition 26 (D.1856_26 - 26 )
Partition 27 (D.1851_27 - 27 )
Partition 28 (ti_load_28 - 28 )
Partition 29 (iftmp.1_29 - 29 )
Partition 30 (iftmp.1_30 - 30 )
Partition 31 (text_31 - 31 )
Partition 32 (fp_32 - 32 )
Partition 33 (D.1851_33 - 33 )
Partition 34 (index_34 - 34 )
Partition 35 (misspellings_35 - 35 )
Partition 36 (words_36 - 36 )
Partition 37 (c_37 - 37 )
Partition 38 (D.1868_38 - 38 )
Partition 39 (D.1869_39 - 39 )
Partition 40 (c.2_40 - 40 )
Partition 41 (D.1871_41 - 41 )
Partition 42 (D.1872_42 - 42 )
Partition 43 (D.1873_43 - 43 )
Partition 44 (D.1874_44 - 44 )
Partition 45 (D.1875_45 - 45 )
Partition 46 (D.1890_46 - 46 )
Partition 47 (D.1891_47 - 47 )
Partition 48 (c.4_48 - 48 )
Partition 49 (D.1893_49 - 49 )
Partition 50 (D.1894_50 - 50 )
Partition 51 (D.1895_51 - 51 )
Partition 52 (D.1896_52 - 52 )
Partition 53 (D.1897_53 - 53 )
Partition 54 (c_54 - 54 )
Partition 55 (D.1901_55 - 55 )
Partition 56 (D.1902_56 - 56 )
Partition 57 (c.5_57 - 57 )
Partition 58 (D.1904_58 - 58 )
Partition 59 (D.1905_59 - 59 )
Partition 60 (D.1906_60 - 60 )
Partition 61 (D.1907_61 - 61 )
Partition 62 (D.1908_62 - 62 )
Partition 63 (index_63 - 63 )
Partition 64 (words_64 - 64 )
Partition 65 (D.1912_65 - 65 )
Partition 66 (D.1913_66 - 66 )
Partition 67 (D.1914_67 - 67 )
Partition 68 (D.1915_68 - 68 )
Partition 69 (D.1916_69 - 69 )
Partition 70 (misspelled_70 - 70 )
Partition 71 (D.1917_71 - 71 )
Partition 72 (D.1918_72 - 72 )
Partition 73 (D.1919_73 - 73 )
Partition 74 (D.1920_74 - 74 )
Partition 75 (ti_check_75 - 75 )
Partition 76 (misspellings_76 - 76 )
Partition 77 (index_77 - 77 )
Partition 78 (D.1878_78 - 78 )
Partition 79 (index_79 - 79 )
Partition 80 (c_80 - 80 )
Partition 81 (D.1882_81 - 81 )
Partition 82 (D.1883_82 - 82 )
Partition 83 (c.3_83 - 83 )
Partition 84 (D.1885_84 - 84 )
Partition 85 (D.1886_85 - 85 )
Partition 86 (D.1887_86 - 86 )
Partition 87 (D.1888_87 - 87 )
Partition 88 (D.1889_88 - 88 )
Partition 89 (index_89 - 89 )
Partition 90 (c_90 - 90 )
Partition 91 (D.1923_91 - 91 )
Partition 92 (D.1851_92 - 92 )
Partition 93 (n_93 - 93 )
Partition 94 (ti_size_94 - 94 )
Partition 95 (unloaded_95 - 95 )
Partition 96 (D.1926_96 - 96 )
Partition 97 (D.1851_97 - 97 )
Partition 98 (ti_unload_98 - 98 )
Partition 99 (D.1929_99 - 99 )
Partition 100 (D.1930_100 - 100 )
Partition 101 (D.1931_101 - 101 )
Partition 102 (D.1932_102 - 102 )
Partition 103 (D.1933_103 - 103 )
Partition 104 (D.1934_104 - 104 )
Partition 105 (D.1935_105 - 105 )
Partition 106 (D.1936_106 - 106 )
Partition 107 (D.1851_107 - 107 )


Partition map 

Partition 0 (ti_check_1 - 1 )
Partition 1 (ti_check_2 - 2 )
Partition 2 (index_3 - 3 )
Partition 3 (index_4 - 4 )
Partition 4 (index_5 - 5 )
Partition 5 (misspellings_6 - 6 )
Partition 6 (misspellings_7 - 7 )
Partition 7 (misspellings_8 - 8 )
Partition 8 (words_9 - 9 )
Partition 9 (words_10 - 10 )
Partition 10 (c_11 - 11 )
Partition 11 (D.1851_12 - 12 )
Partition 12 (iftmp.0_13 - 13 )
Partition 13 (iftmp.1_14 - 14 )
Partition 14 (argc_15(D) - 15 )
Partition 15 (D.1851_16 - 16 )
Partition 16 (ti_load_17 - 17 )
Partition 17 (ti_check_18 - 18 )
Partition 18 (ti_size_19 - 19 )
Partition 19 (ti_unload_20 - 20 )
Partition 20 (argv_21(D) - 21 )
Partition 21 (iftmp.0_22 - 22 )
Partition 22 (iftmp.0_23 - 23 )
Partition 23 (D.1851_27 - 27 )
Partition 24 (ti_load_28 - 28 )
Partition 25 (iftmp.1_29 - 29 )
Partition 26 (iftmp.1_30 - 30 )
Partition 27 (D.1851_33 - 33 )
Partition 28 (index_34 - 34 )
Partition 29 (misspellings_35 - 35 )
Partition 30 (words_36 - 36 )
Partition 31 (c_37 - 37 )
Partition 32 (c_54 - 54 )
Partition 33 (index_63 - 63 )
Partition 34 (words_64 - 64 )
Partition 35 (ti_check_75 - 75 )
Partition 36 (misspellings_76 - 76 )
Partition 37 (index_77 - 77 )
Partition 38 (index_79 - 79 )
Partition 39 (c_80 - 80 )
Partition 40 (index_89 - 89 )
Partition 41 (c_90 - 90 )
Partition 42 (D.1851_92 - 92 )
Partition 43 (ti_size_94 - 94 )
Partition 44 (D.1851_97 - 97 )
Partition 45 (ti_unload_98 - 98 )
Partition 46 (D.1851_107 - 107 )


Live on entry to BB2 : argc_15(D)  argv_21(D)  

Live on entry to BB3 : argc_15(D)  argv_21(D)  

Live on entry to BB4 : 

Live on entry to BB5 : argc_15(D)  argv_21(D)  

Live on entry to BB6 : argc_15(D)  ti_check_18  argv_21(D)  

Live on entry to BB7 : argc_15(D)  ti_check_18  argv_21(D)  

Live on entry to BB8 : argc_15(D)  ti_check_18  argv_21(D)  

Live on entry to BB9 : 

Live on entry to BB10 : argc_15(D)  ti_check_18  argv_21(D)  

Live on entry to BB11 : ti_check_18  argv_21(D)  ti_load_28  

Live on entry to BB12 : ti_check_18  argv_21(D)  ti_load_28  

Live on entry to BB13 : ti_check_18  ti_load_28  

Live on entry to BB14 : 

Live on entry to BB15 : ti_check_18  ti_load_28  

Live on entry to BB16 : ti_check_2  index_5  misspellings_8  words_10  c_11  ti_load_28  

Live on entry to BB17 : ti_check_2  index_5  misspellings_8  words_10  c_11  ti_load_28  

Live on entry to BB18 : ti_check_2  index_5  misspellings_8  words_10  c_11  ti_load_28  

Live on entry to BB19 : ti_check_2  index_5  misspellings_8  words_10  c_11  ti_load_28  

Live on entry to BB20 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB21 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB22 : ti_check_2  misspellings_8  words_10  ti_load_28  c_80  

Live on entry to BB23 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB24 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB25 : ti_check_2  index_5  misspellings_8  words_10  c_11  ti_load_28  

Live on entry to BB26 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB27 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB28 : ti_check_2  misspellings_8  words_10  ti_load_28  c_54  

Live on entry to BB29 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB30 : ti_check_2  index_5  misspellings_8  words_10  ti_load_28  

Live on entry to BB31 : ti_check_2  index_5  misspellings_8  words_10  ti_load_28  

Live on entry to BB32 : misspellings_8  ti_load_28  words_64  ti_check_75  

Live on entry to BB33 : ti_load_28  words_64  ti_check_75  

Live on entry to BB34 : ti_load_28  

Live on entry to BB35 : ti_load_28  

Live on entry to BB36 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB37 : 

Live on entry to BB38 : ti_check_2  misspellings_8  words_10  ti_load_28  

Live on entry to BB39 : 

Live on entry to BB40 : ti_check_2  misspellings_8  words_10  ti_load_28  ti_size_94  

Live on entry to BB41 : 

Live on entry to BB42 : D.1851_12  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) ti_check_1 <-> ti_check_2
(2147483646) ti_check_1 <-> ti_check_18
(2147483646) ti_check_1 <-> ti_check_75
(2147483646) index_3 <-> index_4
(2147483646) index_3 <-> index_5
(2147483646) index_3 <-> index_34
(2147483646) index_3 <-> index_63
(2147483646) index_3 <-> index_77
(2147483646) index_3 <-> index_79
(2147483646) index_3 <-> index_89
(2147483646) misspellings_6 <-> misspellings_7
(2147483646) misspellings_6 <-> misspellings_8
(2147483646) misspellings_6 <-> misspellings_35
(2147483646) misspellings_6 <-> misspellings_76
(2147483646) words_9 <-> words_10
(2147483646) words_9 <-> words_36
(2147483646) words_9 <-> words_64
(2147483646) c_11 <-> c_37
(2147483646) c_11 <-> c_54
(2147483646) c_11 <-> c_80
(2147483646) c_11 <-> c_90
(2147483646) ti_load_17 <-> ti_load_28
(2147483646) ti_size_19 <-> ti_size_94
(2147483646) ti_unload_20 <-> ti_unload_98
(4) misspellings_7 <-> misspellings_8
(2) index_4 <-> index_5

Partition map 

Partition 0 (ti_check_1 - 1 )
Partition 1 (ti_check_2 - 2 )
Partition 2 (index_3 - 3 )
Partition 3 (index_4 - 4 )
Partition 4 (index_5 - 5 )
Partition 5 (misspellings_6 - 6 )
Partition 6 (misspellings_7 - 7 )
Partition 7 (misspellings_8 - 8 )
Partition 8 (words_9 - 9 )
Partition 9 (words_10 - 10 )
Partition 10 (c_11 - 11 )
Partition 11 (D.1851_12 - 12 )
Partition 12 (iftmp.0_13 - 13 )
Partition 13 (iftmp.1_14 - 14 )
Partition 14 (argc_15(D) - 15 )
Partition 15 (D.1851_16 - 16 )
Partition 16 (ti_load_17 - 17 )
Partition 17 (ti_check_18 - 18 )
Partition 18 (ti_size_19 - 19 )
Partition 19 (ti_unload_20 - 20 )
Partition 20 (argv_21(D) - 21 )
Partition 21 (iftmp.0_22 - 22 )
Partition 22 (iftmp.0_23 - 23 )
Partition 23 (D.1851_27 - 27 )
Partition 24 (ti_load_28 - 28 )
Partition 25 (iftmp.1_29 - 29 )
Partition 26 (iftmp.1_30 - 30 )
Partition 27 (D.1851_33 - 33 )
Partition 28 (index_34 - 34 )
Partition 29 (misspellings_35 - 35 )
Partition 30 (words_36 - 36 )
Partition 31 (c_37 - 37 )
Partition 32 (c_54 - 54 )
Partition 33 (index_63 - 63 )
Partition 34 (words_64 - 64 )
Partition 35 (ti_check_75 - 75 )
Partition 36 (misspellings_76 - 76 )
Partition 37 (index_77 - 77 )
Partition 38 (index_79 - 79 )
Partition 39 (c_80 - 80 )
Partition 40 (index_89 - 89 )
Partition 41 (c_90 - 90 )
Partition 42 (D.1851_92 - 92 )
Partition 43 (ti_size_94 - 94 )
Partition 44 (D.1851_97 - 97 )
Partition 45 (ti_unload_98 - 98 )
Partition 46 (D.1851_107 - 107 )

Coalesce list: (1)ti_check_1 & (2)ti_check_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)ti_check_1 & (18)ti_check_18 [map: 0, 17] : Success -> 0
Coalesce list: (1)ti_check_1 & (75)ti_check_75 [map: 0, 35] : Success -> 0
Coalesce list: (3)index_3 & (4)index_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)index_3 & (5)index_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)index_3 & (34)index_34 [map: 2, 28] : Success -> 2
Coalesce list: (3)index_3 & (63)index_63 [map: 2, 33] : Success -> 2
Coalesce list: (3)index_3 & (77)index_77 [map: 2, 37] : Success -> 2
Coalesce list: (3)index_3 & (79)index_79 [map: 2, 38] : Success -> 2
Coalesce list: (3)index_3 & (89)index_89 [map: 2, 40] : Success -> 2
Coalesce list: (6)misspellings_6 & (7)misspellings_7 [map: 5, 6] : Success -> 5
Coalesce list: (6)misspellings_6 & (8)misspellings_8 [map: 5, 7] : Success -> 5
Coalesce list: (6)misspellings_6 & (35)misspellings_35 [map: 5, 29] : Success -> 5
Coalesce list: (6)misspellings_6 & (76)misspellings_76 [map: 5, 36] : Success -> 5
Coalesce list: (9)words_9 & (10)words_10 [map: 8, 9] : Success -> 8
Coalesce list: (9)words_9 & (36)words_36 [map: 8, 30] : Success -> 8
Coalesce list: (9)words_9 & (64)words_64 [map: 8, 34] : Success -> 8
Coalesce list: (11)c_11 & (37)c_37 [map: 10, 31] : Success -> 10
Coalesce list: (11)c_11 & (54)c_54 [map: 10, 32] : Success -> 10
Coalesce list: (11)c_11 & (80)c_80 [map: 10, 39] : Success -> 10
Coalesce list: (11)c_11 & (90)c_90 [map: 10, 41] : Success -> 10
Coalesce list: (17)ti_load_17 & (28)ti_load_28 [map: 16, 24] : Success -> 16
Coalesce list: (19)ti_size_19 & (94)ti_size_94 [map: 18, 43] : Success -> 18
Coalesce list: (20)ti_unload_20 & (98)ti_unload_98 [map: 19, 45] : Success -> 19
Coalesce list: (7)misspellings_6 & (8)misspellings_6: Already Coalesced.
Coalesce list: (4)index_3 & (5)index_3: Already Coalesced.
Coalesce list: (12)D.1851_12 & (107)D.1851_107 [map: 11, 46] : Success -> 11
Coalesce list: (12)D.1851_12 & (97)D.1851_97 [map: 11, 44] : Success -> 11
Coalesce list: (12)D.1851_12 & (92)D.1851_92 [map: 11, 42] : Success -> 11
Coalesce list: (12)D.1851_12 & (33)D.1851_33 [map: 11, 27] : Success -> 11
Coalesce list: (12)D.1851_12 & (27)D.1851_27 [map: 11, 23] : Success -> 11
Coalesce list: (12)D.1851_12 & (16)D.1851_16 [map: 11, 15] : Success -> 11
Coalesce list: (11)c_11 & (90)c_11: Already Coalesced.
Coalesce list: (11)c_11 & (37)c_11: Already Coalesced.
Coalesce list: (10)words_9 & (9)words_9: Already Coalesced.
Coalesce list: (10)words_9 & (36)words_9: Already Coalesced.
Coalesce list: (8)misspellings_6 & (7)misspellings_6: Already Coalesced.
Coalesce list: (8)misspellings_6 & (35)misspellings_6: Already Coalesced.
Coalesce list: (5)index_3 & (4)index_3: Already Coalesced.
Coalesce list: (5)index_3 & (34)index_3: Already Coalesced.
Coalesce list: (2)ti_check_1 & (1)ti_check_1: Already Coalesced.
Coalesce list: (2)ti_check_1 & (18)ti_check_1: Already Coalesced.
Coalesce list: (9)words_9 & (64)words_9: Already Coalesced.
Coalesce list: (7)misspellings_6 & (6)misspellings_6: Already Coalesced.
Coalesce list: (4)index_3 & (77)index_3: Already Coalesced.
Coalesce list: (4)index_3 & (63)index_3: Already Coalesced.
Coalesce list: (4)index_3 & (3)index_3: Already Coalesced.
Coalesce list: (1)ti_check_1 & (75)ti_check_1: Already Coalesced.
Coalesce list: (6)misspellings_6 & (76)misspellings_6: Already Coalesced.
Coalesce list: (3)index_3 & (89)index_3: Already Coalesced.
Coalesce list: (14)iftmp.1_14 & (30)iftmp.1_30 [map: 13, 26] : Success -> 13
Coalesce list: (14)iftmp.1_14 & (29)iftmp.1_29 [map: 13, 25] : Success -> 13
Coalesce list: (13)iftmp.0_13 & (23)iftmp.0_23 [map: 12, 22] : Success -> 12
Coalesce list: (13)iftmp.0_13 & (22)iftmp.0_22 [map: 12, 21] : Success -> 12
After Coalescing:

Partition map 

Partition 0 (ti_check_1 - 1 2 18 75 )
Partition 1 (index_3 - 3 4 5 34 63 77 79 89 )
Partition 2 (misspellings_6 - 6 7 8 35 76 )
Partition 3 (words_9 - 9 10 36 64 )
Partition 4 (c_11 - 11 37 54 80 90 )
Partition 5 (D.1851_12 - 12 16 27 33 92 97 107 )
Partition 6 (iftmp.0_13 - 13 22 23 )
Partition 7 (iftmp.1_14 - 14 29 30 )
Partition 8 (argc_15(D) - 15 )
Partition 9 (ti_load_17 - 17 28 )
Partition 10 (ti_size_19 - 19 94 )
Partition 11 (ti_unload_20 - 20 98 )
Partition 12 (argv_21(D) - 21 )
Partition 13 (dictionary_24 - 24 )
Partition 14 (loaded_25 - 25 )
Partition 15 (D.1856_26 - 26 )
Partition 16 (text_31 - 31 )
Partition 17 (fp_32 - 32 )
Partition 18 (D.1868_38 - 38 )
Partition 19 (D.1869_39 - 39 )
Partition 20 (c.2_40 - 40 )
Partition 21 (D.1871_41 - 41 )
Partition 22 (D.1872_42 - 42 )
Partition 23 (D.1873_43 - 43 )
Partition 24 (D.1874_44 - 44 )
Partition 25 (D.1875_45 - 45 )
Partition 26 (D.1890_46 - 46 )
Partition 27 (D.1891_47 - 47 )
Partition 28 (c.4_48 - 48 )
Partition 29 (D.1893_49 - 49 )
Partition 30 (D.1894_50 - 50 )
Partition 31 (D.1895_51 - 51 )
Partition 32 (D.1896_52 - 52 )
Partition 33 (D.1897_53 - 53 )
Partition 34 (D.1901_55 - 55 )
Partition 35 (D.1902_56 - 56 )
Partition 36 (c.5_57 - 57 )
Partition 37 (D.1904_58 - 58 )
Partition 38 (D.1905_59 - 59 )
Partition 39 (D.1906_60 - 60 )
Partition 40 (D.1907_61 - 61 )
Partition 41 (D.1908_62 - 62 )
Partition 42 (D.1912_65 - 65 )
Partition 43 (D.1913_66 - 66 )
Partition 44 (D.1914_67 - 67 )
Partition 45 (D.1915_68 - 68 )
Partition 46 (D.1916_69 - 69 )
Partition 47 (misspelled_70 - 70 )
Partition 48 (D.1917_71 - 71 )
Partition 49 (D.1918_72 - 72 )
Partition 50 (D.1919_73 - 73 )
Partition 51 (D.1920_74 - 74 )
Partition 52 (D.1878_78 - 78 )
Partition 53 (D.1882_81 - 81 )
Partition 54 (D.1883_82 - 82 )
Partition 55 (c.3_83 - 83 )
Partition 56 (D.1885_84 - 84 )
Partition 57 (D.1886_85 - 85 )
Partition 58 (D.1887_86 - 86 )
Partition 59 (D.1888_87 - 87 )
Partition 60 (D.1889_88 - 88 )
Partition 61 (D.1923_91 - 91 )
Partition 62 (n_93 - 93 )
Partition 63 (unloaded_95 - 95 )
Partition 64 (D.1926_96 - 96 )
Partition 65 (D.1929_99 - 99 )
Partition 66 (D.1930_100 - 100 )
Partition 67 (D.1931_101 - 101 )
Partition 68 (D.1932_102 - 102 )
Partition 69 (D.1933_103 - 103 )
Partition 70 (D.1934_104 - 104 )
Partition 71 (D.1935_105 - 105 )
Partition 72 (D.1936_106 - 106 )

main (int argc, char * * argv)
{
  _Bool misspelled;
  _Bool unloaded;
  unsigned int n;
  int c;
  char word[46];
  int words;
  int misspellings;
  int index;
  struct FILE * fp;
  char * text;
  _Bool loaded;
  char * dictionary;
  double ti_unload;
  double ti_size;
  double ti_check;
  double ti_load;
  struct rusage after;
  struct rusage before;
  double D.1936;
  long double D.1935;
  long double D.1934;
  long double D.1933;
  long double D.1932;
  long double D.1931;
  long double D.1930;
  long double D.1929;
  _Bool D.1926;
  int D.1923;
  long double D.1920;
  long double D.1919;
  double D.1918;
  long double D.1917;
  int D.1916;
  _Bool D.1915;
  _Bool D.1914;
  int D.1913;
  _Bool D.1912;
  int D.1908;
  int D.1907;
  short unsigned int D.1906;
  const short unsigned int * D.1905;
  unsigned int D.1904;
  unsigned int c.5;
  const short unsigned int * D.1902;
  const short unsigned int * * D.1901;
  int D.1897;
  int D.1896;
  short unsigned int D.1895;
  const short unsigned int * D.1894;
  unsigned int D.1893;
  unsigned int c.4;
  const short unsigned int * D.1891;
  const short unsigned int * * D.1890;
  int D.1889;
  int D.1888;
  short unsigned int D.1887;
  const short unsigned int * D.1886;
  unsigned int D.1885;
  unsigned int c.3;
  const short unsigned int * D.1883;
  const short unsigned int * * D.1882;
  char D.1878;
  int D.1875;
  int D.1874;
  short unsigned int D.1873;
  const short unsigned int * D.1872;
  unsigned int D.1871;
  unsigned int c.2;
  const short unsigned int * D.1869;
  const short unsigned int * * D.1868;
  char * iftmp.1;
  _Bool D.1856;
  char * iftmp.0;
  int D.1851;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (argc_15(D) != 2)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (argc_15(D) != 3)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  __builtin_puts (&"Usage: speller [dictionary] text"[0]);
  D.1851_16 = 1;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 5
  # PRED: 2 (false) 3 (false)
  ti_load_17 = 0.0;
  ti_check_18 = 0.0;
  ti_size_19 = 0.0;
  ti_unload_20 = 0.0;
  if (argc_15(D) == 3)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  iftmp.0_22 = MEM[(char * *)argv_21(D) + 4B];
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 5 (false)
  iftmp.0_23 = "./large";
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # iftmp.0_13 = PHI <iftmp.0_22(6), iftmp.0_23(7)>
  dictionary_24 = iftmp.0_13;
  getrusage (0, &before);
  loaded_25 = load (dictionary_24);
  getrusage (0, &after);
  D.1856_26 = ~loaded_25;
  if (D.1856_26 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  printf ("Could not load %s.\n", dictionary_24);
  D.1851_27 = 2;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  ti_load_28 = calculate (&before, &after);
  if (argc_15(D) == 3)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  iftmp.1_29 = MEM[(char * *)argv_21(D) + 8B];
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  iftmp.1_30 = MEM[(char * *)argv_21(D) + 4B];
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 11 (fallthru) 12 (fallthru)
  # iftmp.1_14 = PHI <iftmp.1_29(11), iftmp.1_30(12)>
  text_31 = iftmp.1_14;
  fp_32 = fopen (text_31, "r");
  if (fp_32 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 13 (true)
  printf ("Could not open %s.\n", text_31);
  unload ();
  D.1851_33 = 3;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 15
  # PRED: 13 (false)
  __builtin_puts (&"\nMISSPELLED WORDS\n"[0]);
  index_34 = 0;
  misspellings_35 = 0;
  words_36 = 0;
  c_37 = fgetc (fp_32);
  goto <bb 35>;
  # SUCC: 35 (fallthru)

  # BLOCK 16
  # PRED: 35 (true)
  D.1868_38 = __ctype_b_loc ();
  D.1869_39 = *D.1868_38;
  c.2_40 = (unsigned int) c_11;
  D.1871_41 = c.2_40 * 2;
  D.1872_42 = D.1869_39 + D.1871_41;
  D.1873_43 = *D.1872_42;
  D.1874_44 = (int) D.1873_43;
  D.1875_45 = D.1874_44 & 1024;
  if (D.1875_45 != 0)
    goto <bb 19>;
  else
    goto <bb 17>;
  # SUCC: 19 (true) 17 (false)

  # BLOCK 17
  # PRED: 16 (false)
  if (c_11 == 39)
    goto <bb 18>;
  else
    goto <bb 25>;
  # SUCC: 18 (true) 25 (false)

  # BLOCK 18
  # PRED: 17 (true)
  if (index_5 > 0)
    goto <bb 19>;
  else
    goto <bb 25>;
  # SUCC: 19 (true) 25 (false)

  # BLOCK 19
  # PRED: 16 (true) 18 (true)
  D.1878_78 = (char) c_11;
  word[index_5] = D.1878_78;
  index_79 = index_5 + 1;
  if (index_79 > 45)
    goto <bb 20>;
  else
    goto <bb 24>;
  # SUCC: 20 (true) 24 (false)

  # BLOCK 20
  # PRED: 19 (true)
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 20 (fallthru) 22 (dfs_back,true)
  c_80 = fgetc (fp_32);
  if (c_80 != -1)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 (true) 23 (false)

  # BLOCK 22
  # PRED: 21 (true)
  D.1882_81 = __ctype_b_loc ();
  D.1883_82 = *D.1882_81;
  c.3_83 = (unsigned int) c_80;
  D.1885_84 = c.3_83 * 2;
  D.1886_85 = D.1883_82 + D.1885_84;
  D.1887_86 = *D.1886_85;
  D.1888_87 = (int) D.1887_86;
  D.1889_88 = D.1888_87 & 1024;
  if (D.1889_88 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;
  # SUCC: 21 (dfs_back,true) 23 (false)

  # BLOCK 23
  # PRED: 21 (false) 22 (false)
  index_89 = 0;
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 19 (false) 23 (fallthru)
  # index_3 = PHI <index_79(19), index_89(23)>
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 25
  # PRED: 17 (false) 18 (false)
  D.1890_46 = __ctype_b_loc ();
  D.1891_47 = *D.1890_46;
  c.4_48 = (unsigned int) c_11;
  D.1893_49 = c.4_48 * 2;
  D.1894_50 = D.1891_47 + D.1893_49;
  D.1895_51 = *D.1894_50;
  D.1896_52 = (int) D.1895_51;
  D.1897_53 = D.1896_52 & 2048;
  if (D.1897_53 != 0)
    goto <bb 26>;
  else
    goto <bb 30>;
  # SUCC: 26 (true) 30 (false)

  # BLOCK 26
  # PRED: 25 (true)
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 26 (fallthru) 28 (dfs_back,true)
  c_54 = fgetc (fp_32);
  if (c_54 != -1)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 (true) 29 (false)

  # BLOCK 28
  # PRED: 27 (true)
  D.1901_55 = __ctype_b_loc ();
  D.1902_56 = *D.1901_55;
  c.5_57 = (unsigned int) c_54;
  D.1904_58 = c.5_57 * 2;
  D.1905_59 = D.1902_56 + D.1904_58;
  D.1906_60 = *D.1905_59;
  D.1907_61 = (int) D.1906_60;
  D.1908_62 = D.1907_61 & 8;
  if (D.1908_62 != 0)
    goto <bb 27>;
  else
    goto <bb 29>;
  # SUCC: 27 (dfs_back,true) 29 (false)

  # BLOCK 29
  # PRED: 27 (false) 28 (false)
  index_63 = 0;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 30
  # PRED: 25 (false)
  if (index_5 > 0)
    goto <bb 31>;
  else
    goto <bb 34>;
  # SUCC: 31 (true) 34 (false)

  # BLOCK 31
  # PRED: 30 (true)
  word[index_5] = 0;
  words_64 = words_10 + 1;
  getrusage (0, &before);
  D.1912_65 = check (&word);
  D.1913_66 = (int) D.1912_65;
  D.1914_67 = D.1913_66 != 0;
  D.1915_68 = ~D.1914_67;
  D.1916_69 = (int) D.1915_68;
  misspelled_70 = (_Bool) D.1916_69;
  getrusage (0, &after);
  D.1917_71 = (long double) ti_check_2;
  D.1918_72 = calculate (&before, &after);
  D.1919_73 = (long double) D.1918_72;
  D.1920_74 = D.1917_71 + D.1919_73;
  ti_check_75 = (double) D.1920_74;
  if (misspelled_70 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 (true) 33 (false)

  # BLOCK 32
  # PRED: 31 (true)
  __builtin_puts (&word);
  misspellings_76 = misspellings_8 + 1;
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 31 (false) 32 (fallthru)
  # misspellings_6 = PHI <misspellings_8(31), misspellings_76(32)>
  index_77 = 0;
  # SUCC: 34 (fallthru)

  # BLOCK 34
  # PRED: 24 (fallthru) 29 (fallthru) 30 (false) 33 (fallthru)
  # ti_check_1 = PHI <ti_check_2(24), ti_check_2(29), ti_check_2(30), ti_check_75(33)>
  # index_4 = PHI <index_3(24), index_63(29), index_5(30), index_77(33)>
  # misspellings_7 = PHI <misspellings_8(24), misspellings_8(29), misspellings_8(30), misspellings_6(33)>
  # words_9 = PHI <words_10(24), words_10(29), words_10(30), words_64(33)>
  c_90 = fgetc (fp_32);
  # SUCC: 35 (fallthru,dfs_back)

  # BLOCK 35
  # PRED: 15 (fallthru) 34 (fallthru,dfs_back)
  # ti_check_2 = PHI <ti_check_18(15), ti_check_1(34)>
  # index_5 = PHI <index_34(15), index_4(34)>
  # misspellings_8 = PHI <misspellings_35(15), misspellings_7(34)>
  # words_10 = PHI <words_36(15), words_9(34)>
  # c_11 = PHI <c_37(15), c_90(34)>
  if (c_11 != -1)
    goto <bb 16>;
  else
    goto <bb 36>;
  # SUCC: 16 (true) 36 (false)

  # BLOCK 36
  # PRED: 35 (false)
  D.1923_91 = ferror (fp_32);
  if (D.1923_91 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 (true) 38 (false)

  # BLOCK 37
  # PRED: 36 (true)
  fclose (fp_32);
  printf ("Error reading %s.\n", text_31);
  unload ();
  D.1851_92 = 4;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 38
  # PRED: 36 (false)
  fclose (fp_32);
  getrusage (0, &before);
  n_93 = size ();
  getrusage (0, &after);
  ti_size_94 = calculate (&before, &after);
  getrusage (0, &before);
  unloaded_95 = unload ();
  getrusage (0, &after);
  D.1926_96 = ~unloaded_95;
  if (D.1926_96 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  printf ("Could not unload %s.\n", dictionary_24);
  D.1851_97 = 5;
  goto <bb 41>;
  # SUCC: 41 (fallthru)

  # BLOCK 40
  # PRED: 38 (false)
  ti_unload_98 = calculate (&before, &after);
  printf ("\nWORDS MISSPELLED:     %d\n", misspellings_8);
  printf ("WORDS IN DICTIONARY:  %d\n", n_93);
  printf ("WORDS IN TEXT:        %d\n", words_10);
  printf ("TIME IN load:         %.2f\n", ti_load_28);
  printf ("TIME IN check:        %.2f\n", ti_check_2);
  printf ("TIME IN size:         %.2f\n", ti_size_94);
  printf ("TIME IN unload:       %.2f\n", ti_unload_98);
  D.1929_99 = (long double) ti_load_28;
  D.1930_100 = (long double) ti_check_2;
  D.1931_101 = D.1929_99 + D.1930_100;
  D.1932_102 = (long double) ti_size_94;
  D.1933_103 = D.1931_101 + D.1932_102;
  D.1934_104 = (long double) ti_unload_98;
  D.1935_105 = D.1933_103 + D.1934_104;
  D.1936_106 = (double) D.1935_105;
  printf ("TIME IN TOTAL:        %.2f\n\n", D.1936_106);
  D.1851_107 = 0;
  # SUCC: 41 (fallthru)

  # BLOCK 41
  # PRED: 4 (fallthru) 9 (fallthru) 14 (fallthru) 37 (fallthru) 39 (fallthru) 40 (fallthru)
  # D.1851_12 = PHI <D.1851_16(4), D.1851_27(9), D.1851_33(14), D.1851_92(37), D.1851_97(39), D.1851_107(40)>
  before ={v} {CLOBBER};
  after ={v} {CLOBBER};
  word ={v} {CLOBBER};
  # SUCC: 42 (fallthru)

  # BLOCK 42
  # PRED: 41 (fallthru)
<L44>:
  return D.1851_12;
  # SUCC: EXIT

}


Partition 16: size 72 align 4
	after
Partition 15: size 72 align 4
	before
Partition 17: size 46 align 1
	word
Partition 7: size 8 align 8
	ti_unload_20
Partition 6: size 8 align 8
	ti_size_19
Partition 5: size 8 align 8
	ti_load_17
Partition 0: size 8 align 8
	ti_check_1
Partition 13: size 4 align 4
	n_93
Partition 11: size 4 align 4
	fp_32
Partition 10: size 4 align 4
	text_31
Partition 8: size 4 align 4
	dictionary_24
Partition 4: size 4 align 4
	c_11
Partition 3: size 4 align 4
	words_9
Partition 2: size 4 align 4
	misspellings_6
Partition 1: size 4 align 4
	index_3
Partition 14: size 1 align 1
	unloaded_95
Partition 12: size 1 align 1
	misspelled_70
Partition 9: size 1 align 1
	loaded_25

;; Generating RTL for gimple basic block 2

;; if (argc_15(D) != 2)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) speller.c:29 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:29 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (argc_15(D) != 3)

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:29 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:29 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; __builtin_puts (&"Usage: speller [dictionary] text"[0]);

(insn 14 13 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0xb6a30180 *.LC0>)) speller.c:31 -1
     (nil))

(call_insn 15 14 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:31 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

;; D.1851_16 = 1;

(insn 16 15 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 1 [0x1])) speller.c:32 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 2 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; ti_load_17 = 0.0;

(insn 21 20 22 (set (reg:DF 117)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 22 21 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])
        (reg:DF 117)) speller.c:39 -1
     (nil))

;; ti_check_18 = 0.0;

(insn 23 22 24 (set (reg:DF 118)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 24 23 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])
        (reg:DF 118)) speller.c:39 -1
     (nil))

;; ti_size_19 = 0.0;

(insn 25 24 26 (set (reg:DF 119)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 26 25 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])
        (reg:DF 119)) speller.c:39 -1
     (nil))

;; ti_unload_20 = 0.0;

(insn 27 26 28 (set (reg:DF 120)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 28 27 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])
        (reg:DF 120)) speller.c:39 -1
     (nil))

;; if (argc_15(D) == 3)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:42 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:42 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; iftmp.0_22 = MEM[(char * *)argv_21(D) + 4B];

(insn 32 31 33 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:42 -1
     (nil))

(insn 33 32 0 (set (reg/f:SI 60 [ iftmp.0 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:42 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 36 35 37 4 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.0_23 = "./large";

(insn 38 37 0 (set (reg/f:SI 60 [ iftmp.0 ])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0xb6a301e0 *.LC2>)) speller.c:42 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 39 38 40 5 "" [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; dictionary_24 = iftmp.0_13;

(insn 41 40 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])
        (reg/f:SI 60 [ iftmp.0 ])) speller.c:42 -1
     (nil))

;; getrusage (0, &before);

(insn 42 41 43 (parallel [
            (set (reg:SI 122)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:45 -1
     (nil))

(insn 43 42 44 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 122)) speller.c:45 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 44 43 45 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:45 -1
     (nil))

(call_insn 45 44 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:45 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; loaded_25 = load (dictionary_24);

(insn 46 45 47 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:46 -1
     (nil))

(insn 47 46 48 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 123)) speller.c:46 -1
     (nil))

(call_insn 48 47 49 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("load") [flags 0x41]  <function_decl 0xb6a0e680 load>) [0 load S1 A8])
            (const_int 4 [0x4]))) speller.c:46 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 49 48 50 (set (reg:QI 124)
        (reg:QI 0 ax)) speller.c:46 -1
     (nil))

(insn 50 49 0 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])
        (reg:QI 124)) speller.c:46 -1
     (nil))

;; getrusage (0, &after);

(insn 51 50 52 (parallel [
            (set (reg:SI 125)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:47 -1
     (nil))

(insn 52 51 53 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 125)) speller.c:47 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 53 52 54 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:47 -1
     (nil))

(call_insn 54 53 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1856_26 = ~loaded_25;

(insn 55 54 56 (set (reg:QI 126)
        (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])) speller.c:50 -1
     (nil))

(insn 56 55 0 (parallel [
            (set (reg:QI 62 [ D.1856 ])
                (xor:QI (reg:QI 126)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:50 -1
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

;; if (D.1856_26 != 0)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.1856 ])
            (const_int 0 [0]))) speller.c:50 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:50 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; printf ("Could not load %s.\n", dictionary_24);

(insn 60 59 61 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:52 -1
     (nil))

(insn 61 60 62 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 127)) speller.c:52 -1
     (nil))

(insn 62 61 63 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0xb6a30240 *.LC3>)) speller.c:52 -1
     (nil))

(call_insn 63 62 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:52 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1851_27 = 2;

(insn 64 63 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 2 [0x2])) speller.c:53 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 67 66 68 6 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; ti_load_28 = calculate (&before, &after);

(insn 69 68 70 (parallel [
            (set (reg:SI 128)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 -1
     (nil))

(insn 70 69 71 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 128)) speller.c:57 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 71 70 72 (parallel [
            (set (reg:SI 129)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 -1
     (nil))

(insn 72 71 73 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 129)) speller.c:57 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 73 72 74 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:57 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 74 73 75 (set (reg:DF 130)
        (reg:DF 8 st)) speller.c:57 -1
     (nil))

(insn 75 74 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])
        (reg:DF 130)) speller.c:57 -1
     (nil))

;; if (argc_15(D) == 3)

(insn 76 75 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:60 -1
     (nil))

(jump_insn 77 76 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:60 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; iftmp.1_29 = MEM[(char * *)argv_21(D) + 8B];

(insn 79 78 80 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:60 -1
     (nil))

(insn 80 79 0 (set (reg/f:SI 61 [ iftmp.1 ])
        (mem/f:SI (plus:SI (reg/f:SI 131)
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_21(D) + 8B]+0 S4 A32])) speller.c:60 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 83 82 84 7 "" [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.1_30 = MEM[(char * *)argv_21(D) + 4B];

(insn 85 84 86 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:60 -1
     (nil))

(insn 86 85 0 (set (reg/f:SI 61 [ iftmp.1 ])
        (mem/f:SI (plus:SI (reg/f:SI 132)
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:60 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 87 86 88 8 "" [0 uses])

(note 88 87 0 NOTE_INSN_BASIC_BLOCK)

;; text_31 = iftmp.1_14;

(insn 89 88 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])
        (reg/f:SI 61 [ iftmp.1 ])) speller.c:60 -1
     (nil))

;; fp_32 = fopen (text_31, "r");

(insn 90 89 91 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0xb6a302a0 *.LC4>)) speller.c:61 -1
     (nil))

(insn 91 90 92 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:61 -1
     (nil))

(insn 92 91 93 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 133)) speller.c:61 -1
     (nil))

(call_insn 93 92 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fopen") [flags 0x41]  <function_decl 0xb69f3880 fopen>) [0 fopen S1 A8])
            (const_int 8 [0x8]))) speller.c:61 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 94 93 95 (set (reg:SI 134)
        (reg:SI 0 ax)) speller.c:61 -1
     (nil))

(insn 95 94 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])
        (reg:SI 134)) speller.c:61 -1
     (nil))

;; if (fp_32 == 0B)

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])
            (const_int 0 [0]))) speller.c:62 -1
     (nil))

(jump_insn 97 96 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:62 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; printf ("Could not open %s.\n", text_31);

(insn 99 98 100 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:64 -1
     (nil))

(insn 100 99 101 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 135)) speller.c:64 -1
     (nil))

(insn 101 100 102 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0xb6a30300 *.LC5>)) speller.c:64 -1
     (nil))

(call_insn 102 101 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:64 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; unload ();

(call_insn 103 102 0 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:65 -1
     (nil)
    (nil))

;; D.1851_33 = 3;

(insn 104 103 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 3 [0x3])) speller.c:66 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 107 106 108 9 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"\nMISSPELLED WORDS\n"[0]);

(insn 109 108 110 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0xb6a30360 *.LC6>)) speller.c:70 -1
     (nil))

(call_insn 110 109 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:70 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

;; index_34 = 0;

(insn 111 110 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

;; misspellings_35 = 0;

(insn 112 111 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

;; words_36 = 0;

(insn 113 112 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

;; c_37 = fgetc (fp_32);

(insn 114 113 115 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:78 -1
     (nil))

(insn 115 114 116 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 136)) speller.c:78 -1
     (nil))

(call_insn 116 115 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 117 116 118 (set (reg:SI 137)
        (reg:SI 0 ax)) speller.c:78 -1
     (nil))

(insn 118 117 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 137)) speller.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; D.1868_38 = __ctype_b_loc ();

(call_insn/u 122 121 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 123 122 0 (set (reg/f:SI 63 [ D.1868 ])
        (reg:SI 0 ax)) speller.c:81 -1
     (nil))

;; D.1869_39 = *D.1868_38;

(insn 124 123 0 (set (reg/f:SI 64 [ D.1869 ])
        (mem/f:SI (reg/f:SI 63 [ D.1868 ]) [0 *D.1868_38+0 S4 A32])) speller.c:81 -1
     (nil))

;; c.2_40 = (unsigned int) c_11;

(insn 125 124 0 (set (reg:SI 65 [ c.2 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:81 -1
     (nil))

;; D.1871_41 = c.2_40 * 2;

(insn 126 125 0 (parallel [
            (set (reg:SI 66 [ D.1871 ])
                (ashift:SI (reg:SI 65 [ c.2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

;; D.1872_42 = D.1869_39 + D.1871_41;

(insn 127 126 0 (parallel [
            (set (reg/f:SI 67 [ D.1872 ])
                (plus:SI (reg/f:SI 64 [ D.1869 ])
                    (reg:SI 66 [ D.1871 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

;; D.1873_43 = *D.1872_42;

(insn 128 127 0 (set (reg:HI 68 [ D.1873 ])
        (mem:HI (reg/f:SI 67 [ D.1872 ]) [0 *D.1872_42+0 S2 A16])) speller.c:81 -1
     (nil))

;; D.1874_44 = (int) D.1873_43;

(insn 129 128 0 (set (reg:SI 69 [ D.1874 ])
        (zero_extend:SI (reg:HI 68 [ D.1873 ]))) speller.c:81 -1
     (nil))

;; D.1875_45 = D.1874_44 & 1024;

(insn 130 129 0 (parallel [
            (set (reg:SI 70 [ D.1875 ])
                (and:SI (reg:SI 69 [ D.1874 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

;; if (D.1875_45 != 0)

(insn 131 130 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.1875 ])
            (const_int 0 [0]))) speller.c:81 -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; if (c_11 == 39)

(insn 134 133 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int 39 [0x27]))) speller.c:81 -1
     (nil))

(jump_insn 135 134 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; if (index_5 > 0)

(insn 137 136 138 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:81 -1
     (nil))

(jump_insn 138 137 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 139 138 140 11 "" [0 uses])

(note 140 139 0 NOTE_INSN_BASIC_BLOCK)

;; D.1878_78 = (char) c_11;

(insn 141 140 142 (set (reg:SI 138)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:84 -1
     (nil))

(insn 142 141 0 (set (reg:QI 96 [ D.1878 ])
        (subreg:QI (reg:SI 138) 0)) speller.c:84 -1
     (nil))

;; word[index_5] = D.1878_78;

(insn 143 142 144 (parallel [
            (set (reg:SI 139)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 -1
     (nil))

(insn 144 143 145 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])) speller.c:84 -1
     (nil))

(insn 145 144 146 (parallel [
            (set (reg/f:SI 140)
                (plus:SI (reg:SI 139)
                    (reg:SI 141)))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 139)
            (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32]))
        (nil)))

(insn 146 145 0 (set (mem/j:QI (reg/f:SI 140) [0 word S1 A8])
        (reg:QI 96 [ D.1878 ])) speller.c:84 -1
     (nil))

;; index_79 = index_5 + 1;

(insn 147 146 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:85 -1
     (nil))

;; if (index_79 > 45)

(insn 148 147 149 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 45 [0x2d]))) speller.c:88 -1
     (nil))

(jump_insn 149 148 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:88 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; c_80 = fgetc (fp_32);

(insn 152 151 153 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:91 -1
     (nil))

(insn 153 152 154 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 142)) speller.c:91 -1
     (nil))

(call_insn 154 153 155 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:91 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 155 154 156 (set (reg:SI 143)
        (reg:SI 0 ax)) speller.c:91 -1
     (nil))

(insn 156 155 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 143)) speller.c:91 -1
     (nil))

;; if (c_80 != -1)

(insn 157 156 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:91 -1
     (nil))

(jump_insn 158 157 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:91 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; D.1882_81 = __ctype_b_loc ();

(call_insn/u 160 159 161 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 161 160 0 (set (reg/f:SI 97 [ D.1882 ])
        (reg:SI 0 ax)) speller.c:91 -1
     (nil))

;; D.1883_82 = *D.1882_81;

(insn 162 161 0 (set (reg/f:SI 98 [ D.1883 ])
        (mem/f:SI (reg/f:SI 97 [ D.1882 ]) [0 *D.1882_81+0 S4 A32])) speller.c:91 -1
     (nil))

;; c.3_83 = (unsigned int) c_80;

(insn 163 162 0 (set (reg:SI 99 [ c.3 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:91 -1
     (nil))

;; D.1885_84 = c.3_83 * 2;

(insn 164 163 0 (parallel [
            (set (reg:SI 100 [ D.1885 ])
                (ashift:SI (reg:SI 99 [ c.3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

;; D.1886_85 = D.1883_82 + D.1885_84;

(insn 165 164 0 (parallel [
            (set (reg/f:SI 101 [ D.1886 ])
                (plus:SI (reg/f:SI 98 [ D.1883 ])
                    (reg:SI 100 [ D.1885 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

;; D.1887_86 = *D.1886_85;

(insn 166 165 0 (set (reg:HI 102 [ D.1887 ])
        (mem:HI (reg/f:SI 101 [ D.1886 ]) [0 *D.1886_85+0 S2 A16])) speller.c:91 -1
     (nil))

;; D.1888_87 = (int) D.1887_86;

(insn 167 166 0 (set (reg:SI 103 [ D.1888 ])
        (zero_extend:SI (reg:HI 102 [ D.1887 ]))) speller.c:91 -1
     (nil))

;; D.1889_88 = D.1888_87 & 1024;

(insn 168 167 0 (parallel [
            (set (reg:SI 104 [ D.1889 ])
                (and:SI (reg:SI 103 [ D.1888 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

;; if (D.1889_88 != 0)

(insn 170 168 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.1889 ])
            (const_int 0 [0]))) speller.c:91 -1
     (nil))

(jump_insn 171 170 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) speller.c:91 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 172 171 173 14 "" [0 uses])

(note 173 172 0 NOTE_INSN_BASIC_BLOCK)

;; index_89 = 0;

(insn 174 173 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:94 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 175 174 176 13 "" [0 uses])

(note 176 175 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 25

;; 

(code_label 179 178 180 12 "" [0 uses])

(note 180 179 0 NOTE_INSN_BASIC_BLOCK)

;; D.1890_46 = __ctype_b_loc ();

(call_insn/u 181 180 182 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:99 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 182 181 0 (set (reg/f:SI 71 [ D.1890 ])
        (reg:SI 0 ax)) speller.c:99 -1
     (nil))

;; D.1891_47 = *D.1890_46;

(insn 183 182 0 (set (reg/f:SI 72 [ D.1891 ])
        (mem/f:SI (reg/f:SI 71 [ D.1890 ]) [0 *D.1890_46+0 S4 A32])) speller.c:99 -1
     (nil))

;; c.4_48 = (unsigned int) c_11;

(insn 184 183 0 (set (reg:SI 73 [ c.4 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:99 -1
     (nil))

;; D.1893_49 = c.4_48 * 2;

(insn 185 184 0 (parallel [
            (set (reg:SI 74 [ D.1893 ])
                (ashift:SI (reg:SI 73 [ c.4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

;; D.1894_50 = D.1891_47 + D.1893_49;

(insn 186 185 0 (parallel [
            (set (reg/f:SI 75 [ D.1894 ])
                (plus:SI (reg/f:SI 72 [ D.1891 ])
                    (reg:SI 74 [ D.1893 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

;; D.1895_51 = *D.1894_50;

(insn 187 186 0 (set (reg:HI 76 [ D.1895 ])
        (mem:HI (reg/f:SI 75 [ D.1894 ]) [0 *D.1894_50+0 S2 A16])) speller.c:99 -1
     (nil))

;; D.1896_52 = (int) D.1895_51;

(insn 188 187 0 (set (reg:SI 77 [ D.1896 ])
        (zero_extend:SI (reg:HI 76 [ D.1895 ]))) speller.c:99 -1
     (nil))

;; D.1897_53 = D.1896_52 & 2048;

(insn 189 188 0 (parallel [
            (set (reg:SI 78 [ D.1897 ])
                (and:SI (reg:SI 77 [ D.1896 ])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

;; if (D.1897_53 != 0)

(insn 190 189 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.1897 ])
            (const_int 0 [0]))) speller.c:99 -1
     (nil))

(jump_insn 191 190 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; c_54 = fgetc (fp_32);

(insn 194 193 195 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:102 -1
     (nil))

(insn 195 194 196 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 144)) speller.c:102 -1
     (nil))

(call_insn 196 195 197 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:102 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 197 196 198 (set (reg:SI 145)
        (reg:SI 0 ax)) speller.c:102 -1
     (nil))

(insn 198 197 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 145)) speller.c:102 -1
     (nil))

;; if (c_54 != -1)

(insn 199 198 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:102 -1
     (nil))

(jump_insn 200 199 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:102 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; D.1901_55 = __ctype_b_loc ();

(call_insn/u 202 201 203 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:102 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 203 202 0 (set (reg/f:SI 79 [ D.1901 ])
        (reg:SI 0 ax)) speller.c:102 -1
     (nil))

;; D.1902_56 = *D.1901_55;

(insn 204 203 0 (set (reg/f:SI 80 [ D.1902 ])
        (mem/f:SI (reg/f:SI 79 [ D.1901 ]) [0 *D.1901_55+0 S4 A32])) speller.c:102 -1
     (nil))

;; c.5_57 = (unsigned int) c_54;

(insn 205 204 0 (set (reg:SI 81 [ c.5 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:102 -1
     (nil))

;; D.1904_58 = c.5_57 * 2;

(insn 206 205 0 (parallel [
            (set (reg:SI 82 [ D.1904 ])
                (ashift:SI (reg:SI 81 [ c.5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

;; D.1905_59 = D.1902_56 + D.1904_58;

(insn 207 206 0 (parallel [
            (set (reg/f:SI 83 [ D.1905 ])
                (plus:SI (reg/f:SI 80 [ D.1902 ])
                    (reg:SI 82 [ D.1904 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

;; D.1906_60 = *D.1905_59;

(insn 208 207 0 (set (reg:HI 84 [ D.1906 ])
        (mem:HI (reg/f:SI 83 [ D.1905 ]) [0 *D.1905_59+0 S2 A16])) speller.c:102 -1
     (nil))

;; D.1907_61 = (int) D.1906_60;

(insn 209 208 0 (set (reg:SI 85 [ D.1907 ])
        (zero_extend:SI (reg:HI 84 [ D.1906 ]))) speller.c:102 -1
     (nil))

;; D.1908_62 = D.1907_61 & 8;

(insn 210 209 0 (parallel [
            (set (reg:SI 86 [ D.1908 ])
                (and:SI (reg:SI 85 [ D.1907 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

;; if (D.1908_62 != 0)

(insn 212 210 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ D.1908 ])
            (const_int 0 [0]))) speller.c:102 -1
     (nil))

(jump_insn 213 212 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) speller.c:102 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; 

(code_label 214 213 215 18 "" [0 uses])

(note 215 214 0 NOTE_INSN_BASIC_BLOCK)

;; index_63 = 0;

(insn 216 215 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:105 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 219 218 220 17 "" [0 uses])

(note 220 219 0 NOTE_INSN_BASIC_BLOCK)

;; if (index_5 > 0)

(insn 221 220 222 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:109 -1
     (nil))

(jump_insn 222 221 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:109 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; word[index_5] = 0;

(insn 224 223 225 (parallel [
            (set (reg:SI 146)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 -1
     (nil))

(insn 225 224 226 (set (reg:SI 148)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])) speller.c:112 -1
     (nil))

(insn 226 225 227 (parallel [
            (set (reg/f:SI 147)
                (plus:SI (reg:SI 146)
                    (reg:SI 148)))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 146)
            (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32]))
        (nil)))

(insn 227 226 0 (set (mem/j:QI (reg/f:SI 147) [0 word S1 A8])
        (const_int 0 [0])) speller.c:112 -1
     (nil))

;; words_64 = words_10 + 1;

(insn 228 227 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:115 -1
     (nil))

;; getrusage (0, &before);

(insn 229 228 230 (parallel [
            (set (reg:SI 149)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:118 -1
     (nil))

(insn 230 229 231 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 149)) speller.c:118 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 231 230 232 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:118 -1
     (nil))

(call_insn 232 231 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:118 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1912_65 = check (&word);

(insn 233 232 234 (parallel [
            (set (reg:SI 150)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 234 233 235 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 150)) speller.c:119 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 235 234 236 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("check") [flags 0x41]  <function_decl 0xb6a0e600 check>) [0 check S1 A8])
            (const_int 4 [0x4]))) speller.c:119 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 236 235 0 (set (reg:QI 87 [ D.1912 ])
        (reg:QI 0 ax)) speller.c:119 -1
     (nil))

;; D.1913_66 = (int) D.1912_65;

(insn 237 236 0 (parallel [
            (set (reg:SI 88 [ D.1913 ])
                (zero_extend:SI (reg:QI 87 [ D.1912 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

;; D.1914_67 = D.1913_66 != 0;

(insn 238 237 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.1913 ])
            (const_int 0 [0]))) speller.c:119 -1
     (nil))

(insn 239 238 0 (set (reg:QI 89 [ D.1914 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) speller.c:119 -1
     (nil))

;; D.1915_68 = ~D.1914_67;

(insn 240 239 0 (parallel [
            (set (reg:QI 90 [ D.1915 ])
                (xor:QI (reg:QI 89 [ D.1914 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

;; D.1916_69 = (int) D.1915_68;

(insn 241 240 0 (parallel [
            (set (reg:SI 91 [ D.1916 ])
                (zero_extend:SI (reg:QI 90 [ D.1915 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

;; misspelled_70 = (_Bool) D.1916_69;

(insn 242 241 243 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
        (subreg:QI (reg:SI 91 [ D.1916 ]) 0)) speller.c:119 -1
     (nil))

(insn 243 242 0 (parallel [
            (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
                (and:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

;; getrusage (0, &after);

(insn 244 243 245 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:120 -1
     (nil))

(insn 245 244 246 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 151)) speller.c:120 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 246 245 247 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:120 -1
     (nil))

(call_insn 247 246 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:120 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1917_71 = (long double) ti_check_2;

(insn 248 247 0 (set (reg:XF 92 [ D.1917 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64]))) speller.c:123 -1
     (nil))

;; D.1918_72 = calculate (&before, &after);

(insn 249 248 250 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 -1
     (nil))

(insn 250 249 251 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 152)) speller.c:123 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 251 250 252 (parallel [
            (set (reg:SI 153)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 -1
     (nil))

(insn 252 251 253 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 153)) speller.c:123 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 253 252 254 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:123 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 254 253 0 (set (reg:DF 93 [ D.1918 ])
        (reg:DF 8 st)) speller.c:123 -1
     (nil))

;; D.1919_73 = (long double) D.1918_72;

(insn 255 254 0 (set (reg:XF 94 [ D.1919 ])
        (float_extend:XF (reg:DF 93 [ D.1918 ]))) speller.c:123 -1
     (nil))

;; D.1920_74 = D.1917_71 + D.1919_73;

(insn 256 255 0 (set (reg:XF 95 [ D.1920 ])
        (plus:XF (reg:XF 92 [ D.1917 ])
            (reg:XF 94 [ D.1919 ]))) speller.c:123 -1
     (nil))

;; ti_check_75 = (double) D.1920_74;

(insn 257 256 0 (parallel [
            (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])
                (float_truncate:DF (reg:XF 95 [ D.1920 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -288 [0xfffffffffffffee0])) [0 S8 A64]))
        ]) speller.c:123 -1
     (nil))

;; if (misspelled_70 != 0)

(insn 258 257 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
            (const_int 0 [0]))) speller.c:126 -1
     (nil))

(jump_insn 259 258 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; __builtin_puts (&word);

(insn 261 260 262 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:128 -1
     (nil))

(insn 262 261 263 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 154)) speller.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 263 262 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:128 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

;; misspellings_76 = misspellings_8 + 1;

(insn 264 263 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; 

(code_label 265 264 266 20 "" [0 uses])

(note 266 265 0 NOTE_INSN_BASIC_BLOCK)

;; index_77 = 0;

(insn 267 266 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:133 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 268 267 269 16 "" [0 uses])

(note 269 268 0 NOTE_INSN_BASIC_BLOCK)

;; c_90 = fgetc (fp_32);

(insn 270 269 271 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:78 -1
     (nil))

(insn 271 270 272 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 155)) speller.c:78 -1
     (nil))

(call_insn 272 271 273 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 273 272 274 (set (reg:SI 156)
        (reg:SI 0 ax)) speller.c:78 -1
     (nil))

(insn 274 273 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 156)) speller.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 275 274 276 10 "" [0 uses])

(note 276 275 0 NOTE_INSN_BASIC_BLOCK)

;; if (c_11 != -1)

(insn 278 276 279 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:78 -1
     (nil))

(jump_insn 279 278 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) speller.c:78 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; D.1923_91 = ferror (fp_32);

(insn 281 280 282 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:138 -1
     (nil))

(insn 282 281 283 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 157)) speller.c:138 -1
     (nil))

(call_insn 283 282 284 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("ferror") [flags 0x41]  <function_decl 0xb69f9e80 ferror>) [0 ferror S1 A8])
            (const_int 4 [0x4]))) speller.c:138 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 284 283 0 (set (reg:SI 105 [ D.1923 ])
        (reg:SI 0 ax)) speller.c:138 -1
     (nil))

;; if (D.1923_91 != 0)

(insn 285 284 286 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.1923 ])
            (const_int 0 [0]))) speller.c:138 -1
     (nil))

(jump_insn 286 285 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:138 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; fclose (fp_32);

(insn 288 287 289 (set (reg/f:SI 158)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:140 -1
     (nil))

(insn 289 288 290 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 158)) speller.c:140 -1
     (nil))

(call_insn 290 289 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:140 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

;; printf ("Error reading %s.\n", text_31);

(insn 291 290 292 (set (reg/f:SI 159)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:141 -1
     (nil))

(insn 292 291 293 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 159)) speller.c:141 -1
     (nil))

(insn 293 292 294 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0xb6a303c0 *.LC7>)) speller.c:141 -1
     (nil))

(call_insn 294 293 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:141 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; unload ();

(call_insn 295 294 0 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:142 -1
     (nil)
    (nil))

;; D.1851_92 = 4;

(insn 296 295 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 4 [0x4])) speller.c:143 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 299 298 300 22 "" [0 uses])

(note 300 299 0 NOTE_INSN_BASIC_BLOCK)

;; fclose (fp_32);

(insn 301 300 302 (set (reg/f:SI 160)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:147 -1
     (nil))

(insn 302 301 303 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 160)) speller.c:147 -1
     (nil))

(call_insn 303 302 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:147 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

;; getrusage (0, &before);

(insn 304 303 305 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:150 -1
     (nil))

(insn 305 304 306 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 161)) speller.c:150 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 306 305 307 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:150 -1
     (nil))

(call_insn 307 306 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:150 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; n_93 = size ();

(call_insn 308 307 309 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("size") [flags 0x41]  <function_decl 0xb6a0e700 size>) [0 size S1 A8])
            (const_int 0 [0]))) speller.c:151 -1
     (nil)
    (nil))

(insn 309 308 310 (set (reg:SI 162)
        (reg:SI 0 ax)) speller.c:151 -1
     (nil))

(insn 310 309 0 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 n+0 S4 A32])
        (reg:SI 162)) speller.c:151 -1
     (nil))

;; getrusage (0, &after);

(insn 311 310 312 (parallel [
            (set (reg:SI 163)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:152 -1
     (nil))

(insn 312 311 313 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 163)) speller.c:152 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 313 312 314 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:152 -1
     (nil))

(call_insn 314 313 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; ti_size_94 = calculate (&before, &after);

(insn 315 314 316 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 -1
     (nil))

(insn 316 315 317 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 164)) speller.c:155 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 317 316 318 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 -1
     (nil))

(insn 318 317 319 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 165)) speller.c:155 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 319 318 320 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:155 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 320 319 321 (set (reg:DF 166)
        (reg:DF 8 st)) speller.c:155 -1
     (nil))

(insn 321 320 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])
        (reg:DF 166)) speller.c:155 -1
     (nil))

;; getrusage (0, &before);

(insn 322 321 323 (parallel [
            (set (reg:SI 167)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:158 -1
     (nil))

(insn 323 322 324 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 167)) speller.c:158 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 324 323 325 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:158 -1
     (nil))

(call_insn 325 324 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; unloaded_95 = unload ();

(call_insn 326 325 327 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:159 -1
     (nil)
    (nil))

(insn 327 326 328 (set (reg:QI 168)
        (reg:QI 0 ax)) speller.c:159 -1
     (nil))

(insn 328 327 0 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])
        (reg:QI 168)) speller.c:159 -1
     (nil))

;; getrusage (0, &after);

(insn 329 328 330 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:160 -1
     (nil))

(insn 330 329 331 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 169)) speller.c:160 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 331 330 332 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:160 -1
     (nil))

(call_insn 332 331 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1926_96 = ~unloaded_95;

(insn 333 332 334 (set (reg:QI 170)
        (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])) speller.c:163 -1
     (nil))

(insn 334 333 0 (parallel [
            (set (reg:QI 106 [ D.1926 ])
                (xor:QI (reg:QI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:163 -1
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

;; if (D.1926_96 != 0)

(insn 335 334 336 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.1926 ])
            (const_int 0 [0]))) speller.c:163 -1
     (nil))

(jump_insn 336 335 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:163 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; printf ("Could not unload %s.\n", dictionary_24);

(insn 338 337 339 (set (reg/f:SI 171)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:165 -1
     (nil))

(insn 339 338 340 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 171)) speller.c:165 -1
     (nil))

(insn 340 339 341 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0xb6a30420 *.LC8>)) speller.c:165 -1
     (nil))

(call_insn 341 340 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:165 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; D.1851_97 = 5;

(insn 342 341 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 5 [0x5])) speller.c:166 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; 

(code_label 345 344 346 23 "" [0 uses])

(note 346 345 0 NOTE_INSN_BASIC_BLOCK)

;; ti_unload_98 = calculate (&before, &after);

(insn 347 346 348 (parallel [
            (set (reg:SI 172)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 -1
     (nil))

(insn 348 347 349 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 172)) speller.c:170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 349 348 350 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 -1
     (nil))

(insn 350 349 351 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 173)) speller.c:170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 351 350 352 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:170 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 352 351 353 (set (reg:DF 174)
        (reg:DF 8 st)) speller.c:170 -1
     (nil))

(insn 353 352 0 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])
        (reg:DF 174)) speller.c:170 -1
     (nil))

;; printf ("\nWORDS MISSPELLED:     %d\n", misspellings_8);

(insn 354 353 355 (set (reg:SI 175)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])) speller.c:173 -1
     (nil))

(insn 355 354 356 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175)) speller.c:173 -1
     (nil))

(insn 356 355 357 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0xb6a30480 *.LC9>)) speller.c:173 -1
     (nil))

(call_insn 357 356 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:173 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; printf ("WORDS IN DICTIONARY:  %d\n", n_93);

(insn 358 357 359 (set (reg:SI 176)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 n+0 S4 A32])) speller.c:174 -1
     (nil))

(insn 359 358 360 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 176)) speller.c:174 -1
     (nil))

(insn 360 359 361 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0xb6a304e0 *.LC10>)) speller.c:174 -1
     (nil))

(call_insn 361 360 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:174 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; printf ("WORDS IN TEXT:        %d\n", words_10);

(insn 362 361 363 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])) speller.c:175 -1
     (nil))

(insn 363 362 364 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 177)) speller.c:175 -1
     (nil))

(insn 364 363 365 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0xb6a30540 *.LC11>)) speller.c:175 -1
     (nil))

(call_insn 365 364 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:175 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

;; printf ("TIME IN load:         %.2f\n", ti_load_28);

(insn 366 365 367 (set (reg:DF 178)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])) speller.c:176 -1
     (nil))

(insn 367 366 368 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 178)) speller.c:176 -1
     (nil))

(insn 368 367 369 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0xb6a305a0 *.LC12>)) speller.c:176 -1
     (nil))

(call_insn 369 368 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:176 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

;; printf ("TIME IN check:        %.2f\n", ti_check_2);

(insn 370 369 371 (set (reg:DF 179)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])) speller.c:177 -1
     (nil))

(insn 371 370 372 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 179)) speller.c:177 -1
     (nil))

(insn 372 371 373 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0xb6a30600 *.LC13>)) speller.c:177 -1
     (nil))

(call_insn 373 372 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:177 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

;; printf ("TIME IN size:         %.2f\n", ti_size_94);

(insn 374 373 375 (set (reg:DF 180)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])) speller.c:178 -1
     (nil))

(insn 375 374 376 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 180)) speller.c:178 -1
     (nil))

(insn 376 375 377 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0xb6a30660 *.LC14>)) speller.c:178 -1
     (nil))

(call_insn 377 376 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:178 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

;; printf ("TIME IN unload:       %.2f\n", ti_unload_98);

(insn 378 377 379 (set (reg:DF 181)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])) speller.c:179 -1
     (nil))

(insn 379 378 380 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 181)) speller.c:179 -1
     (nil))

(insn 380 379 381 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0xb6a306c0 *.LC15>)) speller.c:179 -1
     (nil))

(call_insn 381 380 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:179 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

;; D.1929_99 = (long double) ti_load_28;

(insn 382 381 0 (set (reg:XF 107 [ D.1929 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64]))) speller.c:180 -1
     (nil))

;; D.1930_100 = (long double) ti_check_2;

(insn 383 382 0 (set (reg:XF 108 [ D.1930 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64]))) speller.c:180 -1
     (nil))

;; D.1931_101 = D.1929_99 + D.1930_100;

(insn 384 383 0 (set (reg:XF 109 [ D.1931 ])
        (plus:XF (reg:XF 107 [ D.1929 ])
            (reg:XF 108 [ D.1930 ]))) speller.c:180 -1
     (nil))

;; D.1932_102 = (long double) ti_size_94;

(insn 385 384 0 (set (reg:XF 110 [ D.1932 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64]))) speller.c:180 -1
     (nil))

;; D.1933_103 = D.1931_101 + D.1932_102;

(insn 386 385 0 (set (reg:XF 111 [ D.1933 ])
        (plus:XF (reg:XF 109 [ D.1931 ])
            (reg:XF 110 [ D.1932 ]))) speller.c:180 -1
     (nil))

;; D.1934_104 = (long double) ti_unload_98;

(insn 387 386 0 (set (reg:XF 112 [ D.1934 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64]))) speller.c:180 -1
     (nil))

;; D.1935_105 = D.1933_103 + D.1934_104;

(insn 388 387 0 (set (reg:XF 113 [ D.1935 ])
        (plus:XF (reg:XF 111 [ D.1933 ])
            (reg:XF 112 [ D.1934 ]))) speller.c:180 -1
     (nil))

;; D.1936_106 = (double) D.1935_105;

(insn 389 388 0 (parallel [
            (set (reg:DF 114 [ D.1936 ])
                (float_truncate:DF (reg:XF 113 [ D.1935 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -288 [0xfffffffffffffee0])) [0 S8 A64]))
        ]) speller.c:180 -1
     (nil))

;; printf ("TIME IN TOTAL:        %.2f\n\n", D.1936_106);

(insn 390 389 391 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 114 [ D.1936 ])) speller.c:180 -1
     (nil))

(insn 391 390 392 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0xb6a30720 *.LC16>)) speller.c:180 -1
     (nil))

(call_insn 392 391 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:180 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

;; D.1851_107 = 0;

(insn 393 392 0 (set (reg:SI 59 [ D.1851 ])
        (const_int 0 [0])) speller.c:184 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; 

(code_label 394 393 395 3 "" [0 uses])

(note 395 394 0 NOTE_INSN_BASIC_BLOCK)

;; before ={v} {CLOBBER};

(nil)

;; after ={v} {CLOBBER};

(nil)

;; word ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 42

;; <L44>:

(code_label 396 395 397 24 "" [0 uses])

(note 397 396 0 NOTE_INSN_BASIC_BLOCK)

;; return D.1851_12;

(insn 398 397 399 (set (reg:SI 115 [ <retval> ])
        (reg:SI 59 [ D.1851 ])) -1
     (nil))

(jump_insn 399 398 400 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 400 399 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)


;; Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl.
;; Predecessors:  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) speller.c:27 -1
     (nil))

(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])
        (reg/f:SI 116)) speller.c:27 -1
     (nil))

(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 4 7 2 (parallel [
            (set (mem/v/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 D.1941+0 S4 A32])
                (unspec:SI [
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:SI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) speller.c:27 -1
     (nil))

;; Successors:  3 [100.0%]  (fallthru)


;; Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) speller.c:29 -1
     (nil))

(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 -1
     (nil)
 -> 19)

;; Successors:  4 (fallthru) 6


;; Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  3 (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:29 -1
     (nil))

(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) speller.c:29 -1
     (nil)
 -> 19)

;; Successors:  5 (fallthru) 6


;; Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  4 (fallthru)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0xb6a30180 *.LC0>)) speller.c:31 -1
     (nil))

(call_insn 15 14 16 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:31 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 16 15 17 5 (set (reg:SI 59 [ D.1851 ])
        (const_int 1 [0x1])) speller.c:32 -1
     (nil))

(jump_insn 17 16 18 5 (set (pc)
        (label_ref 394)) speller.c:32 -1
     (nil)
 -> 394)

;; Successors:  42

(barrier 18 17 19)


;; Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  3 4
(code_label 19 18 20 6 2 "" [2 uses])

(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 6 (set (reg:DF 117)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 22 21 23 6 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])
        (reg:DF 117)) speller.c:39 -1
     (nil))

(insn 23 22 24 6 (set (reg:DF 118)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 24 23 25 6 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])
        (reg:DF 118)) speller.c:39 -1
     (nil))

(insn 25 24 26 6 (set (reg:DF 119)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 26 25 27 6 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])
        (reg:DF 119)) speller.c:39 -1
     (nil))

(insn 27 26 28 6 (set (reg:DF 120)
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:39 -1
     (nil))

(insn 28 27 29 6 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])
        (reg:DF 120)) speller.c:39 -1
     (nil))

(insn 29 28 30 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:42 -1
     (nil))

(jump_insn 30 29 31 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) speller.c:42 -1
     (nil)
 -> 36)

;; Successors:  7 (fallthru) 8


;; Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  6 (fallthru)
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:42 -1
     (nil))

(insn 33 32 34 7 (set (reg/f:SI 60 [ iftmp.0 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:42 -1
     (nil))

(jump_insn 34 33 35 7 (set (pc)
        (label_ref 39)) speller.c:42 -1
     (nil)
 -> 39)

;; Successors:  9

(barrier 35 34 36)


;; Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  6
(code_label 36 35 37 8 4 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 8 (set (reg/f:SI 60 [ iftmp.0 ])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0xb6a301e0 *.LC2>)) speller.c:42 -1
     (nil))

;; Successors:  9 (fallthru)


;; Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  7 8 (fallthru)
(code_label 39 38 40 9 5 "" [1 uses])

(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])
        (reg/f:SI 60 [ iftmp.0 ])) speller.c:42 -1
     (nil))

(insn 42 41 43 9 (parallel [
            (set (reg:SI 122)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:45 -1
     (nil))

(insn 43 42 44 9 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 122)) speller.c:45 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 44 43 45 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:45 -1
     (nil))

(call_insn 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:45 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 46 45 47 9 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:46 -1
     (nil))

(insn 47 46 48 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 123)) speller.c:46 -1
     (nil))

(call_insn 48 47 49 9 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("load") [flags 0x41]  <function_decl 0xb6a0e680 load>) [0 load S1 A8])
            (const_int 4 [0x4]))) speller.c:46 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 49 48 50 9 (set (reg:QI 124)
        (reg:QI 0 ax)) speller.c:46 -1
     (nil))

(insn 50 49 51 9 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])
        (reg:QI 124)) speller.c:46 -1
     (nil))

(insn 51 50 52 9 (parallel [
            (set (reg:SI 125)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:47 -1
     (nil))

(insn 52 51 53 9 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 125)) speller.c:47 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 53 52 54 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:47 -1
     (nil))

(call_insn 54 53 55 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 55 54 56 9 (set (reg:QI 126)
        (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])) speller.c:50 -1
     (nil))

(insn 56 55 57 9 (parallel [
            (set (reg:QI 62 [ D.1856 ])
                (xor:QI (reg:QI 126)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:50 -1
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -267 [0xfffffffffffffef5])) [0 loaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

(insn 57 56 58 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.1856 ])
            (const_int 0 [0]))) speller.c:50 -1
     (nil))

(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) speller.c:50 -1
     (nil)
 -> 67)

;; Successors:  10 (fallthru) 11


;; Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  9 (fallthru)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 10 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:52 -1
     (nil))

(insn 61 60 62 10 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 127)) speller.c:52 -1
     (nil))

(insn 62 61 63 10 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0xb6a30240 *.LC3>)) speller.c:52 -1
     (nil))

(call_insn 63 62 64 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:52 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 64 63 65 10 (set (reg:SI 59 [ D.1851 ])
        (const_int 2 [0x2])) speller.c:53 -1
     (nil))

(jump_insn 65 64 66 10 (set (pc)
        (label_ref 394)) speller.c:53 -1
     (nil)
 -> 394)

;; Successors:  42

(barrier 66 65 67)


;; Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  9
(code_label 67 66 68 11 6 "" [1 uses])

(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 11 (parallel [
            (set (reg:SI 128)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 -1
     (nil))

(insn 70 69 71 11 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 128)) speller.c:57 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 71 70 72 11 (parallel [
            (set (reg:SI 129)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:57 -1
     (nil))

(insn 72 71 73 11 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 129)) speller.c:57 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 73 72 74 11 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:57 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 74 73 75 11 (set (reg:DF 130)
        (reg:DF 8 st)) speller.c:57 -1
     (nil))

(insn 75 74 76 11 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])
        (reg:DF 130)) speller.c:57 -1
     (nil))

(insn 76 75 77 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 53 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 3 [0x3]))) speller.c:60 -1
     (nil))

(jump_insn 77 76 78 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) speller.c:60 -1
     (nil)
 -> 83)

;; Successors:  12 (fallthru) 13


;; Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  11 (fallthru)
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 12 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:60 -1
     (nil))

(insn 80 79 81 12 (set (reg/f:SI 61 [ iftmp.1 ])
        (mem/f:SI (plus:SI (reg/f:SI 131)
                (const_int 8 [0x8])) [0 MEM[(char * *)argv_21(D) + 8B]+0 S4 A32])) speller.c:60 -1
     (nil))

(jump_insn 81 80 82 12 (set (pc)
        (label_ref 87)) speller.c:60 -1
     (nil)
 -> 87)

;; Successors:  14

(barrier 82 81 83)


;; Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  11
(code_label 83 82 84 13 7 "" [1 uses])

(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 13 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argv+0 S4 A32])) speller.c:60 -1
     (nil))

(insn 86 85 87 13 (set (reg/f:SI 61 [ iftmp.1 ])
        (mem/f:SI (plus:SI (reg/f:SI 132)
                (const_int 4 [0x4])) [0 MEM[(char * *)argv_21(D) + 4B]+0 S4 A32])) speller.c:60 -1
     (nil))

;; Successors:  14 (fallthru)


;; Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  12 13 (fallthru)
(code_label 87 86 88 14 8 "" [1 uses])

(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])
        (reg/f:SI 61 [ iftmp.1 ])) speller.c:60 -1
     (nil))

(insn 90 89 91 14 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0xb6a302a0 *.LC4>)) speller.c:61 -1
     (nil))

(insn 91 90 92 14 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:61 -1
     (nil))

(insn 92 91 93 14 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 133)) speller.c:61 -1
     (nil))

(call_insn 93 92 94 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fopen") [flags 0x41]  <function_decl 0xb69f3880 fopen>) [0 fopen S1 A8])
            (const_int 8 [0x8]))) speller.c:61 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 94 93 95 14 (set (reg:SI 134)
        (reg:SI 0 ax)) speller.c:61 -1
     (nil))

(insn 95 94 96 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])
        (reg:SI 134)) speller.c:61 -1
     (nil))

(insn 96 95 97 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])
            (const_int 0 [0]))) speller.c:62 -1
     (nil))

(jump_insn 97 96 98 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) speller.c:62 -1
     (nil)
 -> 107)

;; Successors:  15 (fallthru) 16


;; Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  14 (fallthru)
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 15 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:64 -1
     (nil))

(insn 100 99 101 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 135)) speller.c:64 -1
     (nil))

(insn 101 100 102 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0xb6a30300 *.LC5>)) speller.c:64 -1
     (nil))

(call_insn 102 101 103 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:64 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 103 102 104 15 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:65 -1
     (nil)
    (nil))

(insn 104 103 105 15 (set (reg:SI 59 [ D.1851 ])
        (const_int 3 [0x3])) speller.c:66 -1
     (nil))

(jump_insn 105 104 106 15 (set (pc)
        (label_ref 394)) speller.c:66 -1
     (nil)
 -> 394)

;; Successors:  42

(barrier 106 105 107)


;; Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  14
(code_label 107 106 108 16 9 "" [1 uses])

(note 108 107 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 16 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0xb6a30360 *.LC6>)) speller.c:70 -1
     (nil))

(call_insn 110 109 111 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:70 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 111 110 112 16 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

(insn 112 111 113 16 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

(insn 113 112 114 16 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
        (const_int 0 [0])) speller.c:73 -1
     (nil))

(insn 114 113 115 16 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:78 -1
     (nil))

(insn 115 114 116 16 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 136)) speller.c:78 -1
     (nil))

(call_insn 116 115 117 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 117 116 118 16 (set (reg:SI 137)
        (reg:SI 0 ax)) speller.c:78 -1
     (nil))

(insn 118 117 119 16 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 137)) speller.c:78 -1
     (nil))

(jump_insn 119 118 120 16 (set (pc)
        (label_ref 275)) speller.c:78 -1
     (nil)
 -> 275)

;; Successors:  36

(barrier 120 119 277)


;; Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  36
(code_label 277 120 121 17 21 "" [1 uses])

(note 121 277 122 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 122 121 123 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 123 122 124 17 (set (reg/f:SI 63 [ D.1868 ])
        (reg:SI 0 ax)) speller.c:81 -1
     (nil))

(insn 124 123 125 17 (set (reg/f:SI 64 [ D.1869 ])
        (mem/f:SI (reg/f:SI 63 [ D.1868 ]) [0 *D.1868_38+0 S4 A32])) speller.c:81 -1
     (nil))

(insn 125 124 126 17 (set (reg:SI 65 [ c.2 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:81 -1
     (nil))

(insn 126 125 127 17 (parallel [
            (set (reg:SI 66 [ D.1871 ])
                (ashift:SI (reg:SI 65 [ c.2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

(insn 127 126 128 17 (parallel [
            (set (reg/f:SI 67 [ D.1872 ])
                (plus:SI (reg/f:SI 64 [ D.1869 ])
                    (reg:SI 66 [ D.1871 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

(insn 128 127 129 17 (set (reg:HI 68 [ D.1873 ])
        (mem:HI (reg/f:SI 67 [ D.1872 ]) [0 *D.1872_42+0 S2 A16])) speller.c:81 -1
     (nil))

(insn 129 128 130 17 (set (reg:SI 69 [ D.1874 ])
        (zero_extend:SI (reg:HI 68 [ D.1873 ]))) speller.c:81 -1
     (nil))

(insn 130 129 131 17 (parallel [
            (set (reg:SI 70 [ D.1875 ])
                (and:SI (reg:SI 69 [ D.1874 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:81 -1
     (nil))

(insn 131 130 132 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.1875 ])
            (const_int 0 [0]))) speller.c:81 -1
     (nil))

(jump_insn 132 131 133 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) speller.c:81 -1
     (nil)
 -> 139)

;; Successors:  20 18 (fallthru)


;; Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  17 (fallthru)
(note 133 132 134 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int 39 [0x27]))) speller.c:81 -1
     (nil))

(jump_insn 135 134 136 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 -1
     (nil)
 -> 179)

;; Successors:  19 (fallthru) 26


;; Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  18 (fallthru)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:81 -1
     (nil))

(jump_insn 138 137 139 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) speller.c:81 -1
     (nil)
 -> 179)

;; Successors:  20 (fallthru) 26


;; Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  17 19 (fallthru)
(code_label 139 138 140 20 11 "" [1 uses])

(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 (set (reg:SI 138)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:84 -1
     (nil))

(insn 142 141 143 20 (set (reg:QI 96 [ D.1878 ])
        (subreg:QI (reg:SI 138) 0)) speller.c:84 -1
     (nil))

(insn 143 142 144 20 (parallel [
            (set (reg:SI 139)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 -1
     (nil))

(insn 144 143 145 20 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])) speller.c:84 -1
     (nil))

(insn 145 144 146 20 (parallel [
            (set (reg/f:SI 140)
                (plus:SI (reg:SI 139)
                    (reg:SI 141)))
            (clobber (reg:CC 17 flags))
        ]) speller.c:84 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 139)
            (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32]))
        (nil)))

(insn 146 145 147 20 (set (mem/j:QI (reg/f:SI 140) [0 word S1 A8])
        (reg:QI 96 [ D.1878 ])) speller.c:84 -1
     (nil))

(insn 147 146 148 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:85 -1
     (nil))

(insn 148 147 149 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 45 [0x2d]))) speller.c:88 -1
     (nil))

(jump_insn 149 148 150 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) speller.c:88 -1
     (nil)
 -> 175)

;; Successors:  21 (fallthru) 25


;; Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  20 (fallthru)
(note 150 149 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

;; Successors:  22 (fallthru)


;; Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  21 (fallthru) 23 (dfs_back)
(code_label 169 150 151 22 15 "" [1 uses])

(note 151 169 152 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 22 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:91 -1
     (nil))

(insn 153 152 154 22 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 142)) speller.c:91 -1
     (nil))

(call_insn 154 153 155 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:91 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 155 154 156 22 (set (reg:SI 143)
        (reg:SI 0 ax)) speller.c:91 -1
     (nil))

(insn 156 155 157 22 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 143)) speller.c:91 -1
     (nil))

(insn 157 156 158 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:91 -1
     (nil))

(jump_insn 158 157 159 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) speller.c:91 -1
     (nil)
 -> 172)

;; Successors:  23 (fallthru) 24


;; Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  22 (fallthru)
(note 159 158 160 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 160 159 161 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 161 160 162 23 (set (reg/f:SI 97 [ D.1882 ])
        (reg:SI 0 ax)) speller.c:91 -1
     (nil))

(insn 162 161 163 23 (set (reg/f:SI 98 [ D.1883 ])
        (mem/f:SI (reg/f:SI 97 [ D.1882 ]) [0 *D.1882_81+0 S4 A32])) speller.c:91 -1
     (nil))

(insn 163 162 164 23 (set (reg:SI 99 [ c.3 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:91 -1
     (nil))

(insn 164 163 165 23 (parallel [
            (set (reg:SI 100 [ D.1885 ])
                (ashift:SI (reg:SI 99 [ c.3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

(insn 165 164 166 23 (parallel [
            (set (reg/f:SI 101 [ D.1886 ])
                (plus:SI (reg/f:SI 98 [ D.1883 ])
                    (reg:SI 100 [ D.1885 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

(insn 166 165 167 23 (set (reg:HI 102 [ D.1887 ])
        (mem:HI (reg/f:SI 101 [ D.1886 ]) [0 *D.1886_85+0 S2 A16])) speller.c:91 -1
     (nil))

(insn 167 166 168 23 (set (reg:SI 103 [ D.1888 ])
        (zero_extend:SI (reg:HI 102 [ D.1887 ]))) speller.c:91 -1
     (nil))

(insn 168 167 170 23 (parallel [
            (set (reg:SI 104 [ D.1889 ])
                (and:SI (reg:SI 103 [ D.1888 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:91 -1
     (nil))

(insn 170 168 171 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.1889 ])
            (const_int 0 [0]))) speller.c:91 -1
     (nil))

(jump_insn 171 170 172 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) speller.c:91 -1
     (nil)
 -> 169)

;; Successors:  22 (dfs_back) 24 (fallthru)


;; Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  22 23 (fallthru)
(code_label 172 171 173 24 14 "" [1 uses])

(note 173 172 174 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 24 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:94 -1
     (nil))

;; Successors:  25 (fallthru)


;; Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  20 24 (fallthru)
(code_label 175 174 176 25 13 "" [1 uses])

(note 176 175 177 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 177 176 178 25 (set (pc)
        (label_ref 268)) speller.c:88 -1
     (nil)
 -> 268)

;; Successors:  35

(barrier 178 177 179)


;; Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  18 19
(code_label 179 178 180 26 12 "" [2 uses])

(note 180 179 181 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 181 180 182 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:99 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 182 181 183 26 (set (reg/f:SI 71 [ D.1890 ])
        (reg:SI 0 ax)) speller.c:99 -1
     (nil))

(insn 183 182 184 26 (set (reg/f:SI 72 [ D.1891 ])
        (mem/f:SI (reg/f:SI 71 [ D.1890 ]) [0 *D.1890_46+0 S4 A32])) speller.c:99 -1
     (nil))

(insn 184 183 185 26 (set (reg:SI 73 [ c.4 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:99 -1
     (nil))

(insn 185 184 186 26 (parallel [
            (set (reg:SI 74 [ D.1893 ])
                (ashift:SI (reg:SI 73 [ c.4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

(insn 186 185 187 26 (parallel [
            (set (reg/f:SI 75 [ D.1894 ])
                (plus:SI (reg/f:SI 72 [ D.1891 ])
                    (reg:SI 74 [ D.1893 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

(insn 187 186 188 26 (set (reg:HI 76 [ D.1895 ])
        (mem:HI (reg/f:SI 75 [ D.1894 ]) [0 *D.1894_50+0 S2 A16])) speller.c:99 -1
     (nil))

(insn 188 187 189 26 (set (reg:SI 77 [ D.1896 ])
        (zero_extend:SI (reg:HI 76 [ D.1895 ]))) speller.c:99 -1
     (nil))

(insn 189 188 190 26 (parallel [
            (set (reg:SI 78 [ D.1897 ])
                (and:SI (reg:SI 77 [ D.1896 ])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:99 -1
     (nil))

(insn 190 189 191 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.1897 ])
            (const_int 0 [0]))) speller.c:99 -1
     (nil))

(jump_insn 191 190 192 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) speller.c:99 -1
     (nil)
 -> 219)

;; Successors:  27 (fallthru) 31


;; Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  26 (fallthru)
(note 192 191 211 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

;; Successors:  28 (fallthru)


;; Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  27 (fallthru) 29 (dfs_back)
(code_label 211 192 193 28 19 "" [1 uses])

(note 193 211 194 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 28 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:102 -1
     (nil))

(insn 195 194 196 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 144)) speller.c:102 -1
     (nil))

(call_insn 196 195 197 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:102 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 197 196 198 28 (set (reg:SI 145)
        (reg:SI 0 ax)) speller.c:102 -1
     (nil))

(insn 198 197 199 28 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 145)) speller.c:102 -1
     (nil))

(insn 199 198 200 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:102 -1
     (nil))

(jump_insn 200 199 201 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) speller.c:102 -1
     (nil)
 -> 214)

;; Successors:  29 (fallthru) 30


;; Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  28 (fallthru)
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(call_insn/u 202 201 203 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__ctype_b_loc") [flags 0x41]  <function_decl 0xb69bab80 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) speller.c:102 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 203 202 204 29 (set (reg/f:SI 79 [ D.1901 ])
        (reg:SI 0 ax)) speller.c:102 -1
     (nil))

(insn 204 203 205 29 (set (reg/f:SI 80 [ D.1902 ])
        (mem/f:SI (reg/f:SI 79 [ D.1901 ]) [0 *D.1901_55+0 S4 A32])) speller.c:102 -1
     (nil))

(insn 205 204 206 29 (set (reg:SI 81 [ c.5 ])
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])) speller.c:102 -1
     (nil))

(insn 206 205 207 29 (parallel [
            (set (reg:SI 82 [ D.1904 ])
                (ashift:SI (reg:SI 81 [ c.5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

(insn 207 206 208 29 (parallel [
            (set (reg/f:SI 83 [ D.1905 ])
                (plus:SI (reg/f:SI 80 [ D.1902 ])
                    (reg:SI 82 [ D.1904 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

(insn 208 207 209 29 (set (reg:HI 84 [ D.1906 ])
        (mem:HI (reg/f:SI 83 [ D.1905 ]) [0 *D.1905_59+0 S2 A16])) speller.c:102 -1
     (nil))

(insn 209 208 210 29 (set (reg:SI 85 [ D.1907 ])
        (zero_extend:SI (reg:HI 84 [ D.1906 ]))) speller.c:102 -1
     (nil))

(insn 210 209 212 29 (parallel [
            (set (reg:SI 86 [ D.1908 ])
                (and:SI (reg:SI 85 [ D.1907 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:102 -1
     (nil))

(insn 212 210 213 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ D.1908 ])
            (const_int 0 [0]))) speller.c:102 -1
     (nil))

(jump_insn 213 212 214 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) speller.c:102 -1
     (nil)
 -> 211)

;; Successors:  28 (dfs_back) 30 (fallthru)


;; Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  28 29 (fallthru)
(code_label 214 213 215 30 18 "" [1 uses])

(note 215 214 216 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 30 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:105 -1
     (nil))

(jump_insn 217 216 218 30 (set (pc)
        (label_ref 268)) speller.c:105 -1
     (nil)
 -> 268)

;; Successors:  35

(barrier 218 217 219)


;; Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  26
(code_label 219 218 220 31 17 "" [1 uses])

(note 220 219 221 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 31 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
            (const_int 0 [0]))) speller.c:109 -1
     (nil))

(jump_insn 222 221 223 31 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) speller.c:109 -1
     (nil)
 -> 268)

;; Successors:  32 (fallthru) 35


;; Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  31 (fallthru)
(note 223 222 224 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 32 (parallel [
            (set (reg:SI 146)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 -1
     (nil))

(insn 225 224 226 32 (set (reg:SI 148)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])) speller.c:112 -1
     (nil))

(insn 226 225 227 32 (parallel [
            (set (reg/f:SI 147)
                (plus:SI (reg:SI 146)
                    (reg:SI 148)))
            (clobber (reg:CC 17 flags))
        ]) speller.c:112 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 146)
            (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32]))
        (nil)))

(insn 227 226 228 32 (set (mem/j:QI (reg/f:SI 147) [0 word S1 A8])
        (const_int 0 [0])) speller.c:112 -1
     (nil))

(insn 228 227 229 32 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:115 -1
     (nil))

(insn 229 228 230 32 (parallel [
            (set (reg:SI 149)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:118 -1
     (nil))

(insn 230 229 231 32 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 149)) speller.c:118 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 231 230 232 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:118 -1
     (nil))

(call_insn 232 231 233 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:118 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 233 232 234 32 (parallel [
            (set (reg:SI 150)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 234 233 235 32 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 150)) speller.c:119 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 235 234 236 32 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("check") [flags 0x41]  <function_decl 0xb6a0e600 check>) [0 check S1 A8])
            (const_int 4 [0x4]))) speller.c:119 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 236 235 237 32 (set (reg:QI 87 [ D.1912 ])
        (reg:QI 0 ax)) speller.c:119 -1
     (nil))

(insn 237 236 238 32 (parallel [
            (set (reg:SI 88 [ D.1913 ])
                (zero_extend:SI (reg:QI 87 [ D.1912 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 238 237 239 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.1913 ])
            (const_int 0 [0]))) speller.c:119 -1
     (nil))

(insn 239 238 240 32 (set (reg:QI 89 [ D.1914 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) speller.c:119 -1
     (nil))

(insn 240 239 241 32 (parallel [
            (set (reg:QI 90 [ D.1915 ])
                (xor:QI (reg:QI 89 [ D.1914 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 241 240 242 32 (parallel [
            (set (reg:SI 91 [ D.1916 ])
                (zero_extend:SI (reg:QI 90 [ D.1915 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 242 241 243 32 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
        (subreg:QI (reg:SI 91 [ D.1916 ]) 0)) speller.c:119 -1
     (nil))

(insn 243 242 244 32 (parallel [
            (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
                (and:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:119 -1
     (nil))

(insn 244 243 245 32 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:120 -1
     (nil))

(insn 245 244 246 32 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 151)) speller.c:120 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 246 245 247 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:120 -1
     (nil))

(call_insn 247 246 248 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:120 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 248 247 249 32 (set (reg:XF 92 [ D.1917 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64]))) speller.c:123 -1
     (nil))

(insn 249 248 250 32 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 -1
     (nil))

(insn 250 249 251 32 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 152)) speller.c:123 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 251 250 252 32 (parallel [
            (set (reg:SI 153)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:123 -1
     (nil))

(insn 252 251 253 32 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 153)) speller.c:123 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 253 252 254 32 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:123 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 254 253 255 32 (set (reg:DF 93 [ D.1918 ])
        (reg:DF 8 st)) speller.c:123 -1
     (nil))

(insn 255 254 256 32 (set (reg:XF 94 [ D.1919 ])
        (float_extend:XF (reg:DF 93 [ D.1918 ]))) speller.c:123 -1
     (nil))

(insn 256 255 257 32 (set (reg:XF 95 [ D.1920 ])
        (plus:XF (reg:XF 92 [ D.1917 ])
            (reg:XF 94 [ D.1919 ]))) speller.c:123 -1
     (nil))

(insn 257 256 258 32 (parallel [
            (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])
                (float_truncate:DF (reg:XF 95 [ D.1920 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -288 [0xfffffffffffffee0])) [0 S8 A64]))
        ]) speller.c:123 -1
     (nil))

(insn 258 257 259 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -266 [0xfffffffffffffef6])) [0 misspelled+0 S1 A8])
            (const_int 0 [0]))) speller.c:126 -1
     (nil))

(jump_insn 259 258 260 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) speller.c:126 -1
     (nil)
 -> 265)

;; Successors:  33 (fallthru) 34


;; Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  32 (fallthru)
(note 260 259 261 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 261 260 262 33 (parallel [
            (set (reg:SI 154)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -50 [0xffffffffffffffce])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:128 -1
     (nil))

(insn 262 261 263 33 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 154)) speller.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -50 [0xffffffffffffffce]))
        (nil)))

(call_insn 263 262 264 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0xb6990400 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) speller.c:128 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 264 263 265 33 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:129 -1
     (nil))

;; Successors:  34 (fallthru)


;; Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  32 33 (fallthru)
(code_label 265 264 266 34 20 "" [1 uses])

(note 266 265 267 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 34 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 index+0 S4 A32])
        (const_int 0 [0])) speller.c:133 -1
     (nil))

;; Successors:  35 (fallthru)


;; Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  25 30 31 34 (fallthru)
(code_label 268 267 269 35 16 "" [3 uses])

(note 269 268 270 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 35 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:78 -1
     (nil))

(insn 271 270 272 35 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 155)) speller.c:78 -1
     (nil))

(call_insn 272 271 273 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fgetc") [flags 0x41]  <function_decl 0xb69f9480 fgetc>) [0 fgetc S1 A8])
            (const_int 4 [0x4]))) speller.c:78 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 273 272 274 35 (set (reg:SI 156)
        (reg:SI 0 ax)) speller.c:78 -1
     (nil))

(insn 274 273 275 35 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
        (reg:SI 156)) speller.c:78 -1
     (nil))

;; Successors:  36 (fallthru,dfs_back)


;; Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  16 35 (fallthru,dfs_back)
(code_label 275 274 276 36 10 "" [1 uses])

(note 276 275 278 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 278 276 279 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) speller.c:78 -1
     (nil))

(jump_insn 279 278 280 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) speller.c:78 -1
     (nil)
 -> 277)

;; Successors:  17 37 (fallthru)


;; Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  36 (fallthru)
(note 280 279 281 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 281 280 282 37 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:138 -1
     (nil))

(insn 282 281 283 37 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 157)) speller.c:138 -1
     (nil))

(call_insn 283 282 284 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("ferror") [flags 0x41]  <function_decl 0xb69f9e80 ferror>) [0 ferror S1 A8])
            (const_int 4 [0x4]))) speller.c:138 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 284 283 285 37 (set (reg:SI 105 [ D.1923 ])
        (reg:SI 0 ax)) speller.c:138 -1
     (nil))

(insn 285 284 286 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.1923 ])
            (const_int 0 [0]))) speller.c:138 -1
     (nil))

(jump_insn 286 285 287 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) speller.c:138 -1
     (nil)
 -> 299)

;; Successors:  38 (fallthru) 39


;; Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  37 (fallthru)
(note 287 286 288 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 289 38 (set (reg/f:SI 158)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:140 -1
     (nil))

(insn 289 288 290 38 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 158)) speller.c:140 -1
     (nil))

(call_insn 290 289 291 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:140 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 291 290 292 38 (set (reg/f:SI 159)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 text+0 S4 A32])) speller.c:141 -1
     (nil))

(insn 292 291 293 38 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 159)) speller.c:141 -1
     (nil))

(insn 293 292 294 38 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0xb6a303c0 *.LC7>)) speller.c:141 -1
     (nil))

(call_insn 294 293 295 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:141 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 295 294 296 38 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:142 -1
     (nil)
    (nil))

(insn 296 295 297 38 (set (reg:SI 59 [ D.1851 ])
        (const_int 4 [0x4])) speller.c:143 -1
     (nil))

(jump_insn 297 296 298 38 (set (pc)
        (label_ref 394)) speller.c:143 -1
     (nil)
 -> 394)

;; Successors:  42

(barrier 298 297 299)


;; Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  37
(code_label 299 298 300 39 22 "" [1 uses])

(note 300 299 301 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 39 (set (reg/f:SI 160)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 fp+0 S4 A32])) speller.c:147 -1
     (nil))

(insn 302 301 303 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 160)) speller.c:147 -1
     (nil))

(call_insn 303 302 304 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fclose") [flags 0x41]  <function_decl 0xb69f3780 fclose>) [0 fclose S1 A8])
            (const_int 4 [0x4]))) speller.c:147 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (nil)))

(insn 304 303 305 39 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:150 -1
     (nil))

(insn 305 304 306 39 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 161)) speller.c:150 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 306 305 307 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:150 -1
     (nil))

(call_insn 307 306 308 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:150 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 308 307 309 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("size") [flags 0x41]  <function_decl 0xb6a0e700 size>) [0 size S1 A8])
            (const_int 0 [0]))) speller.c:151 -1
     (nil)
    (nil))

(insn 309 308 310 39 (set (reg:SI 162)
        (reg:SI 0 ax)) speller.c:151 -1
     (nil))

(insn 310 309 311 39 (set (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 n+0 S4 A32])
        (reg:SI 162)) speller.c:151 -1
     (nil))

(insn 311 310 312 39 (parallel [
            (set (reg:SI 163)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:152 -1
     (nil))

(insn 312 311 313 39 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 163)) speller.c:152 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 313 312 314 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:152 -1
     (nil))

(call_insn 314 313 315 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 315 314 316 39 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 -1
     (nil))

(insn 316 315 317 39 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 164)) speller.c:155 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 317 316 318 39 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:155 -1
     (nil))

(insn 318 317 319 39 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 165)) speller.c:155 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 319 318 320 39 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:155 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 320 319 321 39 (set (reg:DF 166)
        (reg:DF 8 st)) speller.c:155 -1
     (nil))

(insn 321 320 322 39 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])
        (reg:DF 166)) speller.c:155 -1
     (nil))

(insn 322 321 323 39 (parallel [
            (set (reg:SI 167)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:158 -1
     (nil))

(insn 323 322 324 39 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 167)) speller.c:158 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(insn 324 323 325 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:158 -1
     (nil))

(call_insn 325 324 326 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(call_insn 326 325 327 39 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("unload") [flags 0x41]  <function_decl 0xb6a0e780 unload>) [0 unload S1 A8])
            (const_int 0 [0]))) speller.c:159 -1
     (nil)
    (nil))

(insn 327 326 328 39 (set (reg:QI 168)
        (reg:QI 0 ax)) speller.c:159 -1
     (nil))

(insn 328 327 329 39 (set (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])
        (reg:QI 168)) speller.c:159 -1
     (nil))

(insn 329 328 330 39 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:160 -1
     (nil))

(insn 330 329 331 39 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 169)) speller.c:160 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 331 330 332 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 0 [0])) speller.c:160 -1
     (nil))

(call_insn 332 331 333 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getrusage") [flags 0x41]  <function_decl 0xb6a0e100 getrusage>) [0 getrusage S1 A8])
            (const_int 8 [0x8]))) speller.c:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_BR_PRED (use (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 333 332 334 39 (set (reg:QI 170)
        (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])) speller.c:163 -1
     (nil))

(insn 334 333 335 39 (parallel [
            (set (reg:QI 106 [ D.1926 ])
                (xor:QI (reg:QI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:163 -1
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -265 [0xfffffffffffffef7])) [0 unloaded+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))

(insn 335 334 336 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.1926 ])
            (const_int 0 [0]))) speller.c:163 -1
     (nil))

(jump_insn 336 335 337 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) speller.c:163 -1
     (nil)
 -> 345)

;; Successors:  40 (fallthru) 41


;; Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  39 (fallthru)
(note 337 336 338 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 338 337 339 40 (set (reg/f:SI 171)
        (mem/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 dictionary+0 S4 A32])) speller.c:165 -1
     (nil))

(insn 339 338 340 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 171)) speller.c:165 -1
     (nil))

(insn 340 339 341 40 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0xb6a30420 *.LC8>)) speller.c:165 -1
     (nil))

(call_insn 341 340 342 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:165 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 342 341 343 40 (set (reg:SI 59 [ D.1851 ])
        (const_int 5 [0x5])) speller.c:166 -1
     (nil))

(jump_insn 343 342 344 40 (set (pc)
        (label_ref 394)) speller.c:166 -1
     (nil)
 -> 394)

;; Successors:  42

(barrier 344 343 345)


;; Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  39
(code_label 345 344 346 41 23 "" [1 uses])

(note 346 345 347 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 347 346 348 41 (parallel [
            (set (reg:SI 172)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 -1
     (nil))

(insn 348 347 349 41 (set (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 172)) speller.c:170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -124 [0xffffffffffffff84]))
        (nil)))

(insn 349 348 350 41 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:170 -1
     (nil))

(insn 350 349 351 41 (set (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 173)) speller.c:170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -196 [0xffffffffffffff3c]))
        (nil)))

(call_insn 351 350 352 41 (set (reg:DF 8 st)
        (call (mem:QI (symbol_ref:SI ("calculate") [flags 0x3]  <function_decl 0xb6a0e800 calculate>) [0 calculate S1 A8])
            (const_int 8 [0x8]))) speller.c:170 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem/f:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 352 351 353 41 (set (reg:DF 174)
        (reg:DF 8 st)) speller.c:170 -1
     (nil))

(insn 353 352 354 41 (set (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])
        (reg:DF 174)) speller.c:170 -1
     (nil))

(insn 354 353 355 41 (set (reg:SI 175)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [0 misspellings+0 S4 A32])) speller.c:173 -1
     (nil))

(insn 355 354 356 41 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175)) speller.c:173 -1
     (nil))

(insn 356 355 357 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0xb6a30480 *.LC9>)) speller.c:173 -1
     (nil))

(call_insn 357 356 358 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:173 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 358 357 359 41 (set (reg:SI 176)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 n+0 S4 A32])) speller.c:174 -1
     (nil))

(insn 359 358 360 41 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 176)) speller.c:174 -1
     (nil))

(insn 360 359 361 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0xb6a304e0 *.LC10>)) speller.c:174 -1
     (nil))

(call_insn 361 360 362 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:174 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 362 361 363 41 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 words+0 S4 A32])) speller.c:175 -1
     (nil))

(insn 363 362 364 41 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 177)) speller.c:175 -1
     (nil))

(insn 364 363 365 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0xb6a30540 *.LC11>)) speller.c:175 -1
     (nil))

(call_insn 365 364 366 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) speller.c:175 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:REG_BR_PRED (use (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S4 A32]))
            (nil))))

(insn 366 365 367 41 (set (reg:DF 178)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64])) speller.c:176 -1
     (nil))

(insn 367 366 368 41 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 178)) speller.c:176 -1
     (nil))

(insn 368 367 369 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0xb6a305a0 *.LC12>)) speller.c:176 -1
     (nil))

(call_insn 369 368 370 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:176 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 370 369 371 41 (set (reg:DF 179)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64])) speller.c:177 -1
     (nil))

(insn 371 370 372 41 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 179)) speller.c:177 -1
     (nil))

(insn 372 371 373 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0xb6a30600 *.LC13>)) speller.c:177 -1
     (nil))

(call_insn 373 372 374 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:177 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 374 373 375 41 (set (reg:DF 180)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64])) speller.c:178 -1
     (nil))

(insn 375 374 376 41 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 180)) speller.c:178 -1
     (nil))

(insn 376 375 377 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0xb6a30660 *.LC14>)) speller.c:178 -1
     (nil))

(call_insn 377 376 378 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:178 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 378 377 379 41 (set (reg:DF 181)
        (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64])) speller.c:179 -1
     (nil))

(insn 379 378 380 41 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 181)) speller.c:179 -1
     (nil))

(insn 380 379 381 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0xb6a306c0 *.LC15>)) speller.c:179 -1
     (nil))

(call_insn 381 380 382 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:179 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 382 381 383 41 (set (reg:XF 107 [ D.1929 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 ti_load+0 S8 A64]))) speller.c:180 -1
     (nil))

(insn 383 382 384 41 (set (reg:XF 108 [ D.1930 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])) [0 ti_check+0 S8 A64]))) speller.c:180 -1
     (nil))

(insn 384 383 385 41 (set (reg:XF 109 [ D.1931 ])
        (plus:XF (reg:XF 107 [ D.1929 ])
            (reg:XF 108 [ D.1930 ]))) speller.c:180 -1
     (nil))

(insn 385 384 386 41 (set (reg:XF 110 [ D.1932 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [0 ti_size+0 S8 A64]))) speller.c:180 -1
     (nil))

(insn 386 385 387 41 (set (reg:XF 111 [ D.1933 ])
        (plus:XF (reg:XF 109 [ D.1931 ])
            (reg:XF 110 [ D.1932 ]))) speller.c:180 -1
     (nil))

(insn 387 386 388 41 (set (reg:XF 112 [ D.1934 ])
        (float_extend:XF (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])) [0 ti_unload+0 S8 A64]))) speller.c:180 -1
     (nil))

(insn 388 387 389 41 (set (reg:XF 113 [ D.1935 ])
        (plus:XF (reg:XF 111 [ D.1933 ])
            (reg:XF 112 [ D.1934 ]))) speller.c:180 -1
     (nil))

(insn 389 388 390 41 (parallel [
            (set (reg:DF 114 [ D.1936 ])
                (float_truncate:DF (reg:XF 113 [ D.1935 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -288 [0xfffffffffffffee0])) [0 S8 A64]))
        ]) speller.c:180 -1
     (nil))

(insn 390 389 391 41 (set (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DF 114 [ D.1936 ])) speller.c:180 -1
     (nil))

(insn 391 390 392 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0xb6a30720 *.LC16>)) speller.c:180 -1
     (nil))

(call_insn 392 391 393 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb6990180 printf>) [0 __builtin_printf S1 A8])
            (const_int 12 [0xc]))) speller.c:180 -1
     (nil)
    (expr_list:REG_BR_PRED (use (mem/f:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32]))
        (expr_list:DF (use (mem:DF (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0 S8 A32]))
            (nil))))

(insn 393 392 394 41 (set (reg:SI 59 [ D.1851 ])
        (const_int 0 [0])) speller.c:184 -1
     (nil))

;; Successors:  42 (fallthru)


;; Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  5 10 15 38 40 41 (fallthru)
(code_label 394 393 395 42 3 "" [5 uses])

(note 395 394 396 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

;; Successors:  43 (fallthru)


;; Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  42 (fallthru)
(code_label 396 395 397 43 24 "" [0 uses])

(note 397 396 398 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 398 397 399 43 (set (reg:SI 115 [ <retval> ])
        (reg:SI 59 [ D.1851 ])) -1
     (nil))

(jump_insn 399 398 400 43 (set (pc)
        (label_ref 401)) -1
     (nil)
 -> 401)

;; Successors:  45

(barrier 400 399 411)


;; Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl modified.
;; Predecessors: 
(note 411 400 403 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 403 411 404 44 (clobber (reg/i:SI 0 ax)) speller.c:185 -1
     (nil))

(insn 404 403 401 44 (clobber (reg:SI 115 [ <retval> ])) speller.c:185 -1
     (nil))

;; Successors:  45 (fallthru)


;; Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl modified.
;; Predecessors:  43 44 (fallthru)
(code_label 401 404 412 45 1 "" [1 uses])

(note 412 401 402 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 402 412 405 45 (set (reg/i:SI 0 ax)
        (reg:SI 115 [ <retval> ])) speller.c:185 -1
     (nil))

(insn 405 402 406 45 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                                (const_int -4 [0xfffffffffffffffc])) [0 D.1941+0 S4 A32])
                        (const_int 20 [0x14])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:SI))
        ]) speller.c:185 -1
     (nil))

(jump_insn 406 405 413 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) speller.c:185 -1
     (nil)
 -> 409)

;; Successors:  47 46 (fallthru)


;; Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl modified.
;; Predecessors:  45 (fallthru)
(note 413 406 407 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(call_insn 407 413 408 46 (call (mem:QI (symbol_ref:SI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xb6a0ed80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) speller.c:185 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

;; Successors: 

(barrier 408 407 409)


;; Basic block 47 , prev 46, next 1, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl.
;; Predecessors:  45
(code_label 409 408 414 47 25 "" [1 uses])

(note 414 409 410 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 410 414 0 47 (use (reg/i:SI 0 ax)) speller.c:185 -1
     (nil))

;; Successors:  EXIT [100.0%]  (fallthru)


;; Function calculate (calculate, funcdef_no=1, decl_uid=1783, cgraph_uid=1)

calculate (const struct rusage * b, const struct rusage * a)
{
  long double D.1845;
  long double D.1844;
  double D.1843;
  long int D.1842;
  long int D.1841;
  long int D.1840;
  long int D.1839;
  long int D.1838;
  long int D.1837;
  long int D.1836;
  long int D.1835;
  long int D.1834;
  long int D.1833;
  long int D.1832;
  long int D.1831;
  long int D.1830;
  long int D.1829;
  long int D.1828;
  long int D.1827;
  long int D.1826;
  long int D.1825;
  long int D.1824;
  double D.1823;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (b_2(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 (true) 3 (false)

  # BLOCK 3
  # PRED: 2 (false)
  if (a_3(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 2 (true) 3 (true)
  D.1823_27 = 0.0;
  goto <bb 6> (<L3>);
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.1824_4 = a_3(D)->ru_utime.tv_sec;
  D.1825_5 = D.1824_4 * 1000000;
  D.1826_6 = a_3(D)->ru_utime.tv_usec;
  D.1827_7 = D.1825_5 + D.1826_6;
  D.1828_8 = b_2(D)->ru_utime.tv_sec;
  D.1829_9 = D.1828_8 * -1000000;
  D.1830_10 = b_2(D)->ru_utime.tv_usec;
  D.1831_11 = D.1829_9 - D.1830_10;
  D.1832_12 = D.1827_7 + D.1831_11;
  D.1833_13 = a_3(D)->ru_stime.tv_sec;
  D.1834_14 = D.1833_13 * 1000000;
  D.1835_15 = a_3(D)->ru_stime.tv_usec;
  D.1836_16 = D.1834_14 + D.1835_15;
  D.1837_17 = b_2(D)->ru_stime.tv_sec;
  D.1838_18 = D.1837_17 * -1000000;
  D.1839_19 = b_2(D)->ru_stime.tv_usec;
  D.1840_20 = D.1838_18 - D.1839_19;
  D.1841_21 = D.1836_16 + D.1840_20;
  D.1842_22 = D.1832_12 + D.1841_21;
  D.1843_23 = (double) D.1842_22;
  D.1844_24 = (long double) D.1843_23;
  D.1845_25 = D.1844_24 / 1.0e+6;
  D.1823_26 = (double) D.1845_25;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # D.1823_1 = PHI <D.1823_27(4), D.1823_26(5)>
<L3>:
  return D.1823_1;
  # SUCC: EXIT

}



Partition map 

Partition 1 (D.1823_1 - 1 )
Partition 2 (b_2(D) - 2 )
Partition 3 (a_3(D) - 3 )
Partition 4 (D.1824_4 - 4 )
Partition 5 (D.1825_5 - 5 )
Partition 6 (D.1826_6 - 6 )
Partition 7 (D.1827_7 - 7 )
Partition 8 (D.1828_8 - 8 )
Partition 9 (D.1829_9 - 9 )
Partition 10 (D.1830_10 - 10 )
Partition 11 (D.1831_11 - 11 )
Partition 12 (D.1832_12 - 12 )
Partition 13 (D.1833_13 - 13 )
Partition 14 (D.1834_14 - 14 )
Partition 15 (D.1835_15 - 15 )
Partition 16 (D.1836_16 - 16 )
Partition 17 (D.1837_17 - 17 )
Partition 18 (D.1838_18 - 18 )
Partition 19 (D.1839_19 - 19 )
Partition 20 (D.1840_20 - 20 )
Partition 21 (D.1841_21 - 21 )
Partition 22 (D.1842_22 - 22 )
Partition 23 (D.1843_23 - 23 )
Partition 24 (D.1844_24 - 24 )
Partition 25 (D.1845_25 - 25 )
Partition 26 (D.1823_26 - 26 )
Partition 27 (D.1823_27 - 27 )


Partition map 

Partition 0 (D.1823_1 - 1 )
Partition 1 (b_2(D) - 2 )
Partition 2 (a_3(D) - 3 )
Partition 3 (D.1823_26 - 26 )
Partition 4 (D.1823_27 - 27 )


Live on entry to BB2 : b_2(D)  a_3(D)  

Live on entry to BB3 : b_2(D)  a_3(D)  

Live on entry to BB4 : 

Live on entry to BB5 : b_2(D)  a_3(D)  

Live on entry to BB6 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (D.1823_1 - 1 )
Partition 1 (b_2(D) - 2 )
Partition 2 (a_3(D) - 3 )
Partition 3 (D.1823_26 - 26 )
Partition 4 (D.1823_27 - 27 )

Coalesce list: (1)D.1823_1 & (26)D.1823_26 [map: 0, 3] : Success -> 0
Coalesce list: (1)D.1823_1 & (27)D.1823_27 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (D.1823_1 - 1 26 27 )
Partition 1 (b_2(D) - 2 )
Partition 2 (a_3(D) - 3 )
Partition 3 (D.1824_4 - 4 )
Partition 4 (D.1825_5 - 5 )
Partition 5 (D.1826_6 - 6 )
Partition 6 (D.1827_7 - 7 )
Partition 7 (D.1828_8 - 8 )
Partition 8 (D.1829_9 - 9 )
Partition 9 (D.1830_10 - 10 )
Partition 10 (D.1831_11 - 11 )
Partition 11 (D.1832_12 - 12 )
Partition 12 (D.1833_13 - 13 )
Partition 13 (D.1834_14 - 14 )
Partition 14 (D.1835_15 - 15 )
Partition 15 (D.1836_16 - 16 )
Partition 16 (D.1837_17 - 17 )
Partition 17 (D.1838_18 - 18 )
Partition 18 (D.1839_19 - 19 )
Partition 19 (D.1840_20 - 20 )
Partition 20 (D.1841_21 - 21 )
Partition 21 (D.1842_22 - 22 )
Partition 22 (D.1843_23 - 23 )
Partition 23 (D.1844_24 - 24 )
Partition 24 (D.1845_25 - 25 )

calculate (const struct rusage * b, const struct rusage * a)
{
  long double D.1845;
  long double D.1844;
  double D.1843;
  long int D.1842;
  long int D.1841;
  long int D.1840;
  long int D.1839;
  long int D.1838;
  long int D.1837;
  long int D.1836;
  long int D.1835;
  long int D.1834;
  long int D.1833;
  long int D.1832;
  long int D.1831;
  long int D.1830;
  long int D.1829;
  long int D.1828;
  long int D.1827;
  long int D.1826;
  long int D.1825;
  long int D.1824;
  double D.1823;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (b_2(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 (true) 3 (false)

  # BLOCK 3
  # PRED: 2 (false)
  if (a_3(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 2 (true) 3 (true)
  D.1823_27 = 0.0;
  goto <bb 6> (<L3>);
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.1824_4 = a_3(D)->ru_utime.tv_sec;
  D.1825_5 = D.1824_4 * 1000000;
  D.1826_6 = a_3(D)->ru_utime.tv_usec;
  D.1827_7 = D.1825_5 + D.1826_6;
  D.1828_8 = b_2(D)->ru_utime.tv_sec;
  D.1829_9 = D.1828_8 * -1000000;
  D.1830_10 = b_2(D)->ru_utime.tv_usec;
  D.1831_11 = D.1829_9 - D.1830_10;
  D.1832_12 = D.1827_7 + D.1831_11;
  D.1833_13 = a_3(D)->ru_stime.tv_sec;
  D.1834_14 = D.1833_13 * 1000000;
  D.1835_15 = a_3(D)->ru_stime.tv_usec;
  D.1836_16 = D.1834_14 + D.1835_15;
  D.1837_17 = b_2(D)->ru_stime.tv_sec;
  D.1838_18 = D.1837_17 * -1000000;
  D.1839_19 = b_2(D)->ru_stime.tv_usec;
  D.1840_20 = D.1838_18 - D.1839_19;
  D.1841_21 = D.1836_16 + D.1840_20;
  D.1842_22 = D.1832_12 + D.1841_21;
  D.1843_23 = (double) D.1842_22;
  D.1844_24 = (long double) D.1843_23;
  D.1845_25 = D.1844_24 / 1.0e+6;
  D.1823_26 = (double) D.1845_25;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # D.1823_1 = PHI <D.1823_27(4), D.1823_26(5)>
<L3>:
  return D.1823_1;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; if (b_2(D) == 0B)

(insn 5 4 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:195 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (a_3(D) == 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 a+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) speller.c:195 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 10 9 11 27 "" [0 uses])

(note 11 10 0 NOTE_INSN_BASIC_BLOCK)

;; D.1823_27 = 0.0;

(insn 12 11 0 (set (reg:DF 59 [ D.1823 ])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:196 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 15 14 16 28 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; D.1824_4 = a_3(D)->ru_utime.tv_sec;

(insn 17 16 18 (set (reg/f:SI 83)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 18 17 0 (set (reg:SI 60 [ D.1824 ])
        (mem/j:SI (reg/f:SI 83) [0 a_3(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:198 -1
     (nil))

;; D.1825_5 = D.1824_4 * 1000000;

(insn 19 18 0 (parallel [
            (set (reg:SI 61 [ D.1825 ])
                (mult:SI (reg:SI 60 [ D.1824 ])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

;; D.1826_6 = a_3(D)->ru_utime.tv_usec;

(insn 20 19 21 (set (reg/f:SI 84)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 21 20 0 (set (reg:SI 62 [ D.1826 ])
        (mem/j:SI (plus:SI (reg/f:SI 84)
                (const_int 4 [0x4])) [0 a_3(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:198 -1
     (nil))

;; D.1827_7 = D.1825_5 + D.1826_6;

(insn 22 21 0 (parallel [
            (set (reg:SI 63 [ D.1827 ])
                (plus:SI (reg:SI 61 [ D.1825 ])
                    (reg:SI 62 [ D.1826 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

;; D.1828_8 = b_2(D)->ru_utime.tv_sec;

(insn 23 22 24 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 24 23 0 (set (reg:SI 64 [ D.1828 ])
        (mem/j:SI (reg/f:SI 85) [0 b_2(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:199 -1
     (nil))

;; D.1829_9 = D.1828_8 * -1000000;

(insn 25 24 0 (parallel [
            (set (reg:SI 65 [ D.1829 ])
                (mult:SI (reg:SI 64 [ D.1828 ])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

;; D.1830_10 = b_2(D)->ru_utime.tv_usec;

(insn 26 25 27 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 27 26 0 (set (reg:SI 66 [ D.1830 ])
        (mem/j:SI (plus:SI (reg/f:SI 86)
                (const_int 4 [0x4])) [0 b_2(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:199 -1
     (nil))

;; D.1831_11 = D.1829_9 - D.1830_10;

(insn 28 27 0 (parallel [
            (set (reg:SI 67 [ D.1831 ])
                (minus:SI (reg:SI 65 [ D.1829 ])
                    (reg:SI 66 [ D.1830 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

;; D.1832_12 = D.1827_7 + D.1831_11;

(insn 29 28 0 (parallel [
            (set (reg:SI 68 [ D.1832 ])
                (plus:SI (reg:SI 63 [ D.1827 ])
                    (reg:SI 67 [ D.1831 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

;; D.1833_13 = a_3(D)->ru_stime.tv_sec;

(insn 30 29 31 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 31 30 0 (set (reg:SI 69 [ D.1833 ])
        (mem/j:SI (plus:SI (reg/f:SI 87)
                (const_int 8 [0x8])) [0 a_3(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:200 -1
     (nil))

;; D.1834_14 = D.1833_13 * 1000000;

(insn 32 31 0 (parallel [
            (set (reg:SI 70 [ D.1834 ])
                (mult:SI (reg:SI 69 [ D.1833 ])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

;; D.1835_15 = a_3(D)->ru_stime.tv_usec;

(insn 33 32 34 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 34 33 0 (set (reg:SI 71 [ D.1835 ])
        (mem/j:SI (plus:SI (reg/f:SI 88)
                (const_int 12 [0xc])) [0 a_3(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:200 -1
     (nil))

;; D.1836_16 = D.1834_14 + D.1835_15;

(insn 35 34 0 (parallel [
            (set (reg:SI 72 [ D.1836 ])
                (plus:SI (reg:SI 70 [ D.1834 ])
                    (reg:SI 71 [ D.1835 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

;; D.1837_17 = b_2(D)->ru_stime.tv_sec;

(insn 36 35 37 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 37 36 0 (set (reg:SI 73 [ D.1837 ])
        (mem/j:SI (plus:SI (reg/f:SI 89)
                (const_int 8 [0x8])) [0 b_2(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:201 -1
     (nil))

;; D.1838_18 = D.1837_17 * -1000000;

(insn 38 37 0 (parallel [
            (set (reg:SI 74 [ D.1838 ])
                (mult:SI (reg:SI 73 [ D.1837 ])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 -1
     (nil))

;; D.1839_19 = b_2(D)->ru_stime.tv_usec;

(insn 39 38 40 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 40 39 0 (set (reg:SI 75 [ D.1839 ])
        (mem/j:SI (plus:SI (reg/f:SI 90)
                (const_int 12 [0xc])) [0 b_2(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:201 -1
     (nil))

;; D.1840_20 = D.1838_18 - D.1839_19;

(insn 41 40 0 (parallel [
            (set (reg:SI 76 [ D.1840 ])
                (minus:SI (reg:SI 74 [ D.1838 ])
                    (reg:SI 75 [ D.1839 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 -1
     (nil))

;; D.1841_21 = D.1836_16 + D.1840_20;

(insn 42 41 0 (parallel [
            (set (reg:SI 77 [ D.1841 ])
                (plus:SI (reg:SI 72 [ D.1836 ])
                    (reg:SI 76 [ D.1840 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

;; D.1842_22 = D.1832_12 + D.1841_21;

(insn 43 42 0 (parallel [
            (set (reg:SI 78 [ D.1842 ])
                (plus:SI (reg:SI 68 [ D.1832 ])
                    (reg:SI 77 [ D.1841 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

;; D.1843_23 = (double) D.1842_22;

(insn 44 43 0 (set (reg:DF 79 [ D.1843 ])
        (float:DF (reg:SI 78 [ D.1842 ]))) speller.c:198 -1
     (nil))

;; D.1844_24 = (long double) D.1843_23;

(insn 45 44 0 (set (reg:XF 80 [ D.1844 ])
        (float_extend:XF (reg:DF 79 [ D.1843 ]))) speller.c:198 -1
     (nil))

;; D.1845_25 = D.1844_24 / 1.0e+6;

(insn 46 45 47 (set (reg:XF 91)
        (mem/u/c:XF (symbol_ref/u:SI ("*.LC18") [flags 0x2]) [0 S12 A128])) speller.c:198 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))

(insn 47 46 0 (set (reg:XF 81 [ D.1845 ])
        (div:XF (reg:XF 80 [ D.1844 ])
            (reg:XF 91))) speller.c:198 -1
     (nil))

;; D.1823_26 = (double) D.1845_25;

(insn 48 47 0 (parallel [
            (set (reg:DF 59 [ D.1823 ])
                (float_truncate:DF (reg:XF 81 [ D.1845 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 S8 A64]))
        ]) speller.c:198 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 49 48 50 29 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; return D.1823_1;

(insn 51 50 52 (set (reg:DF 82 [ <retval> ])
        (reg:DF 59 [ D.1823 ])) -1
     (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 53 52 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)


;; Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl.
;; Predecessors:  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)

;; Successors:  3 [100.0%]  (fallthru)


;; Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 -1
     (nil))

(jump_insn 6 5 7 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 10)
            (pc))) speller.c:195 -1
     (nil)
 -> 10)

;; Successors:  5 4 (fallthru)


;; Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  3 (fallthru)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 a+0 S4 A32])
            (const_int 0 [0]))) speller.c:195 -1
     (nil))

(jump_insn 9 8 10 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) speller.c:195 -1
     (nil)
 -> 15)

;; Successors:  5 (fallthru) 6


;; Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  3 4 (fallthru)
(code_label 10 9 11 5 27 "" [1 uses])

(note 11 10 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 5 (set (reg:DF 59 [ D.1823 ])
        (mem/u/c:DF (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0 S8 A64])) speller.c:196 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(jump_insn 13 12 14 5 (set (pc)
        (label_ref 49)) speller.c:196 -1
     (nil)
 -> 49)

;; Successors:  7

(barrier 14 13 15)


;; Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl.
;; Predecessors:  4
(code_label 15 14 16 6 28 "" [1 uses])

(note 16 15 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 6 (set (reg/f:SI 83)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 18 17 19 6 (set (reg:SI 60 [ D.1824 ])
        (mem/j:SI (reg/f:SI 83) [0 a_3(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 19 18 20 6 (parallel [
            (set (reg:SI 61 [ D.1825 ])
                (mult:SI (reg:SI 60 [ D.1824 ])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

(insn 20 19 21 6 (set (reg/f:SI 84)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 21 20 22 6 (set (reg:SI 62 [ D.1826 ])
        (mem/j:SI (plus:SI (reg/f:SI 84)
                (const_int 4 [0x4])) [0 a_3(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:198 -1
     (nil))

(insn 22 21 23 6 (parallel [
            (set (reg:SI 63 [ D.1827 ])
                (plus:SI (reg:SI 61 [ D.1825 ])
                    (reg:SI 62 [ D.1826 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

(insn 23 22 24 6 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 24 23 25 6 (set (reg:SI 64 [ D.1828 ])
        (mem/j:SI (reg/f:SI 85) [0 b_2(D)->ru_utime.tv_sec+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 25 24 26 6 (parallel [
            (set (reg:SI 65 [ D.1829 ])
                (mult:SI (reg:SI 64 [ D.1828 ])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

(insn 26 25 27 6 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 27 26 28 6 (set (reg:SI 66 [ D.1830 ])
        (mem/j:SI (plus:SI (reg/f:SI 86)
                (const_int 4 [0x4])) [0 b_2(D)->ru_utime.tv_usec+0 S4 A32])) speller.c:199 -1
     (nil))

(insn 28 27 29 6 (parallel [
            (set (reg:SI 67 [ D.1831 ])
                (minus:SI (reg:SI 65 [ D.1829 ])
                    (reg:SI 66 [ D.1830 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

(insn 29 28 30 6 (parallel [
            (set (reg:SI 68 [ D.1832 ])
                (plus:SI (reg:SI 63 [ D.1827 ])
                    (reg:SI 67 [ D.1831 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:198 -1
     (nil))

(insn 30 29 31 6 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 31 30 32 6 (set (reg:SI 69 [ D.1833 ])
        (mem/j:SI (plus:SI (reg/f:SI 87)
                (const_int 8 [0x8])) [0 a_3(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 32 31 33 6 (parallel [
            (set (reg:SI 70 [ D.1834 ])
                (mult:SI (reg:SI 69 [ D.1833 ])
                    (const_int 1000000 [0xf4240])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

(insn 33 32 34 6 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 a+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 34 33 35 6 (set (reg:SI 71 [ D.1835 ])
        (mem/j:SI (plus:SI (reg/f:SI 88)
                (const_int 12 [0xc])) [0 a_3(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:200 -1
     (nil))

(insn 35 34 36 6 (parallel [
            (set (reg:SI 72 [ D.1836 ])
                (plus:SI (reg:SI 70 [ D.1834 ])
                    (reg:SI 71 [ D.1835 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

(insn 36 35 37 6 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 37 36 38 6 (set (reg:SI 73 [ D.1837 ])
        (mem/j:SI (plus:SI (reg/f:SI 89)
                (const_int 8 [0x8])) [0 b_2(D)->ru_stime.tv_sec+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 38 37 39 6 (parallel [
            (set (reg:SI 74 [ D.1838 ])
                (mult:SI (reg:SI 73 [ D.1837 ])
                    (const_int -1000000 [0xfffffffffff0bdc0])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 -1
     (nil))

(insn 39 38 40 6 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 53 virtual-incoming-args) [0 b+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 40 39 41 6 (set (reg:SI 75 [ D.1839 ])
        (mem/j:SI (plus:SI (reg/f:SI 90)
                (const_int 12 [0xc])) [0 b_2(D)->ru_stime.tv_usec+0 S4 A32])) speller.c:201 -1
     (nil))

(insn 41 40 42 6 (parallel [
            (set (reg:SI 76 [ D.1840 ])
                (minus:SI (reg:SI 74 [ D.1838 ])
                    (reg:SI 75 [ D.1839 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:201 -1
     (nil))

(insn 42 41 43 6 (parallel [
            (set (reg:SI 77 [ D.1841 ])
                (plus:SI (reg:SI 72 [ D.1836 ])
                    (reg:SI 76 [ D.1840 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:200 -1
     (nil))

(insn 43 42 44 6 (parallel [
            (set (reg:SI 78 [ D.1842 ])
                (plus:SI (reg:SI 68 [ D.1832 ])
                    (reg:SI 77 [ D.1841 ])))
            (clobber (reg:CC 17 flags))
        ]) speller.c:199 -1
     (nil))

(insn 44 43 45 6 (set (reg:DF 79 [ D.1843 ])
        (float:DF (reg:SI 78 [ D.1842 ]))) speller.c:198 -1
     (nil))

(insn 45 44 46 6 (set (reg:XF 80 [ D.1844 ])
        (float_extend:XF (reg:DF 79 [ D.1843 ]))) speller.c:198 -1
     (nil))

(insn 46 45 47 6 (set (reg:XF 91)
        (mem/u/c:XF (symbol_ref/u:SI ("*.LC18") [flags 0x2]) [0 S12 A128])) speller.c:198 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+6 [0x0.f424p+20])
        (nil)))

(insn 47 46 48 6 (set (reg:XF 81 [ D.1845 ])
        (div:XF (reg:XF 80 [ D.1844 ])
            (reg:XF 91))) speller.c:198 -1
     (nil))

(insn 48 47 49 6 (parallel [
            (set (reg:DF 59 [ D.1823 ])
                (float_truncate:DF (reg:XF 81 [ D.1845 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 S8 A64]))
        ]) speller.c:198 -1
     (nil))

;; Successors:  7 (fallthru)


;; Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 0, maybe hot, flags: new reachable rtl modified.
;; Predecessors:  5 6 (fallthru)
(code_label 49 48 50 7 29 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 7 (set (reg:DF 82 [ <retval> ])
        (reg:DF 59 [ D.1823 ])) -1
     (nil))

(jump_insn 52 51 53 7 (set (pc)
        (label_ref 54)) -1
     (nil)
 -> 54)

;; Successors:  9

(barrier 53 52 59)


;; Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl modified.
;; Predecessors: 
(note 59 53 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 56 59 57 8 (clobber (reg/i:DF 8 st)) speller.c:203 -1
     (nil))

(insn 57 56 54 8 (clobber (reg:DF 82 [ <retval> ])) speller.c:203 -1
     (nil))

;; Successors:  9 (fallthru)


;; Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 0, maybe hot, flags: new rtl.
;; Predecessors:  7 8 (fallthru)
(code_label 54 57 60 9 26 "" [1 uses])

(note 60 54 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 60 58 9 (set (reg/i:DF 8 st)
        (reg:DF 82 [ <retval> ])) speller.c:203 -1
     (nil))

(insn 58 55 0 9 (use (reg/i:DF 8 st)) speller.c:203 -1
     (nil))

;; Successors:  EXIT [100.0%]  (fallthru)

